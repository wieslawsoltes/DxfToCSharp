### YamlMime:ManagedReference
items:
- uid: netDxf.Entities.DimensionBlock
  commentId: T:netDxf.Entities.DimensionBlock
  id: DimensionBlock
  parent: netDxf.Entities
  children:
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.AlignedDimension,System.String)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular2LineDimension,System.String)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular3PointDimension,System.String)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.ArcLengthDimension,System.String)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.DiametricDimension,System.String)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension,System.String)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.LinearDimension,System.String)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.OrdinateDimension,System.String)
  - netDxf.Entities.DimensionBlock.Build(netDxf.Entities.RadialDimension,System.String)
  langs:
  - csharp
  - vb
  name: DimensionBlock
  nameWithType: DimensionBlock
  fullName: netDxf.Entities.DimensionBlock
  type: Class
  source:
    id: DimensionBlock
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 38
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Holds methods to build the dimension blocks.
  example: []
  syntax:
    content: public static class DimensionBlock
    content.vb: Public Module DimensionBlock
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension)
  id: Build(netDxf.Entities.Dimension)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(Dimension)
  nameWithType: DimensionBlock.Build(Dimension)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 655
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    By the fault the block will have the name "DimBlock". The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(Dimension dim)
    parameters:
    - id: dim
      type: netDxf.Entities.Dimension
      description: <xref href="netDxf.Entities.Dimension?text=Dimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As Dimension) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension,System.String)
  id: Build(netDxf.Entities.Dimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(Dimension, string)
  nameWithType: DimensionBlock.Build(Dimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 672
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(Dimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.Dimension
      description: <xref href="netDxf.Entities.Dimension?text=Dimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As Dimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(Dimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Dimension, String)
  name.vb: Build(Dimension, String)
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.AlignedDimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.AlignedDimension,System.String)
  id: Build(netDxf.Entities.AlignedDimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(AlignedDimension, string)
  nameWithType: DimensionBlock.Build(AlignedDimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.AlignedDimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 721
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(AlignedDimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.AlignedDimension
      description: <xref href="netDxf.Entities.AlignedDimension?text=AlignedDimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As AlignedDimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(AlignedDimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.AlignedDimension, String)
  name.vb: Build(AlignedDimension, String)
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.LinearDimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.LinearDimension,System.String)
  id: Build(netDxf.Entities.LinearDimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(LinearDimension, string)
  nameWithType: DimensionBlock.Build(LinearDimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.LinearDimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 811
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(LinearDimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.LinearDimension
      description: <xref href="netDxf.Entities.LinearDimension?text=LinearDimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As LinearDimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(LinearDimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.LinearDimension, String)
  name.vb: Build(LinearDimension, String)
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular2LineDimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular2LineDimension,System.String)
  id: Build(netDxf.Entities.Angular2LineDimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(Angular2LineDimension, string)
  nameWithType: DimensionBlock.Build(Angular2LineDimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular2LineDimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 910
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(Angular2LineDimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.Angular2LineDimension
      description: <xref href="netDxf.Entities.Angular2LineDimension?text=Angular2LineDimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As Angular2LineDimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(Angular2LineDimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular2LineDimension, String)
  name.vb: Build(Angular2LineDimension, String)
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular3PointDimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular3PointDimension,System.String)
  id: Build(netDxf.Entities.Angular3PointDimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(Angular3PointDimension, string)
  nameWithType: DimensionBlock.Build(Angular3PointDimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular3PointDimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 1023
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(Angular3PointDimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.Angular3PointDimension
      description: <xref href="netDxf.Entities.Angular3PointDimension?text=Angular3PointDimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As Angular3PointDimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(Angular3PointDimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.Angular3PointDimension, String)
  name.vb: Build(Angular3PointDimension, String)
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.DiametricDimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.DiametricDimension,System.String)
  id: Build(netDxf.Entities.DiametricDimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(DiametricDimension, string)
  nameWithType: DimensionBlock.Build(DiametricDimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.DiametricDimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 1137
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(DiametricDimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.DiametricDimension
      description: <xref href="netDxf.Entities.DiametricDimension?text=DiametricDimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As DiametricDimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(DiametricDimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.DiametricDimension, String)
  name.vb: Build(DiametricDimension, String)
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.RadialDimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.RadialDimension,System.String)
  id: Build(netDxf.Entities.RadialDimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(RadialDimension, string)
  nameWithType: DimensionBlock.Build(RadialDimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.RadialDimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 1255
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(RadialDimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.RadialDimension
      description: <xref href="netDxf.Entities.RadialDimension?text=RadialDimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As RadialDimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(RadialDimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.RadialDimension, String)
  name.vb: Build(RadialDimension, String)
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.OrdinateDimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.OrdinateDimension,System.String)
  id: Build(netDxf.Entities.OrdinateDimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(OrdinateDimension, string)
  nameWithType: DimensionBlock.Build(OrdinateDimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.OrdinateDimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 1367
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(OrdinateDimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.OrdinateDimension
      description: <xref href="netDxf.Entities.OrdinateDimension?text=OrdinateDimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As OrdinateDimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(OrdinateDimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.OrdinateDimension, String)
  name.vb: Build(OrdinateDimension, String)
- uid: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.ArcLengthDimension,System.String)
  commentId: M:netDxf.Entities.DimensionBlock.Build(netDxf.Entities.ArcLengthDimension,System.String)
  id: Build(netDxf.Entities.ArcLengthDimension,System.String)
  parent: netDxf.Entities.DimensionBlock
  langs:
  - csharp
  - vb
  name: Build(ArcLengthDimension, string)
  nameWithType: DimensionBlock.Build(ArcLengthDimension, string)
  fullName: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.ArcLengthDimension, string)
  type: Method
  source:
    id: Build
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/DimensionBlock.cs
    startLine: 1470
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a block that represents the drawing of the specified dimension.
  remarks: >-
    The block's name is irrelevant when the dimension belongs to a document,

    it will be automatically renamed to accommodate to the nomenclature of the DXF.<br />

    The dimension block creation only supports a limited number of <xref href="netDxf.Tables.DimensionStyle?text=dimension+style" data-throw-if-not-resolved="false"></xref> properties.

    Also the list of <xref href="netDxf.Tables.DimensionStyleOverride?text=dimension+style+overrides" data-throw-if-not-resolved="false"></xref> associated with the specified dimension will be applied where necessary.
  example: []
  syntax:
    content: public static Block Build(ArcLengthDimension dim, string name)
    parameters:
    - id: dim
      type: netDxf.Entities.ArcLengthDimension
      description: <xref href="netDxf.Entities.ArcLengthDimension?text=ArcLengthDimension" data-throw-if-not-resolved="false"></xref> from which the block will be created.
    - id: name
      type: System.String
      description: The blocks name.
    return:
      type: netDxf.Blocks.Block
      description: A block that represents the specified dimension.
    content.vb: Public Shared Function Build([dim] As ArcLengthDimension, name As String) As Block
  overload: netDxf.Entities.DimensionBlock.Build*
  nameWithType.vb: DimensionBlock.Build(ArcLengthDimension, String)
  fullName.vb: netDxf.Entities.DimensionBlock.Build(netDxf.Entities.ArcLengthDimension, String)
  name.vb: Build(ArcLengthDimension, String)
references:
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.Entities.Dimension
  commentId: T:netDxf.Entities.Dimension
  parent: netDxf.Entities
  href: netDxf.Entities.Dimension.html
  name: Dimension
  nameWithType: Dimension
  fullName: netDxf.Entities.Dimension
- uid: netDxf.Tables.DimensionStyle
  commentId: T:netDxf.Tables.DimensionStyle
  parent: netDxf.Tables
  href: netDxf.Tables.DimensionStyle.html
  name: DimensionStyle
  nameWithType: DimensionStyle
  fullName: netDxf.Tables.DimensionStyle
- uid: netDxf.Tables.DimensionStyleOverride
  commentId: T:netDxf.Tables.DimensionStyleOverride
  parent: netDxf.Tables
  href: netDxf.Tables.DimensionStyleOverride.html
  name: DimensionStyleOverride
  nameWithType: DimensionStyleOverride
  fullName: netDxf.Tables.DimensionStyleOverride
- uid: netDxf.Entities.DimensionBlock.Build*
  commentId: Overload:netDxf.Entities.DimensionBlock.Build
  href: netDxf.Entities.DimensionBlock.html#netDxf_Entities_DimensionBlock_Build_netDxf_Entities_Dimension_
  name: Build
  nameWithType: DimensionBlock.Build
  fullName: netDxf.Entities.DimensionBlock.Build
- uid: netDxf.Blocks.Block
  commentId: T:netDxf.Blocks.Block
  parent: netDxf.Blocks
  href: netDxf.Blocks.Block.html
  name: Block
  nameWithType: Block
  fullName: netDxf.Blocks.Block
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  href: netDxf.html
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
- uid: netDxf.Blocks
  commentId: N:netDxf.Blocks
  href: netDxf.html
  name: netDxf.Blocks
  nameWithType: netDxf.Blocks
  fullName: netDxf.Blocks
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Blocks
    name: Blocks
    href: netDxf.Blocks.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Blocks
    name: Blocks
    href: netDxf.Blocks.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Entities.AlignedDimension
  commentId: T:netDxf.Entities.AlignedDimension
  parent: netDxf.Entities
  href: netDxf.Entities.AlignedDimension.html
  name: AlignedDimension
  nameWithType: AlignedDimension
  fullName: netDxf.Entities.AlignedDimension
- uid: netDxf.Entities.LinearDimension
  commentId: T:netDxf.Entities.LinearDimension
  parent: netDxf.Entities
  href: netDxf.Entities.LinearDimension.html
  name: LinearDimension
  nameWithType: LinearDimension
  fullName: netDxf.Entities.LinearDimension
- uid: netDxf.Entities.Angular2LineDimension
  commentId: T:netDxf.Entities.Angular2LineDimension
  parent: netDxf.Entities
  href: netDxf.Entities.Angular2LineDimension.html
  name: Angular2LineDimension
  nameWithType: Angular2LineDimension
  fullName: netDxf.Entities.Angular2LineDimension
- uid: netDxf.Entities.Angular3PointDimension
  commentId: T:netDxf.Entities.Angular3PointDimension
  parent: netDxf.Entities
  href: netDxf.Entities.Angular3PointDimension.html
  name: Angular3PointDimension
  nameWithType: Angular3PointDimension
  fullName: netDxf.Entities.Angular3PointDimension
- uid: netDxf.Entities.DiametricDimension
  commentId: T:netDxf.Entities.DiametricDimension
  parent: netDxf.Entities
  href: netDxf.Entities.DiametricDimension.html
  name: DiametricDimension
  nameWithType: DiametricDimension
  fullName: netDxf.Entities.DiametricDimension
- uid: netDxf.Entities.RadialDimension
  commentId: T:netDxf.Entities.RadialDimension
  parent: netDxf.Entities
  href: netDxf.Entities.RadialDimension.html
  name: RadialDimension
  nameWithType: RadialDimension
  fullName: netDxf.Entities.RadialDimension
- uid: netDxf.Entities.OrdinateDimension
  commentId: T:netDxf.Entities.OrdinateDimension
  parent: netDxf.Entities
  href: netDxf.Entities.OrdinateDimension.html
  name: OrdinateDimension
  nameWithType: OrdinateDimension
  fullName: netDxf.Entities.OrdinateDimension
- uid: netDxf.Entities.ArcLengthDimension
  commentId: T:netDxf.Entities.ArcLengthDimension
  parent: netDxf.Entities
  href: netDxf.Entities.ArcLengthDimension.html
  name: ArcLengthDimension
  nameWithType: ArcLengthDimension
  fullName: netDxf.Entities.ArcLengthDimension
