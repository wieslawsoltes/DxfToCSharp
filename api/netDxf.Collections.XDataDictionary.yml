### YamlMime:ManagedReference
items:
- uid: netDxf.Collections.XDataDictionary
  commentId: T:netDxf.Collections.XDataDictionary
  id: XDataDictionary
  parent: netDxf.Collections
  children:
  - netDxf.Collections.XDataDictionary.#ctor
  - netDxf.Collections.XDataDictionary.#ctor(System.Collections.Generic.IEnumerable{netDxf.XData})
  - netDxf.Collections.XDataDictionary.#ctor(System.Int32)
  - netDxf.Collections.XDataDictionary.Add(netDxf.XData)
  - netDxf.Collections.XDataDictionary.AddAppReg
  - netDxf.Collections.XDataDictionary.AddRange(System.Collections.Generic.IEnumerable{netDxf.XData})
  - netDxf.Collections.XDataDictionary.AppIds
  - netDxf.Collections.XDataDictionary.Clear
  - netDxf.Collections.XDataDictionary.ContainsAppId(System.String)
  - netDxf.Collections.XDataDictionary.ContainsValue(netDxf.XData)
  - netDxf.Collections.XDataDictionary.Count
  - netDxf.Collections.XDataDictionary.GetEnumerator
  - netDxf.Collections.XDataDictionary.IsReadOnly
  - netDxf.Collections.XDataDictionary.Item(System.String)
  - netDxf.Collections.XDataDictionary.Remove(System.String)
  - netDxf.Collections.XDataDictionary.RemoveAppReg
  - netDxf.Collections.XDataDictionary.TryGetValue(System.String,netDxf.XData@)
  - netDxf.Collections.XDataDictionary.Values
  langs:
  - csharp
  - vb
  name: XDataDictionary
  nameWithType: XDataDictionary
  fullName: netDxf.Collections.XDataDictionary
  type: Class
  source:
    id: XDataDictionary
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Represents a dictionary of <xref href="netDxf.XData?text=XData" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public sealed class XDataDictionary : IDictionary<string, XData>, ICollection<KeyValuePair<string, XData>>, IEnumerable<KeyValuePair<string, XData>>, IEnumerable'
    content.vb: Public NotInheritable Class XDataDictionary Implements IDictionary(Of String, XData), ICollection(Of KeyValuePair(Of String, XData)), IEnumerable(Of KeyValuePair(Of String, XData)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IDictionary{System.String,netDxf.XData}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
- uid: netDxf.Collections.XDataDictionary.AddAppReg
  commentId: E:netDxf.Collections.XDataDictionary.AddAppReg
  id: AddAppReg
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: AddAppReg
  nameWithType: XDataDictionary.AddAppReg
  fullName: netDxf.Collections.XDataDictionary.AddAppReg
  type: Event
  source:
    id: AddAppReg
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 41
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event XDataDictionary.AddAppRegEventHandler AddAppReg
    return:
      type: netDxf.Collections.XDataDictionary.AddAppRegEventHandler
    content.vb: Public Event AddAppReg As XDataDictionary.AddAppRegEventHandler
- uid: netDxf.Collections.XDataDictionary.RemoveAppReg
  commentId: E:netDxf.Collections.XDataDictionary.RemoveAppReg
  id: RemoveAppReg
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: RemoveAppReg
  nameWithType: XDataDictionary.RemoveAppReg
  fullName: netDxf.Collections.XDataDictionary.RemoveAppReg
  type: Event
  source:
    id: RemoveAppReg
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 50
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event XDataDictionary.RemoveAppRegEventHandler RemoveAppReg
    return:
      type: netDxf.Collections.XDataDictionary.RemoveAppRegEventHandler
    content.vb: Public Event RemoveAppReg As XDataDictionary.RemoveAppRegEventHandler
- uid: netDxf.Collections.XDataDictionary.#ctor
  commentId: M:netDxf.Collections.XDataDictionary.#ctor
  id: '#ctor'
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: XDataDictionary()
  nameWithType: XDataDictionary.XDataDictionary()
  fullName: netDxf.Collections.XDataDictionary.XDataDictionary()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 71
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>XDataDictionary</code>.
  example: []
  syntax:
    content: public XDataDictionary()
    content.vb: Public Sub New()
  overload: netDxf.Collections.XDataDictionary.#ctor*
  nameWithType.vb: XDataDictionary.New()
  fullName.vb: netDxf.Collections.XDataDictionary.New()
  name.vb: New()
- uid: netDxf.Collections.XDataDictionary.#ctor(System.Collections.Generic.IEnumerable{netDxf.XData})
  commentId: M:netDxf.Collections.XDataDictionary.#ctor(System.Collections.Generic.IEnumerable{netDxf.XData})
  id: '#ctor(System.Collections.Generic.IEnumerable{netDxf.XData})'
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: XDataDictionary(IEnumerable<XData>)
  nameWithType: XDataDictionary.XDataDictionary(IEnumerable<XData>)
  fullName: netDxf.Collections.XDataDictionary.XDataDictionary(System.Collections.Generic.IEnumerable<netDxf.XData>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 80
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>XDataDictionary</code> and has the specified items.
  example: []
  syntax:
    content: public XDataDictionary(IEnumerable<XData> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{netDxf.XData}
      description: The list of <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> items initially stored.
    content.vb: Public Sub New(items As IEnumerable(Of XData))
  overload: netDxf.Collections.XDataDictionary.#ctor*
  nameWithType.vb: XDataDictionary.New(IEnumerable(Of XData))
  fullName.vb: netDxf.Collections.XDataDictionary.New(System.Collections.Generic.IEnumerable(Of netDxf.XData))
  name.vb: New(IEnumerable(Of XData))
- uid: netDxf.Collections.XDataDictionary.#ctor(System.Int32)
  commentId: M:netDxf.Collections.XDataDictionary.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: XDataDictionary(int)
  nameWithType: XDataDictionary.XDataDictionary(int)
  fullName: netDxf.Collections.XDataDictionary.XDataDictionary(int)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 90
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>XDataDictionary</code> and has the specified initial capacity.
  example: []
  syntax:
    content: public XDataDictionary(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
      description: The number of items the collection can initially store.
    content.vb: Public Sub New(capacity As Integer)
  overload: netDxf.Collections.XDataDictionary.#ctor*
  nameWithType.vb: XDataDictionary.New(Integer)
  fullName.vb: netDxf.Collections.XDataDictionary.New(Integer)
  name.vb: New(Integer)
- uid: netDxf.Collections.XDataDictionary.Item(System.String)
  commentId: P:netDxf.Collections.XDataDictionary.Item(System.String)
  id: Item(System.String)
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: XDataDictionary.this[string]
  fullName: netDxf.Collections.XDataDictionary.this[string]
  type: Property
  source:
    id: this[]
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 104
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets or sets the <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> with the specified application registry name.
  example: []
  syntax:
    content: public XData this[string appId] { get; set; }
    parameters:
    - id: appId
      type: System.String
      description: The application registry name to get or set.
    return:
      type: netDxf.XData
      description: The <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> of the application registry.
    content.vb: Public Default Property this[](appId As String) As XData
  overload: netDxf.Collections.XDataDictionary.Item*
  implements:
  - System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Item(System.String)
  nameWithType.vb: XDataDictionary.this[](String)
  fullName.vb: netDxf.Collections.XDataDictionary.this[](String)
  name.vb: this[](String)
- uid: netDxf.Collections.XDataDictionary.AppIds
  commentId: P:netDxf.Collections.XDataDictionary.AppIds
  id: AppIds
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: AppIds
  nameWithType: XDataDictionary.AppIds
  fullName: netDxf.Collections.XDataDictionary.AppIds
  type: Property
  source:
    id: AppIds
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 126
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets an ICollection containing the application registry names of the current dictionary.
  example: []
  syntax:
    content: public ICollection<string> AppIds { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public ReadOnly Property AppIds As ICollection(Of String)
  overload: netDxf.Collections.XDataDictionary.AppIds*
- uid: netDxf.Collections.XDataDictionary.Values
  commentId: P:netDxf.Collections.XDataDictionary.Values
  id: Values
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: XDataDictionary.Values
  fullName: netDxf.Collections.XDataDictionary.Values
  type: Property
  source:
    id: Values
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 134
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets an ICollection containing the <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> list of the current dictionary.
  example: []
  syntax:
    content: public ICollection<XData> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{netDxf.XData}
    content.vb: Public ReadOnly Property Values As ICollection(Of XData)
  overload: netDxf.Collections.XDataDictionary.Values*
  implements:
  - System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Values
- uid: netDxf.Collections.XDataDictionary.Count
  commentId: P:netDxf.Collections.XDataDictionary.Count
  id: Count
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: XDataDictionary.Count
  fullName: netDxf.Collections.XDataDictionary.Count
  type: Property
  source:
    id: Count
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 142
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the number of <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> contained in the current dictionary.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: netDxf.Collections.XDataDictionary.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.Count
- uid: netDxf.Collections.XDataDictionary.IsReadOnly
  commentId: P:netDxf.Collections.XDataDictionary.IsReadOnly
  id: IsReadOnly
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: XDataDictionary.IsReadOnly
  fullName: netDxf.Collections.XDataDictionary.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 150
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets a value indicating whether the actual dictionary is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: netDxf.Collections.XDataDictionary.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.IsReadOnly
- uid: netDxf.Collections.XDataDictionary.Add(netDxf.XData)
  commentId: M:netDxf.Collections.XDataDictionary.Add(netDxf.XData)
  id: Add(netDxf.XData)
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: Add(XData)
  nameWithType: XDataDictionary.Add(XData)
  fullName: netDxf.Collections.XDataDictionary.Add(netDxf.XData)
  type: Method
  source:
    id: Add
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 167
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds an <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> to the current dictionary.
  remarks: >-
    If the current dictionary already contains an appId equals to the extended data that is being added

    the <xref href="netDxf.XDataRecord?text=XDataRecords" data-throw-if-not-resolved="false"></xref> will be added to the existing one.
  example: []
  syntax:
    content: public void Add(XData item)
    parameters:
    - id: item
      type: netDxf.XData
      description: The <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> to add.
    content.vb: Public Sub Add(item As XData)
  overload: netDxf.Collections.XDataDictionary.Add*
- uid: netDxf.Collections.XDataDictionary.AddRange(System.Collections.Generic.IEnumerable{netDxf.XData})
  commentId: M:netDxf.Collections.XDataDictionary.AddRange(System.Collections.Generic.IEnumerable{netDxf.XData})
  id: AddRange(System.Collections.Generic.IEnumerable{netDxf.XData})
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<XData>)
  nameWithType: XDataDictionary.AddRange(IEnumerable<XData>)
  fullName: netDxf.Collections.XDataDictionary.AddRange(System.Collections.Generic.IEnumerable<netDxf.XData>)
  type: Method
  source:
    id: AddRange
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 190
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds a list of <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> to the current dictionary.
  example: []
  syntax:
    content: public void AddRange(IEnumerable<XData> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{netDxf.XData}
      description: The list of <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> to add.
    content.vb: Public Sub AddRange(items As IEnumerable(Of XData))
  overload: netDxf.Collections.XDataDictionary.AddRange*
  nameWithType.vb: XDataDictionary.AddRange(IEnumerable(Of XData))
  fullName.vb: netDxf.Collections.XDataDictionary.AddRange(System.Collections.Generic.IEnumerable(Of netDxf.XData))
  name.vb: AddRange(IEnumerable(Of XData))
- uid: netDxf.Collections.XDataDictionary.Remove(System.String)
  commentId: M:netDxf.Collections.XDataDictionary.Remove(System.String)
  id: Remove(System.String)
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: XDataDictionary.Remove(string)
  fullName: netDxf.Collections.XDataDictionary.Remove(string)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 208
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes an <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> with the specified application registry name from the current dictionary.
  example: []
  syntax:
    content: public bool Remove(string appId)
    parameters:
    - id: appId
      type: System.String
      description: The application registry name of the <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> to remove.
    return:
      type: System.Boolean
      description: True if the <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> is successfully removed; otherwise, false.
    content.vb: Public Function Remove(appId As String) As Boolean
  overload: netDxf.Collections.XDataDictionary.Remove*
  implements:
  - System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Remove(System.String)
  nameWithType.vb: XDataDictionary.Remove(String)
  fullName.vb: netDxf.Collections.XDataDictionary.Remove(String)
  name.vb: Remove(String)
- uid: netDxf.Collections.XDataDictionary.Clear
  commentId: M:netDxf.Collections.XDataDictionary.Clear
  id: Clear
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: XDataDictionary.Clear()
  fullName: netDxf.Collections.XDataDictionary.Clear()
  type: Method
  source:
    id: Clear
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 225
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes all <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> from the current dictionary.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: netDxf.Collections.XDataDictionary.Clear*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.Clear
- uid: netDxf.Collections.XDataDictionary.ContainsAppId(System.String)
  commentId: M:netDxf.Collections.XDataDictionary.ContainsAppId(System.String)
  id: ContainsAppId(System.String)
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: ContainsAppId(string)
  nameWithType: XDataDictionary.ContainsAppId(string)
  fullName: netDxf.Collections.XDataDictionary.ContainsAppId(string)
  type: Method
  source:
    id: ContainsAppId
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 240
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Determines whether current dictionary contains an <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> with the specified application registry name.
  example: []
  syntax:
    content: public bool ContainsAppId(string appId)
    parameters:
    - id: appId
      type: System.String
      description: The application registry name to locate in the current dictionary.
    return:
      type: System.Boolean
      description: True if the current dictionary contains an <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> with the application registry name; otherwise, false.
    content.vb: Public Function ContainsAppId(appId As String) As Boolean
  overload: netDxf.Collections.XDataDictionary.ContainsAppId*
  nameWithType.vb: XDataDictionary.ContainsAppId(String)
  fullName.vb: netDxf.Collections.XDataDictionary.ContainsAppId(String)
  name.vb: ContainsAppId(String)
- uid: netDxf.Collections.XDataDictionary.ContainsValue(netDxf.XData)
  commentId: M:netDxf.Collections.XDataDictionary.ContainsValue(netDxf.XData)
  id: ContainsValue(netDxf.XData)
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: ContainsValue(XData)
  nameWithType: XDataDictionary.ContainsValue(XData)
  fullName: netDxf.Collections.XDataDictionary.ContainsValue(netDxf.XData)
  type: Method
  source:
    id: ContainsValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 250
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Determines whether current dictionary contains a specified <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool ContainsValue(XData value)
    parameters:
    - id: value
      type: netDxf.XData
      description: The <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> to locate in the current dictionary.
    return:
      type: System.Boolean
      description: True if the current dictionary contains the <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref>; otherwise, false.
    content.vb: Public Function ContainsValue(value As XData) As Boolean
  overload: netDxf.Collections.XDataDictionary.ContainsValue*
- uid: netDxf.Collections.XDataDictionary.TryGetValue(System.String,netDxf.XData@)
  commentId: M:netDxf.Collections.XDataDictionary.TryGetValue(System.String,netDxf.XData@)
  id: TryGetValue(System.String,netDxf.XData@)
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: TryGetValue(string, out XData)
  nameWithType: XDataDictionary.TryGetValue(string, out XData)
  fullName: netDxf.Collections.XDataDictionary.TryGetValue(string, out netDxf.XData)
  type: Method
  source:
    id: TryGetValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 262
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> associated with the specified application registry name.
  example: []
  syntax:
    content: public bool TryGetValue(string appId, out XData value)
    parameters:
    - id: appId
      type: System.String
      description: The application registry name whose value to get.
    - id: value
      type: netDxf.XData
      description: >-
        When this method returns, the <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> associated with the specified application registry name,
            if the application registry name is found; otherwise, null. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: True if the current dictionary contains an <xref href="netDxf.XData?text=extended+data" data-throw-if-not-resolved="false"></xref> with the specified application registry name; otherwise, false.
    content.vb: Public Function TryGetValue(appId As String, value As XData) As Boolean
  overload: netDxf.Collections.XDataDictionary.TryGetValue*
  implements:
  - System.Collections.Generic.IDictionary{System.String,netDxf.XData}.TryGetValue(System.String,netDxf.XData@)
  nameWithType.vb: XDataDictionary.TryGetValue(String, XData)
  fullName.vb: netDxf.Collections.XDataDictionary.TryGetValue(String, netDxf.XData)
  name.vb: TryGetValue(String, XData)
- uid: netDxf.Collections.XDataDictionary.GetEnumerator
  commentId: M:netDxf.Collections.XDataDictionary.GetEnumerator
  id: GetEnumerator
  parent: netDxf.Collections.XDataDictionary
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: XDataDictionary.GetEnumerator()
  fullName: netDxf.Collections.XDataDictionary.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/XDataDictionary.cs
    startLine: 271
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Returns an enumerator that iterates through the dictionary.
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<string, XData>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
      description: An enumerator that can be used to iterate through the dictionary.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of String, XData))
  overload: netDxf.Collections.XDataDictionary.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.GetEnumerator
references:
- uid: netDxf.XData
  commentId: T:netDxf.XData
  parent: netDxf
  href: netDxf.XData.html
  name: XData
  nameWithType: XData
  fullName: netDxf.XData
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}
  commentId: T:System.Collections.Generic.IDictionary{System.String,netDxf.XData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, XData>
  nameWithType: IDictionary<string, XData>
  fullName: System.Collections.Generic.IDictionary<string, netDxf.XData>
  nameWithType.vb: IDictionary(Of String, XData)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, netDxf.XData)
  name.vb: IDictionary(Of String, XData)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<string, XData>>
  nameWithType: ICollection<KeyValuePair<string, XData>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, netDxf.XData>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, XData))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of String, netDxf.XData))
  name.vb: ICollection(Of KeyValuePair(Of String, XData))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<string, XData>>
  nameWithType: IEnumerable<KeyValuePair<string, XData>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, netDxf.XData>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, XData))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, netDxf.XData))
  name.vb: IEnumerable(Of KeyValuePair(Of String, XData))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: netDxf.Collections.XDataDictionary.AddAppRegEventHandler
  commentId: T:netDxf.Collections.XDataDictionary.AddAppRegEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.XDataDictionary.html
  name: XDataDictionary.AddAppRegEventHandler
  nameWithType: XDataDictionary.AddAppRegEventHandler
  fullName: netDxf.Collections.XDataDictionary.AddAppRegEventHandler
  spec.csharp:
  - uid: netDxf.Collections.XDataDictionary
    name: XDataDictionary
    href: netDxf.Collections.XDataDictionary.html
  - name: .
  - uid: netDxf.Collections.XDataDictionary.AddAppRegEventHandler
    name: AddAppRegEventHandler
    href: netDxf.Collections.XDataDictionary.AddAppRegEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.XDataDictionary
    name: XDataDictionary
    href: netDxf.Collections.XDataDictionary.html
  - name: .
  - uid: netDxf.Collections.XDataDictionary.AddAppRegEventHandler
    name: AddAppRegEventHandler
    href: netDxf.Collections.XDataDictionary.AddAppRegEventHandler.html
- uid: netDxf.Collections.XDataDictionary.RemoveAppRegEventHandler
  commentId: T:netDxf.Collections.XDataDictionary.RemoveAppRegEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.XDataDictionary.html
  name: XDataDictionary.RemoveAppRegEventHandler
  nameWithType: XDataDictionary.RemoveAppRegEventHandler
  fullName: netDxf.Collections.XDataDictionary.RemoveAppRegEventHandler
  spec.csharp:
  - uid: netDxf.Collections.XDataDictionary
    name: XDataDictionary
    href: netDxf.Collections.XDataDictionary.html
  - name: .
  - uid: netDxf.Collections.XDataDictionary.RemoveAppRegEventHandler
    name: RemoveAppRegEventHandler
    href: netDxf.Collections.XDataDictionary.RemoveAppRegEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.XDataDictionary
    name: XDataDictionary
    href: netDxf.Collections.XDataDictionary.html
  - name: .
  - uid: netDxf.Collections.XDataDictionary.RemoveAppRegEventHandler
    name: RemoveAppRegEventHandler
    href: netDxf.Collections.XDataDictionary.RemoveAppRegEventHandler.html
- uid: netDxf.Collections.XDataDictionary.#ctor*
  commentId: Overload:netDxf.Collections.XDataDictionary.#ctor
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary__ctor
  name: XDataDictionary
  nameWithType: XDataDictionary.XDataDictionary
  fullName: netDxf.Collections.XDataDictionary.XDataDictionary
  nameWithType.vb: XDataDictionary.New
  fullName.vb: netDxf.Collections.XDataDictionary.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{netDxf.XData}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.XData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<XData>
  nameWithType: IEnumerable<XData>
  fullName: System.Collections.Generic.IEnumerable<netDxf.XData>
  nameWithType.vb: IEnumerable(Of XData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.XData)
  name.vb: IEnumerable(Of XData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.Collections.XDataDictionary.Item*
  commentId: Overload:netDxf.Collections.XDataDictionary.Item
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_Item_System_String_
  name: this
  nameWithType: XDataDictionary.this
  fullName: netDxf.Collections.XDataDictionary.this
  nameWithType.vb: XDataDictionary.this[]
  fullName.vb: netDxf.Collections.XDataDictionary.this[]
  name.vb: this[]
- uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Item(System.String)
  commentId: P:System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Item(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,netDxf.XData}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: this[string]
  nameWithType: IDictionary<string, XData>.this[string]
  fullName: System.Collections.Generic.IDictionary<string, netDxf.XData>.this[string]
  nameWithType.vb: IDictionary(Of String, XData).this[](String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, netDxf.XData).this[](String)
  name.vb: this[](String)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Item(System.String)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  name: this[TKey]
  nameWithType: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: netDxf.Collections.XDataDictionary.AppIds*
  commentId: Overload:netDxf.Collections.XDataDictionary.AppIds
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_AppIds
  name: AppIds
  nameWithType: XDataDictionary.AppIds
  fullName: netDxf.Collections.XDataDictionary.AppIds
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Collections.XDataDictionary.Values*
  commentId: Overload:netDxf.Collections.XDataDictionary.Values
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_Values
  name: Values
  nameWithType: XDataDictionary.Values
  fullName: netDxf.Collections.XDataDictionary.Values
- uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Values
  commentId: P:System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Values
  parent: System.Collections.Generic.IDictionary{System.String,netDxf.XData}
  definition: System.Collections.Generic.IDictionary`2.Values
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<string, XData>.Values
  fullName: System.Collections.Generic.IDictionary<string, netDxf.XData>.Values
  nameWithType.vb: IDictionary(Of String, XData).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of String, netDxf.XData).Values
- uid: System.Collections.Generic.ICollection{netDxf.XData}
  commentId: T:System.Collections.Generic.ICollection{netDxf.XData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<XData>
  nameWithType: ICollection<XData>
  fullName: System.Collections.Generic.ICollection<netDxf.XData>
  nameWithType.vb: ICollection(Of XData)
  fullName.vb: System.Collections.Generic.ICollection(Of netDxf.XData)
  name.vb: ICollection(Of XData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: netDxf.Collections.XDataDictionary.Count*
  commentId: Overload:netDxf.Collections.XDataDictionary.Count
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_Count
  name: Count
  nameWithType: XDataDictionary.Count
  fullName: netDxf.Collections.XDataDictionary.Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<KeyValuePair<string, XData>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, netDxf.XData>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, XData)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of String, netDxf.XData)).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: netDxf.Collections.XDataDictionary.IsReadOnly*
  commentId: Overload:netDxf.Collections.XDataDictionary.IsReadOnly
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_IsReadOnly
  name: IsReadOnly
  nameWithType: XDataDictionary.IsReadOnly
  fullName: netDxf.Collections.XDataDictionary.IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<string, XData>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, netDxf.XData>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, XData)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of String, netDxf.XData)).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: netDxf.XDataRecord
  commentId: T:netDxf.XDataRecord
  parent: netDxf
  href: netDxf.XDataRecord.html
  name: XDataRecord
  nameWithType: XDataRecord
  fullName: netDxf.XDataRecord
- uid: netDxf.Collections.XDataDictionary.Add*
  commentId: Overload:netDxf.Collections.XDataDictionary.Add
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_Add_netDxf_XData_
  name: Add
  nameWithType: XDataDictionary.Add
  fullName: netDxf.Collections.XDataDictionary.Add
- uid: netDxf.Collections.XDataDictionary.AddRange*
  commentId: Overload:netDxf.Collections.XDataDictionary.AddRange
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_AddRange_System_Collections_Generic_IEnumerable_netDxf_XData__
  name: AddRange
  nameWithType: XDataDictionary.AddRange
  fullName: netDxf.Collections.XDataDictionary.AddRange
- uid: netDxf.Collections.XDataDictionary.Remove*
  commentId: Overload:netDxf.Collections.XDataDictionary.Remove
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_Remove_System_String_
  name: Remove
  nameWithType: XDataDictionary.Remove
  fullName: netDxf.Collections.XDataDictionary.Remove
- uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Remove(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Remove(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,netDxf.XData}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(string)
  nameWithType: IDictionary<string, XData>.Remove(string)
  fullName: System.Collections.Generic.IDictionary<string, netDxf.XData>.Remove(string)
  nameWithType.vb: IDictionary(Of String, XData).Remove(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, netDxf.XData).Remove(String)
  name.vb: Remove(String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Remove(System.String)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.Remove(System.String)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: netDxf.Collections.XDataDictionary.Clear*
  commentId: Overload:netDxf.Collections.XDataDictionary.Clear
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_Clear
  name: Clear
  nameWithType: XDataDictionary.Clear
  fullName: netDxf.Collections.XDataDictionary.Clear
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<string, XData>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, netDxf.XData>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, XData)).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of String, netDxf.XData)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: netDxf.Collections.XDataDictionary.ContainsAppId*
  commentId: Overload:netDxf.Collections.XDataDictionary.ContainsAppId
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_ContainsAppId_System_String_
  name: ContainsAppId
  nameWithType: XDataDictionary.ContainsAppId
  fullName: netDxf.Collections.XDataDictionary.ContainsAppId
- uid: netDxf.Collections.XDataDictionary.ContainsValue*
  commentId: Overload:netDxf.Collections.XDataDictionary.ContainsValue
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_ContainsValue_netDxf_XData_
  name: ContainsValue
  nameWithType: XDataDictionary.ContainsValue
  fullName: netDxf.Collections.XDataDictionary.ContainsValue
- uid: netDxf.Collections.XDataDictionary.TryGetValue*
  commentId: Overload:netDxf.Collections.XDataDictionary.TryGetValue
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_TryGetValue_System_String_netDxf_XData__
  name: TryGetValue
  nameWithType: XDataDictionary.TryGetValue
  fullName: netDxf.Collections.XDataDictionary.TryGetValue
- uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.TryGetValue(System.String,netDxf.XData@)
  commentId: M:System.Collections.Generic.IDictionary{System.String,netDxf.XData}.TryGetValue(System.String,netDxf.XData@)
  parent: System.Collections.Generic.IDictionary{System.String,netDxf.XData}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(string, out XData)
  nameWithType: IDictionary<string, XData>.TryGetValue(string, out XData)
  fullName: System.Collections.Generic.IDictionary<string, netDxf.XData>.TryGetValue(string, out netDxf.XData)
  nameWithType.vb: IDictionary(Of String, XData).TryGetValue(String, XData)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, netDxf.XData).TryGetValue(String, netDxf.XData)
  name.vb: TryGetValue(String, XData)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.TryGetValue(System.String,netDxf.XData@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{System.String,netDxf.XData}.TryGetValue(System.String,netDxf.XData@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: netDxf.Collections.XDataDictionary.GetEnumerator*
  commentId: Overload:netDxf.Collections.XDataDictionary.GetEnumerator
  href: netDxf.Collections.XDataDictionary.html#netDxf_Collections_XDataDictionary_GetEnumerator
  name: GetEnumerator
  nameWithType: XDataDictionary.GetEnumerator
  fullName: netDxf.Collections.XDataDictionary.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<string, XData>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, netDxf.XData>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, XData)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, netDxf.XData)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,netDxf.XData}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<KeyValuePair<string, XData>>
  nameWithType: IEnumerator<KeyValuePair<string, XData>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, netDxf.XData>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, XData))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of String, netDxf.XData))
  name.vb: IEnumerator(Of KeyValuePair(Of String, XData))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: netDxf.XData
    name: XData
    href: netDxf.XData.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
