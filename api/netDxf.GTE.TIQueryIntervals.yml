### YamlMime:ManagedReference
items:
- uid: netDxf.GTE.TIQueryIntervals
  commentId: T:netDxf.GTE.TIQueryIntervals
  id: TIQueryIntervals
  parent: netDxf.GTE
  children:
  - netDxf.GTE.TIQueryIntervals.#ctor(System.Double,System.Boolean,System.Double,System.Boolean)
  - netDxf.GTE.TIQueryIntervals.#ctor(System.Double,System.Double[],System.Double,System.Double[],System.Double)
  - netDxf.GTE.TIQueryIntervals.#ctor(System.Double[],System.Double,System.Boolean)
  - netDxf.GTE.TIQueryIntervals.#ctor(System.Double[],System.Double[])
  - netDxf.GTE.TIQueryIntervals.FirstTime
  - netDxf.GTE.TIQueryIntervals.Intersect
  - netDxf.GTE.TIQueryIntervals.LastTime
  langs:
  - csharp
  - vb
  name: TIQueryIntervals
  nameWithType: TIQueryIntervals
  fullName: netDxf.GTE.TIQueryIntervals
  type: Class
  source:
    id: TIQueryIntervals
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/IntrIntervals.cs
    startLine: 45
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public class TIQueryIntervals
    content.vb: Public Class TIQueryIntervals
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.GTE.TIQueryIntervals.Intersect
  commentId: P:netDxf.GTE.TIQueryIntervals.Intersect
  id: Intersect
  parent: netDxf.GTE.TIQueryIntervals
  langs:
  - csharp
  - vb
  name: Intersect
  nameWithType: TIQueryIntervals.Intersect
  fullName: netDxf.GTE.TIQueryIntervals.Intersect
  type: Property
  source:
    id: Intersect
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/IntrIntervals.cs
    startLine: 60
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public bool Intersect { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Intersect As Boolean
  overload: netDxf.GTE.TIQueryIntervals.Intersect*
- uid: netDxf.GTE.TIQueryIntervals.FirstTime
  commentId: P:netDxf.GTE.TIQueryIntervals.FirstTime
  id: FirstTime
  parent: netDxf.GTE.TIQueryIntervals
  langs:
  - csharp
  - vb
  name: FirstTime
  nameWithType: TIQueryIntervals.FirstTime
  fullName: netDxf.GTE.TIQueryIntervals.FirstTime
  type: Property
  source:
    id: FirstTime
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/IntrIntervals.cs
    startLine: 65
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public double FirstTime { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property FirstTime As Double
  overload: netDxf.GTE.TIQueryIntervals.FirstTime*
- uid: netDxf.GTE.TIQueryIntervals.LastTime
  commentId: P:netDxf.GTE.TIQueryIntervals.LastTime
  id: LastTime
  parent: netDxf.GTE.TIQueryIntervals
  langs:
  - csharp
  - vb
  name: LastTime
  nameWithType: TIQueryIntervals.LastTime
  fullName: netDxf.GTE.TIQueryIntervals.LastTime
  type: Property
  source:
    id: LastTime
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/IntrIntervals.cs
    startLine: 70
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public double LastTime { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LastTime As Double
  overload: netDxf.GTE.TIQueryIntervals.LastTime*
- uid: netDxf.GTE.TIQueryIntervals.#ctor(System.Double[],System.Double[])
  commentId: M:netDxf.GTE.TIQueryIntervals.#ctor(System.Double[],System.Double[])
  id: '#ctor(System.Double[],System.Double[])'
  parent: netDxf.GTE.TIQueryIntervals
  langs:
  - csharp
  - vb
  name: TIQueryIntervals(double[], double[])
  nameWithType: TIQueryIntervals.TIQueryIntervals(double[], double[])
  fullName: netDxf.GTE.TIQueryIntervals.TIQueryIntervals(double[], double[])
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/IntrIntervals.cs
    startLine: 85
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public TIQueryIntervals(double[] interval0, double[] interval1)
    parameters:
    - id: interval0
      type: System.Double[]
    - id: interval1
      type: System.Double[]
    content.vb: Public Sub New(interval0 As Double(), interval1 As Double())
  overload: netDxf.GTE.TIQueryIntervals.#ctor*
  nameWithType.vb: TIQueryIntervals.New(Double(), Double())
  fullName.vb: netDxf.GTE.TIQueryIntervals.New(Double(), Double())
  name.vb: New(Double(), Double())
- uid: netDxf.GTE.TIQueryIntervals.#ctor(System.Double[],System.Double,System.Boolean)
  commentId: M:netDxf.GTE.TIQueryIntervals.#ctor(System.Double[],System.Double,System.Boolean)
  id: '#ctor(System.Double[],System.Double,System.Boolean)'
  parent: netDxf.GTE.TIQueryIntervals
  langs:
  - csharp
  - vb
  name: TIQueryIntervals(double[], double, bool)
  nameWithType: TIQueryIntervals.TIQueryIntervals(double[], double, bool)
  fullName: netDxf.GTE.TIQueryIntervals.TIQueryIntervals(double[], double, bool)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/IntrIntervals.cs
    startLine: 97
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public TIQueryIntervals(double[] finite, double a, bool isPositiveInfinite)
    parameters:
    - id: finite
      type: System.Double[]
    - id: a
      type: System.Double
    - id: isPositiveInfinite
      type: System.Boolean
    content.vb: Public Sub New(finite As Double(), a As Double, isPositiveInfinite As Boolean)
  overload: netDxf.GTE.TIQueryIntervals.#ctor*
  nameWithType.vb: TIQueryIntervals.New(Double(), Double, Boolean)
  fullName.vb: netDxf.GTE.TIQueryIntervals.New(Double(), Double, Boolean)
  name.vb: New(Double(), Double, Boolean)
- uid: netDxf.GTE.TIQueryIntervals.#ctor(System.Double,System.Boolean,System.Double,System.Boolean)
  commentId: M:netDxf.GTE.TIQueryIntervals.#ctor(System.Double,System.Boolean,System.Double,System.Boolean)
  id: '#ctor(System.Double,System.Boolean,System.Double,System.Boolean)'
  parent: netDxf.GTE.TIQueryIntervals
  langs:
  - csharp
  - vb
  name: TIQueryIntervals(double, bool, double, bool)
  nameWithType: TIQueryIntervals.TIQueryIntervals(double, bool, double, bool)
  fullName: netDxf.GTE.TIQueryIntervals.TIQueryIntervals(double, bool, double, bool)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/IntrIntervals.cs
    startLine: 111
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public TIQueryIntervals(double a0, bool isPositiveInfinite0, double a1, bool isPositiveInfinite1)
    parameters:
    - id: a0
      type: System.Double
    - id: isPositiveInfinite0
      type: System.Boolean
    - id: a1
      type: System.Double
    - id: isPositiveInfinite1
      type: System.Boolean
    content.vb: Public Sub New(a0 As Double, isPositiveInfinite0 As Boolean, a1 As Double, isPositiveInfinite1 As Boolean)
  overload: netDxf.GTE.TIQueryIntervals.#ctor*
  nameWithType.vb: TIQueryIntervals.New(Double, Boolean, Double, Boolean)
  fullName.vb: netDxf.GTE.TIQueryIntervals.New(Double, Boolean, Double, Boolean)
  name.vb: New(Double, Boolean, Double, Boolean)
- uid: netDxf.GTE.TIQueryIntervals.#ctor(System.Double,System.Double[],System.Double,System.Double[],System.Double)
  commentId: M:netDxf.GTE.TIQueryIntervals.#ctor(System.Double,System.Double[],System.Double,System.Double[],System.Double)
  id: '#ctor(System.Double,System.Double[],System.Double,System.Double[],System.Double)'
  parent: netDxf.GTE.TIQueryIntervals
  langs:
  - csharp
  - vb
  name: TIQueryIntervals(double, double[], double, double[], double)
  nameWithType: TIQueryIntervals.TIQueryIntervals(double, double[], double, double[], double)
  fullName: netDxf.GTE.TIQueryIntervals.TIQueryIntervals(double, double[], double, double[], double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/IntrIntervals.cs
    startLine: 139
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public TIQueryIntervals(double maxTime, double[] interval0, double speed0, double[] interval1, double speed1)
    parameters:
    - id: maxTime
      type: System.Double
    - id: interval0
      type: System.Double[]
    - id: speed0
      type: System.Double
    - id: interval1
      type: System.Double[]
    - id: speed1
      type: System.Double
    content.vb: Public Sub New(maxTime As Double, interval0 As Double(), speed0 As Double, interval1 As Double(), speed1 As Double)
  overload: netDxf.GTE.TIQueryIntervals.#ctor*
  nameWithType.vb: TIQueryIntervals.New(Double, Double(), Double, Double(), Double)
  fullName.vb: netDxf.GTE.TIQueryIntervals.New(Double, Double(), Double, Double(), Double)
  name.vb: New(Double, Double(), Double, Double(), Double)
references:
- uid: netDxf.GTE
  commentId: N:netDxf.GTE
  href: netDxf.html
  name: netDxf.GTE
  nameWithType: netDxf.GTE
  fullName: netDxf.GTE
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.GTE
    name: GTE
    href: netDxf.GTE.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.GTE
    name: GTE
    href: netDxf.GTE.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.GTE.TIQueryIntervals.Intersect*
  commentId: Overload:netDxf.GTE.TIQueryIntervals.Intersect
  href: netDxf.GTE.TIQueryIntervals.html#netDxf_GTE_TIQueryIntervals_Intersect
  name: Intersect
  nameWithType: TIQueryIntervals.Intersect
  fullName: netDxf.GTE.TIQueryIntervals.Intersect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.GTE.TIQueryIntervals.FirstTime*
  commentId: Overload:netDxf.GTE.TIQueryIntervals.FirstTime
  href: netDxf.GTE.TIQueryIntervals.html#netDxf_GTE_TIQueryIntervals_FirstTime
  name: FirstTime
  nameWithType: TIQueryIntervals.FirstTime
  fullName: netDxf.GTE.TIQueryIntervals.FirstTime
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.GTE.TIQueryIntervals.LastTime*
  commentId: Overload:netDxf.GTE.TIQueryIntervals.LastTime
  href: netDxf.GTE.TIQueryIntervals.html#netDxf_GTE_TIQueryIntervals_LastTime
  name: LastTime
  nameWithType: TIQueryIntervals.LastTime
  fullName: netDxf.GTE.TIQueryIntervals.LastTime
- uid: netDxf.GTE.TIQueryIntervals.#ctor*
  commentId: Overload:netDxf.GTE.TIQueryIntervals.#ctor
  href: netDxf.GTE.TIQueryIntervals.html#netDxf_GTE_TIQueryIntervals__ctor_System_Double___System_Double___
  name: TIQueryIntervals
  nameWithType: TIQueryIntervals.TIQueryIntervals
  fullName: netDxf.GTE.TIQueryIntervals.TIQueryIntervals
  nameWithType.vb: TIQueryIntervals.New
  fullName.vb: netDxf.GTE.TIQueryIntervals.New
  name.vb: New
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
