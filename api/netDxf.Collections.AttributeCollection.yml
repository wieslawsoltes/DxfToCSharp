### YamlMime:ManagedReference
items:
- uid: netDxf.Collections.AttributeCollection
  commentId: T:netDxf.Collections.AttributeCollection
  id: AttributeCollection
  parent: netDxf.Collections
  children:
  - netDxf.Collections.AttributeCollection.#ctor
  - netDxf.Collections.AttributeCollection.#ctor(System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute})
  - netDxf.Collections.AttributeCollection.AttributeWithTag(System.String)
  - netDxf.Collections.AttributeCollection.Contains(netDxf.Entities.Attribute)
  - netDxf.Collections.AttributeCollection.CopyTo(netDxf.Entities.Attribute[],System.Int32)
  - netDxf.Collections.AttributeCollection.Count
  - netDxf.Collections.AttributeCollection.GetEnumerator
  - netDxf.Collections.AttributeCollection.IndexOf(netDxf.Entities.Attribute)
  - netDxf.Collections.AttributeCollection.IsReadOnly
  - netDxf.Collections.AttributeCollection.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: netDxf.Collections.AttributeCollection
  type: Class
  source:
    id: AttributeCollection
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Represents a collection of <xref href="netDxf.Entities.Attribute?text=Attributes" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public sealed class AttributeCollection : IReadOnlyList<Attribute>, IReadOnlyCollection<Attribute>, IEnumerable<Attribute>, IEnumerable'
    content.vb: Public NotInheritable Class AttributeCollection Implements IReadOnlyList(Of Attribute), IReadOnlyCollection(Of Attribute), IEnumerable(Of Attribute), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IReadOnlyList{netDxf.Entities.Attribute}
  - System.Collections.Generic.IReadOnlyCollection{netDxf.Entities.Attribute}
  - System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
- uid: netDxf.Collections.AttributeCollection.#ctor
  commentId: M:netDxf.Collections.AttributeCollection.#ctor
  id: '#ctor'
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: AttributeCollection()
  nameWithType: AttributeCollection.AttributeCollection()
  fullName: netDxf.Collections.AttributeCollection.AttributeCollection()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 49
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>AttributeCollection</code> with the specified collection of attributes.
  example: []
  syntax:
    content: public AttributeCollection()
    content.vb: Public Sub New()
  overload: netDxf.Collections.AttributeCollection.#ctor*
  nameWithType.vb: AttributeCollection.New()
  fullName.vb: netDxf.Collections.AttributeCollection.New()
  name.vb: New()
- uid: netDxf.Collections.AttributeCollection.#ctor(System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute})
  commentId: M:netDxf.Collections.AttributeCollection.#ctor(System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute})
  id: '#ctor(System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute})'
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: AttributeCollection(IEnumerable<Attribute>)
  nameWithType: AttributeCollection.AttributeCollection(IEnumerable<Attribute>)
  fullName: netDxf.Collections.AttributeCollection.AttributeCollection(System.Collections.Generic.IEnumerable<netDxf.Entities.Attribute>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 58
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>AttributeCollection</code> with the specified collection of attributes.
  example: []
  syntax:
    content: public AttributeCollection(IEnumerable<Attribute> attributes)
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}
      description: The collection of attributes from which build the dictionary.
    content.vb: Public Sub New(attributes As IEnumerable(Of Attribute))
  overload: netDxf.Collections.AttributeCollection.#ctor*
  nameWithType.vb: AttributeCollection.New(IEnumerable(Of Attribute))
  fullName.vb: netDxf.Collections.AttributeCollection.New(System.Collections.Generic.IEnumerable(Of netDxf.Entities.Attribute))
  name.vb: New(IEnumerable(Of Attribute))
- uid: netDxf.Collections.AttributeCollection.Count
  commentId: P:netDxf.Collections.AttributeCollection.Count
  id: Count
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: AttributeCollection.Count
  fullName: netDxf.Collections.AttributeCollection.Count
  type: Property
  source:
    id: Count
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 74
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the number of object contained in the collection.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: netDxf.Collections.AttributeCollection.Count*
  implements:
  - System.Collections.Generic.IReadOnlyCollection{netDxf.Entities.Attribute}.Count
- uid: netDxf.Collections.AttributeCollection.IsReadOnly
  commentId: P:netDxf.Collections.AttributeCollection.IsReadOnly
  id: IsReadOnly
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: AttributeCollection.IsReadOnly
  fullName: netDxf.Collections.AttributeCollection.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 82
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets a value indicating whether the collection is read-only.
  example: []
  syntax:
    content: public static bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsReadOnly As Boolean
  overload: netDxf.Collections.AttributeCollection.IsReadOnly*
- uid: netDxf.Collections.AttributeCollection.Item(System.Int32)
  commentId: P:netDxf.Collections.AttributeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: AttributeCollection.this[int]
  fullName: netDxf.Collections.AttributeCollection.this[int]
  type: Property
  source:
    id: this[]
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 92
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the attribute at the specified index.
  example: []
  syntax:
    content: public Attribute this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: netDxf.Entities.Attribute
      description: The object at the specified index.
    content.vb: Public ReadOnly Default Property this[](index As Integer) As Attribute
  overload: netDxf.Collections.AttributeCollection.Item*
  implements:
  - System.Collections.Generic.IReadOnlyList{netDxf.Entities.Attribute}.Item(System.Int32)
  nameWithType.vb: AttributeCollection.this[](Integer)
  fullName.vb: netDxf.Collections.AttributeCollection.this[](Integer)
  name.vb: this[](Integer)
- uid: netDxf.Collections.AttributeCollection.Contains(netDxf.Entities.Attribute)
  commentId: M:netDxf.Collections.AttributeCollection.Contains(netDxf.Entities.Attribute)
  id: Contains(netDxf.Entities.Attribute)
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: Contains(Attribute)
  nameWithType: AttributeCollection.Contains(Attribute)
  fullName: netDxf.Collections.AttributeCollection.Contains(netDxf.Entities.Attribute)
  type: Method
  source:
    id: Contains
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 106
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Determines whether an attribute is in the collection.
  example: []
  syntax:
    content: public bool Contains(Attribute item)
    parameters:
    - id: item
      type: netDxf.Entities.Attribute
      description: The attribute to locate in the collection.
    return:
      type: System.Boolean
      description: True if attribute is found in the collection; otherwise, false.
    content.vb: Public Function Contains(item As Attribute) As Boolean
  overload: netDxf.Collections.AttributeCollection.Contains*
- uid: netDxf.Collections.AttributeCollection.CopyTo(netDxf.Entities.Attribute[],System.Int32)
  commentId: M:netDxf.Collections.AttributeCollection.CopyTo(netDxf.Entities.Attribute[],System.Int32)
  id: CopyTo(netDxf.Entities.Attribute[],System.Int32)
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Attribute[], int)
  nameWithType: AttributeCollection.CopyTo(Attribute[], int)
  fullName: netDxf.Collections.AttributeCollection.CopyTo(netDxf.Entities.Attribute[], int)
  type: Method
  source:
    id: CopyTo
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 116
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
  example: []
  syntax:
    content: public void CopyTo(Attribute[] array, int arrayIndex)
    parameters:
    - id: array
      type: netDxf.Entities.Attribute[]
      description: The one-dimensional System.Array that is the destination of the elements copied from the collection. The System.Array must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in array at which copying begins.
    content.vb: Public Sub CopyTo(array As Attribute(), arrayIndex As Integer)
  overload: netDxf.Collections.AttributeCollection.CopyTo*
  nameWithType.vb: AttributeCollection.CopyTo(Attribute(), Integer)
  fullName.vb: netDxf.Collections.AttributeCollection.CopyTo(netDxf.Entities.Attribute(), Integer)
  name.vb: CopyTo(Attribute(), Integer)
- uid: netDxf.Collections.AttributeCollection.IndexOf(netDxf.Entities.Attribute)
  commentId: M:netDxf.Collections.AttributeCollection.IndexOf(netDxf.Entities.Attribute)
  id: IndexOf(netDxf.Entities.Attribute)
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: IndexOf(Attribute)
  nameWithType: AttributeCollection.IndexOf(Attribute)
  fullName: netDxf.Collections.AttributeCollection.IndexOf(netDxf.Entities.Attribute)
  type: Method
  source:
    id: IndexOf
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 126
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Searches for the specified attribute and returns the zero-based index of the first occurrence within the entire collection.
  example: []
  syntax:
    content: public int IndexOf(Attribute item)
    parameters:
    - id: item
      type: netDxf.Entities.Attribute
      description: The attribute to locate in the collection.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, –1.
    content.vb: Public Function IndexOf(item As Attribute) As Integer
  overload: netDxf.Collections.AttributeCollection.IndexOf*
- uid: netDxf.Collections.AttributeCollection.AttributeWithTag(System.String)
  commentId: M:netDxf.Collections.AttributeCollection.AttributeWithTag(System.String)
  id: AttributeWithTag(System.String)
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: AttributeWithTag(string)
  nameWithType: AttributeCollection.AttributeWithTag(string)
  fullName: netDxf.Collections.AttributeCollection.AttributeWithTag(string)
  type: Method
  source:
    id: AttributeWithTag
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 136
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Searches for the first occurrence attribute with the specified attribute definition tag within the entire collection
  example: []
  syntax:
    content: public Attribute AttributeWithTag(string tag)
    parameters:
    - id: tag
      type: System.String
      description: ''
    return:
      type: netDxf.Entities.Attribute
      description: The first occurrence of the attribute with the specified attribute definition tag within the entire collection.
    content.vb: Public Function AttributeWithTag(tag As String) As Attribute
  overload: netDxf.Collections.AttributeCollection.AttributeWithTag*
  nameWithType.vb: AttributeCollection.AttributeWithTag(String)
  fullName.vb: netDxf.Collections.AttributeCollection.AttributeWithTag(String)
  name.vb: AttributeWithTag(String)
- uid: netDxf.Collections.AttributeCollection.GetEnumerator
  commentId: M:netDxf.Collections.AttributeCollection.GetEnumerator
  id: GetEnumerator
  parent: netDxf.Collections.AttributeCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: AttributeCollection.GetEnumerator()
  fullName: netDxf.Collections.AttributeCollection.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/AttributeCollection.cs
    startLine: 160
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<Attribute> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{netDxf.Entities.Attribute}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of Attribute)
  overload: netDxf.Collections.AttributeCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}.GetEnumerator
references:
- uid: netDxf.Entities.Attribute
  commentId: T:netDxf.Entities.Attribute
  parent: netDxf.Entities
  href: netDxf.Entities.Attribute.html
  name: Attribute
  nameWithType: Attribute
  fullName: netDxf.Entities.Attribute
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IReadOnlyList{netDxf.Entities.Attribute}
  commentId: T:System.Collections.Generic.IReadOnlyList{netDxf.Entities.Attribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Attribute>
  nameWithType: IReadOnlyList<Attribute>
  fullName: System.Collections.Generic.IReadOnlyList<netDxf.Entities.Attribute>
  nameWithType.vb: IReadOnlyList(Of Attribute)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of netDxf.Entities.Attribute)
  name.vb: IReadOnlyList(Of Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{netDxf.Entities.Attribute}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{netDxf.Entities.Attribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<Attribute>
  nameWithType: IReadOnlyCollection<Attribute>
  fullName: System.Collections.Generic.IReadOnlyCollection<netDxf.Entities.Attribute>
  nameWithType.vb: IReadOnlyCollection(Of Attribute)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of netDxf.Entities.Attribute)
  name.vb: IReadOnlyCollection(Of Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Attribute>
  nameWithType: IEnumerable<Attribute>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.Attribute>
  nameWithType.vb: IEnumerable(Of Attribute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.Attribute)
  name.vb: IEnumerable(Of Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: netDxf.Collections.AttributeCollection.#ctor*
  commentId: Overload:netDxf.Collections.AttributeCollection.#ctor
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection__ctor
  name: AttributeCollection
  nameWithType: AttributeCollection.AttributeCollection
  fullName: netDxf.Collections.AttributeCollection.AttributeCollection
  nameWithType.vb: AttributeCollection.New
  fullName.vb: netDxf.Collections.AttributeCollection.New
  name.vb: New
- uid: netDxf.Collections.AttributeCollection.Count*
  commentId: Overload:netDxf.Collections.AttributeCollection.Count
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection_Count
  name: Count
  nameWithType: AttributeCollection.Count
  fullName: netDxf.Collections.AttributeCollection.Count
- uid: System.Collections.Generic.IReadOnlyCollection{netDxf.Entities.Attribute}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{netDxf.Entities.Attribute}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{netDxf.Entities.Attribute}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<Attribute>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<netDxf.Entities.Attribute>.Count
  nameWithType.vb: IReadOnlyCollection(Of Attribute).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of netDxf.Entities.Attribute).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: netDxf.Collections.AttributeCollection.IsReadOnly*
  commentId: Overload:netDxf.Collections.AttributeCollection.IsReadOnly
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection_IsReadOnly
  name: IsReadOnly
  nameWithType: AttributeCollection.IsReadOnly
  fullName: netDxf.Collections.AttributeCollection.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Collections.AttributeCollection.Item*
  commentId: Overload:netDxf.Collections.AttributeCollection.Item
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection_Item_System_Int32_
  name: this
  nameWithType: AttributeCollection.this
  fullName: netDxf.Collections.AttributeCollection.this
  nameWithType.vb: AttributeCollection.this[]
  fullName.vb: netDxf.Collections.AttributeCollection.this[]
  name.vb: this[]
- uid: System.Collections.Generic.IReadOnlyList{netDxf.Entities.Attribute}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList{netDxf.Entities.Attribute}.Item(System.Int32)
  parent: System.Collections.Generic.IReadOnlyList{netDxf.Entities.Attribute}
  definition: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IReadOnlyList<Attribute>.this[int]
  fullName: System.Collections.Generic.IReadOnlyList<netDxf.Entities.Attribute>.this[int]
  nameWithType.vb: IReadOnlyList(Of Attribute).this[](Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of netDxf.Entities.Attribute).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList{netDxf.Entities.Attribute}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IReadOnlyList<T>.this[int]
  fullName: System.Collections.Generic.IReadOnlyList<T>.this[int]
  nameWithType.vb: IReadOnlyList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.AttributeCollection.Contains*
  commentId: Overload:netDxf.Collections.AttributeCollection.Contains
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection_Contains_netDxf_Entities_Attribute_
  name: Contains
  nameWithType: AttributeCollection.Contains
  fullName: netDxf.Collections.AttributeCollection.Contains
- uid: netDxf.Collections.AttributeCollection.CopyTo*
  commentId: Overload:netDxf.Collections.AttributeCollection.CopyTo
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection_CopyTo_netDxf_Entities_Attribute___System_Int32_
  name: CopyTo
  nameWithType: AttributeCollection.CopyTo
  fullName: netDxf.Collections.AttributeCollection.CopyTo
- uid: netDxf.Entities.Attribute[]
  isExternal: true
  href: netDxf.Entities.Attribute.html
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: netDxf.Entities.Attribute[]
  nameWithType.vb: Attribute()
  fullName.vb: netDxf.Entities.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: (
  - name: )
- uid: netDxf.Collections.AttributeCollection.IndexOf*
  commentId: Overload:netDxf.Collections.AttributeCollection.IndexOf
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection_IndexOf_netDxf_Entities_Attribute_
  name: IndexOf
  nameWithType: AttributeCollection.IndexOf
  fullName: netDxf.Collections.AttributeCollection.IndexOf
- uid: netDxf.Collections.AttributeCollection.AttributeWithTag*
  commentId: Overload:netDxf.Collections.AttributeCollection.AttributeWithTag
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection_AttributeWithTag_System_String_
  name: AttributeWithTag
  nameWithType: AttributeCollection.AttributeWithTag
  fullName: netDxf.Collections.AttributeCollection.AttributeWithTag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Collections.AttributeCollection.GetEnumerator*
  commentId: Overload:netDxf.Collections.AttributeCollection.GetEnumerator
  href: netDxf.Collections.AttributeCollection.html#netDxf_Collections_AttributeCollection_GetEnumerator
  name: GetEnumerator
  nameWithType: AttributeCollection.GetEnumerator
  fullName: netDxf.Collections.AttributeCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Attribute>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.Attribute>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Attribute).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.Attribute).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{netDxf.Entities.Attribute}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{netDxf.Entities.Attribute}
  commentId: T:System.Collections.Generic.IEnumerator{netDxf.Entities.Attribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<Attribute>
  nameWithType: IEnumerator<Attribute>
  fullName: System.Collections.Generic.IEnumerator<netDxf.Entities.Attribute>
  nameWithType.vb: IEnumerator(Of Attribute)
  fullName.vb: System.Collections.Generic.IEnumerator(Of netDxf.Entities.Attribute)
  name.vb: IEnumerator(Of Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Attribute
    name: Attribute
    href: netDxf.Entities.Attribute.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
