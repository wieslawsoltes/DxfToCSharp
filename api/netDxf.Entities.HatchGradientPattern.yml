### YamlMime:ManagedReference
items:
- uid: netDxf.Entities.HatchGradientPattern
  commentId: T:netDxf.Entities.HatchGradientPattern
  id: HatchGradientPattern
  parent: netDxf.Entities
  children:
  - netDxf.Entities.HatchGradientPattern.#ctor
  - netDxf.Entities.HatchGradientPattern.#ctor(System.String)
  - netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,System.Double,netDxf.Entities.HatchGradientPatternType)
  - netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,System.Double,netDxf.Entities.HatchGradientPatternType,System.String)
  - netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,netDxf.AciColor,netDxf.Entities.HatchGradientPatternType)
  - netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,netDxf.AciColor,netDxf.Entities.HatchGradientPatternType,System.String)
  - netDxf.Entities.HatchGradientPattern.Centered
  - netDxf.Entities.HatchGradientPattern.Clone
  - netDxf.Entities.HatchGradientPattern.Color1
  - netDxf.Entities.HatchGradientPattern.Color2
  - netDxf.Entities.HatchGradientPattern.GradientType
  - netDxf.Entities.HatchGradientPattern.SingleColor
  - netDxf.Entities.HatchGradientPattern.Tint
  langs:
  - csharp
  - vb
  name: HatchGradientPattern
  nameWithType: HatchGradientPattern
  fullName: netDxf.Entities.HatchGradientPattern
  type: Class
  source:
    id: HatchGradientPattern
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Represents the hatch gradient pattern style.
  remarks: Gradient patterns are only supported by AutoCad2004 and higher DXF versions. It will default to a solid pattern if saved as AutoCad2000.
  example: []
  syntax:
    content: 'public class HatchGradientPattern : HatchPattern, ICloneable'
    content.vb: Public Class HatchGradientPattern Inherits HatchPattern Implements ICloneable
  inheritance:
  - System.Object
  - netDxf.Entities.HatchPattern
  implements:
  - System.ICloneable
  inheritedMembers:
  - netDxf.Entities.HatchPattern.Solid
  - netDxf.Entities.HatchPattern.Line
  - netDxf.Entities.HatchPattern.Net
  - netDxf.Entities.HatchPattern.Dots
  - netDxf.Entities.HatchPattern.Name
  - netDxf.Entities.HatchPattern.Description
  - netDxf.Entities.HatchPattern.Style
  - netDxf.Entities.HatchPattern.Type
  - netDxf.Entities.HatchPattern.Fill
  - netDxf.Entities.HatchPattern.Origin
  - netDxf.Entities.HatchPattern.Angle
  - netDxf.Entities.HatchPattern.Scale
  - netDxf.Entities.HatchPattern.LineDefinitions
  - netDxf.Entities.HatchPattern.NamesFromFile(System.String)
  - netDxf.Entities.HatchPattern.Load(System.String,System.String)
  - netDxf.Entities.HatchPattern.Save(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Entities.HatchGradientPattern.#ctor
  commentId: M:netDxf.Entities.HatchGradientPattern.#ctor
  id: '#ctor'
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: HatchGradientPattern()
  nameWithType: HatchGradientPattern.HatchGradientPattern()
  fullName: netDxf.Entities.HatchGradientPattern.HatchGradientPattern()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 54
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchGradientPattern</code> class as a default linear gradient.
  example: []
  syntax:
    content: public HatchGradientPattern()
    content.vb: Public Sub New()
  overload: netDxf.Entities.HatchGradientPattern.#ctor*
  nameWithType.vb: HatchGradientPattern.New()
  fullName.vb: netDxf.Entities.HatchGradientPattern.New()
  name.vb: New()
- uid: netDxf.Entities.HatchGradientPattern.#ctor(System.String)
  commentId: M:netDxf.Entities.HatchGradientPattern.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: HatchGradientPattern(string)
  nameWithType: HatchGradientPattern.HatchGradientPattern(string)
  fullName: netDxf.Entities.HatchGradientPattern.HatchGradientPattern(string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 63
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchGradientPattern</code> class as a default linear gradient.
  example: []
  syntax:
    content: public HatchGradientPattern(string description)
    parameters:
    - id: description
      type: System.String
      description: Description of the pattern (optional, this information is not saved in the DXF file). By default it will use the supplied name.
    content.vb: Public Sub New(description As String)
  overload: netDxf.Entities.HatchGradientPattern.#ctor*
  nameWithType.vb: HatchGradientPattern.New(String)
  fullName.vb: netDxf.Entities.HatchGradientPattern.New(String)
  name.vb: New(String)
- uid: netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,System.Double,netDxf.Entities.HatchGradientPatternType)
  commentId: M:netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,System.Double,netDxf.Entities.HatchGradientPatternType)
  id: '#ctor(netDxf.AciColor,System.Double,netDxf.Entities.HatchGradientPatternType)'
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: HatchGradientPattern(AciColor, double, HatchGradientPatternType)
  nameWithType: HatchGradientPattern.HatchGradientPattern(AciColor, double, HatchGradientPatternType)
  fullName: netDxf.Entities.HatchGradientPattern.HatchGradientPattern(netDxf.AciColor, double, netDxf.Entities.HatchGradientPatternType)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 80
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchGradientPattern</code> class as a single color gradient.
  example: []
  syntax:
    content: public HatchGradientPattern(AciColor color, double tint, HatchGradientPatternType type)
    parameters:
    - id: color
      type: netDxf.AciColor
      description: Gradient <xref href="netDxf.AciColor?text=color" data-throw-if-not-resolved="false"></xref>.
    - id: tint
      type: System.Double
      description: Gradient tint.
    - id: type
      type: netDxf.Entities.HatchGradientPatternType
      description: Gradient <xref href="netDxf.Entities.HatchGradientPatternType?text=type" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(color As AciColor, tint As Double, type As HatchGradientPatternType)
  overload: netDxf.Entities.HatchGradientPattern.#ctor*
  nameWithType.vb: HatchGradientPattern.New(AciColor, Double, HatchGradientPatternType)
  fullName.vb: netDxf.Entities.HatchGradientPattern.New(netDxf.AciColor, Double, netDxf.Entities.HatchGradientPatternType)
  name.vb: New(AciColor, Double, HatchGradientPatternType)
- uid: netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,System.Double,netDxf.Entities.HatchGradientPatternType,System.String)
  commentId: M:netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,System.Double,netDxf.Entities.HatchGradientPatternType,System.String)
  id: '#ctor(netDxf.AciColor,System.Double,netDxf.Entities.HatchGradientPatternType,System.String)'
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: HatchGradientPattern(AciColor, double, HatchGradientPatternType, string)
  nameWithType: HatchGradientPattern.HatchGradientPattern(AciColor, double, HatchGradientPatternType, string)
  fullName: netDxf.Entities.HatchGradientPattern.HatchGradientPattern(netDxf.AciColor, double, netDxf.Entities.HatchGradientPatternType, string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 92
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchGradientPattern</code> class as a single color gradient.
  example: []
  syntax:
    content: public HatchGradientPattern(AciColor color, double tint, HatchGradientPatternType type, string description)
    parameters:
    - id: color
      type: netDxf.AciColor
      description: Gradient <xref href="netDxf.AciColor?text=color" data-throw-if-not-resolved="false"></xref>.
    - id: tint
      type: System.Double
      description: Gradient tint.
    - id: type
      type: netDxf.Entities.HatchGradientPatternType
      description: Gradient <xref href="netDxf.Entities.HatchGradientPatternType?text=type" data-throw-if-not-resolved="false"></xref>.
    - id: description
      type: System.String
      description: Description of the pattern (optional, this information is not saved in the DXF file). By default it will use the supplied name.
    content.vb: Public Sub New(color As AciColor, tint As Double, type As HatchGradientPatternType, description As String)
  overload: netDxf.Entities.HatchGradientPattern.#ctor*
  nameWithType.vb: HatchGradientPattern.New(AciColor, Double, HatchGradientPatternType, String)
  fullName.vb: netDxf.Entities.HatchGradientPattern.New(netDxf.AciColor, Double, netDxf.Entities.HatchGradientPatternType, String)
  name.vb: New(AciColor, Double, HatchGradientPatternType, String)
- uid: netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,netDxf.AciColor,netDxf.Entities.HatchGradientPatternType)
  commentId: M:netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,netDxf.AciColor,netDxf.Entities.HatchGradientPatternType)
  id: '#ctor(netDxf.AciColor,netDxf.AciColor,netDxf.Entities.HatchGradientPatternType)'
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: HatchGradientPattern(AciColor, AciColor, HatchGradientPatternType)
  nameWithType: HatchGradientPattern.HatchGradientPattern(AciColor, AciColor, HatchGradientPatternType)
  fullName: netDxf.Entities.HatchGradientPattern.HatchGradientPattern(netDxf.AciColor, netDxf.AciColor, netDxf.Entities.HatchGradientPatternType)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 109
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchGradientPattern</code> class as a two color gradient.
  example: []
  syntax:
    content: public HatchGradientPattern(AciColor color1, AciColor color2, HatchGradientPatternType type)
    parameters:
    - id: color1
      type: netDxf.AciColor
      description: Gradient <xref href="netDxf.AciColor?text=color" data-throw-if-not-resolved="false"></xref> 1.
    - id: color2
      type: netDxf.AciColor
      description: Gradient <xref href="netDxf.AciColor?text=color" data-throw-if-not-resolved="false"></xref> 2.
    - id: type
      type: netDxf.Entities.HatchGradientPatternType
      description: Gradient <xref href="netDxf.Entities.HatchGradientPatternType?text=type" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(color1 As AciColor, color2 As AciColor, type As HatchGradientPatternType)
  overload: netDxf.Entities.HatchGradientPattern.#ctor*
  nameWithType.vb: HatchGradientPattern.New(AciColor, AciColor, HatchGradientPatternType)
  fullName.vb: netDxf.Entities.HatchGradientPattern.New(netDxf.AciColor, netDxf.AciColor, netDxf.Entities.HatchGradientPatternType)
  name.vb: New(AciColor, AciColor, HatchGradientPatternType)
- uid: netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,netDxf.AciColor,netDxf.Entities.HatchGradientPatternType,System.String)
  commentId: M:netDxf.Entities.HatchGradientPattern.#ctor(netDxf.AciColor,netDxf.AciColor,netDxf.Entities.HatchGradientPatternType,System.String)
  id: '#ctor(netDxf.AciColor,netDxf.AciColor,netDxf.Entities.HatchGradientPatternType,System.String)'
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: HatchGradientPattern(AciColor, AciColor, HatchGradientPatternType, string)
  nameWithType: HatchGradientPattern.HatchGradientPattern(AciColor, AciColor, HatchGradientPatternType, string)
  fullName: netDxf.Entities.HatchGradientPattern.HatchGradientPattern(netDxf.AciColor, netDxf.AciColor, netDxf.Entities.HatchGradientPatternType, string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 121
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchGradientPattern</code> class as a two color gradient.
  example: []
  syntax:
    content: public HatchGradientPattern(AciColor color1, AciColor color2, HatchGradientPatternType type, string description)
    parameters:
    - id: color1
      type: netDxf.AciColor
      description: Gradient <xref href="netDxf.AciColor?text=color" data-throw-if-not-resolved="false"></xref> 1.
    - id: color2
      type: netDxf.AciColor
      description: Gradient <xref href="netDxf.AciColor?text=color" data-throw-if-not-resolved="false"></xref> 2.
    - id: type
      type: netDxf.Entities.HatchGradientPatternType
      description: Gradient <xref href="netDxf.Entities.HatchGradientPatternType?text=type" data-throw-if-not-resolved="false"></xref>.
    - id: description
      type: System.String
      description: Description of the pattern (optional, this information is not saved in the DXF file). By default it will use the supplied name.
    content.vb: Public Sub New(color1 As AciColor, color2 As AciColor, type As HatchGradientPatternType, description As String)
  overload: netDxf.Entities.HatchGradientPattern.#ctor*
  nameWithType.vb: HatchGradientPattern.New(AciColor, AciColor, HatchGradientPatternType, String)
  fullName.vb: netDxf.Entities.HatchGradientPattern.New(netDxf.AciColor, netDxf.AciColor, netDxf.Entities.HatchGradientPatternType, String)
  name.vb: New(AciColor, AciColor, HatchGradientPatternType, String)
- uid: netDxf.Entities.HatchGradientPattern.GradientType
  commentId: P:netDxf.Entities.HatchGradientPattern.GradientType
  id: GradientType
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: GradientType
  nameWithType: HatchGradientPattern.GradientType
  fullName: netDxf.Entities.HatchGradientPattern.GradientType
  type: Property
  source:
    id: GradientType
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 139
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or set the gradient pattern <xref href="netDxf.Entities.HatchGradientPatternType?text=type" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public HatchGradientPatternType GradientType { get; set; }
    parameters: []
    return:
      type: netDxf.Entities.HatchGradientPatternType
    content.vb: Public Property GradientType As HatchGradientPatternType
  overload: netDxf.Entities.HatchGradientPattern.GradientType*
- uid: netDxf.Entities.HatchGradientPattern.Color1
  commentId: P:netDxf.Entities.HatchGradientPattern.Color1
  id: Color1
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: Color1
  nameWithType: HatchGradientPattern.Color1
  fullName: netDxf.Entities.HatchGradientPattern.Color1
  type: Property
  source:
    id: Color1
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 148
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the gradient <xref href="netDxf.AciColor?text=color" data-throw-if-not-resolved="false"></xref> 1.
  example: []
  syntax:
    content: public AciColor Color1 { get; set; }
    parameters: []
    return:
      type: netDxf.AciColor
    content.vb: Public Property Color1 As AciColor
  overload: netDxf.Entities.HatchGradientPattern.Color1*
- uid: netDxf.Entities.HatchGradientPattern.Color2
  commentId: P:netDxf.Entities.HatchGradientPattern.Color2
  id: Color2
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: Color2
  nameWithType: HatchGradientPattern.Color2
  fullName: netDxf.Entities.HatchGradientPattern.Color2
  type: Property
  source:
    id: Color2
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 163
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the gradient <xref href="netDxf.AciColor?text=color" data-throw-if-not-resolved="false"></xref> 2.
  remarks: If color 2 is defined, automatically the single color property will be set to false.
  example: []
  syntax:
    content: public AciColor Color2 { get; set; }
    parameters: []
    return:
      type: netDxf.AciColor
    content.vb: Public Property Color2 As AciColor
  overload: netDxf.Entities.HatchGradientPattern.Color2*
- uid: netDxf.Entities.HatchGradientPattern.SingleColor
  commentId: P:netDxf.Entities.HatchGradientPattern.SingleColor
  id: SingleColor
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: SingleColor
  nameWithType: HatchGradientPattern.SingleColor
  fullName: netDxf.Entities.HatchGradientPattern.SingleColor
  type: Property
  source:
    id: SingleColor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 176
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the gradient pattern color type.
  example: []
  syntax:
    content: public bool SingleColor { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SingleColor As Boolean
  overload: netDxf.Entities.HatchGradientPattern.SingleColor*
- uid: netDxf.Entities.HatchGradientPattern.Tint
  commentId: P:netDxf.Entities.HatchGradientPattern.Tint
  id: Tint
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: Tint
  nameWithType: HatchGradientPattern.Tint
  fullName: netDxf.Entities.HatchGradientPattern.Tint
  type: Property
  source:
    id: Tint
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 191
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the gradient pattern tint.
  remarks: It only applies to single color gradient patterns.
  example: []
  syntax:
    content: public double Tint { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Tint As Double
  overload: netDxf.Entities.HatchGradientPattern.Tint*
- uid: netDxf.Entities.HatchGradientPattern.Centered
  commentId: P:netDxf.Entities.HatchGradientPattern.Centered
  id: Centered
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: Centered
  nameWithType: HatchGradientPattern.Centered
  fullName: netDxf.Entities.HatchGradientPattern.Centered
  type: Property
  source:
    id: Centered
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 209
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the pattern is centered or not.
  remarks: >-
    Each gradient has two definitions, shifted and unsifted. A shift value describes the blend of the two definitions that should be used.

    A value of 0.0 (false) means only the unsifted version should be used, and a value of 1.0 (true) means that only the shifted version should be used.
  example: []
  syntax:
    content: public bool Centered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Centered As Boolean
  overload: netDxf.Entities.HatchGradientPattern.Centered*
- uid: netDxf.Entities.HatchGradientPattern.Clone
  commentId: M:netDxf.Entities.HatchGradientPattern.Clone
  id: Clone
  parent: netDxf.Entities.HatchGradientPattern
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: HatchGradientPattern.Clone()
  fullName: netDxf.Entities.HatchGradientPattern.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchGradientPattern.cs
    startLine: 229
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a new object that is a copy of the current instance.
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: A new object that is a copy of this instance.
    content.vb: Public Overrides Function Clone() As Object
  overridden: netDxf.Entities.HatchPattern.Clone
  overload: netDxf.Entities.HatchGradientPattern.Clone*
references:
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.Entities.HatchPattern
  commentId: T:netDxf.Entities.HatchPattern
  parent: netDxf.Entities
  href: netDxf.Entities.HatchPattern.html
  name: HatchPattern
  nameWithType: HatchPattern
  fullName: netDxf.Entities.HatchPattern
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: netDxf.Entities.HatchPattern.Solid
  commentId: P:netDxf.Entities.HatchPattern.Solid
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Solid
  name: Solid
  nameWithType: HatchPattern.Solid
  fullName: netDxf.Entities.HatchPattern.Solid
- uid: netDxf.Entities.HatchPattern.Line
  commentId: P:netDxf.Entities.HatchPattern.Line
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Line
  name: Line
  nameWithType: HatchPattern.Line
  fullName: netDxf.Entities.HatchPattern.Line
- uid: netDxf.Entities.HatchPattern.Net
  commentId: P:netDxf.Entities.HatchPattern.Net
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Net
  name: Net
  nameWithType: HatchPattern.Net
  fullName: netDxf.Entities.HatchPattern.Net
- uid: netDxf.Entities.HatchPattern.Dots
  commentId: P:netDxf.Entities.HatchPattern.Dots
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Dots
  name: Dots
  nameWithType: HatchPattern.Dots
  fullName: netDxf.Entities.HatchPattern.Dots
- uid: netDxf.Entities.HatchPattern.Name
  commentId: P:netDxf.Entities.HatchPattern.Name
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Name
  name: Name
  nameWithType: HatchPattern.Name
  fullName: netDxf.Entities.HatchPattern.Name
- uid: netDxf.Entities.HatchPattern.Description
  commentId: P:netDxf.Entities.HatchPattern.Description
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Description
  name: Description
  nameWithType: HatchPattern.Description
  fullName: netDxf.Entities.HatchPattern.Description
- uid: netDxf.Entities.HatchPattern.Style
  commentId: P:netDxf.Entities.HatchPattern.Style
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Style
  name: Style
  nameWithType: HatchPattern.Style
  fullName: netDxf.Entities.HatchPattern.Style
- uid: netDxf.Entities.HatchPattern.Type
  commentId: P:netDxf.Entities.HatchPattern.Type
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Type
  name: Type
  nameWithType: HatchPattern.Type
  fullName: netDxf.Entities.HatchPattern.Type
- uid: netDxf.Entities.HatchPattern.Fill
  commentId: P:netDxf.Entities.HatchPattern.Fill
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Fill
  name: Fill
  nameWithType: HatchPattern.Fill
  fullName: netDxf.Entities.HatchPattern.Fill
- uid: netDxf.Entities.HatchPattern.Origin
  commentId: P:netDxf.Entities.HatchPattern.Origin
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Origin
  name: Origin
  nameWithType: HatchPattern.Origin
  fullName: netDxf.Entities.HatchPattern.Origin
- uid: netDxf.Entities.HatchPattern.Angle
  commentId: P:netDxf.Entities.HatchPattern.Angle
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Angle
  name: Angle
  nameWithType: HatchPattern.Angle
  fullName: netDxf.Entities.HatchPattern.Angle
- uid: netDxf.Entities.HatchPattern.Scale
  commentId: P:netDxf.Entities.HatchPattern.Scale
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Scale
  name: Scale
  nameWithType: HatchPattern.Scale
  fullName: netDxf.Entities.HatchPattern.Scale
- uid: netDxf.Entities.HatchPattern.LineDefinitions
  commentId: P:netDxf.Entities.HatchPattern.LineDefinitions
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_LineDefinitions
  name: LineDefinitions
  nameWithType: HatchPattern.LineDefinitions
  fullName: netDxf.Entities.HatchPattern.LineDefinitions
- uid: netDxf.Entities.HatchPattern.NamesFromFile(System.String)
  commentId: M:netDxf.Entities.HatchPattern.NamesFromFile(System.String)
  parent: netDxf.Entities.HatchPattern
  isExternal: true
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_NamesFromFile_System_String_
  name: NamesFromFile(string)
  nameWithType: HatchPattern.NamesFromFile(string)
  fullName: netDxf.Entities.HatchPattern.NamesFromFile(string)
  nameWithType.vb: HatchPattern.NamesFromFile(String)
  fullName.vb: netDxf.Entities.HatchPattern.NamesFromFile(String)
  name.vb: NamesFromFile(String)
  spec.csharp:
  - uid: netDxf.Entities.HatchPattern.NamesFromFile(System.String)
    name: NamesFromFile
    href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_NamesFromFile_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Entities.HatchPattern.NamesFromFile(System.String)
    name: NamesFromFile
    href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_NamesFromFile_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Entities.HatchPattern.Load(System.String,System.String)
  commentId: M:netDxf.Entities.HatchPattern.Load(System.String,System.String)
  parent: netDxf.Entities.HatchPattern
  isExternal: true
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Load_System_String_System_String_
  name: Load(string, string)
  nameWithType: HatchPattern.Load(string, string)
  fullName: netDxf.Entities.HatchPattern.Load(string, string)
  nameWithType.vb: HatchPattern.Load(String, String)
  fullName.vb: netDxf.Entities.HatchPattern.Load(String, String)
  name.vb: Load(String, String)
  spec.csharp:
  - uid: netDxf.Entities.HatchPattern.Load(System.String,System.String)
    name: Load
    href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Load_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Entities.HatchPattern.Load(System.String,System.String)
    name: Load
    href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Load_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Entities.HatchPattern.Save(System.String)
  commentId: M:netDxf.Entities.HatchPattern.Save(System.String)
  parent: netDxf.Entities.HatchPattern
  isExternal: true
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Save_System_String_
  name: Save(string)
  nameWithType: HatchPattern.Save(string)
  fullName: netDxf.Entities.HatchPattern.Save(string)
  nameWithType.vb: HatchPattern.Save(String)
  fullName.vb: netDxf.Entities.HatchPattern.Save(String)
  name.vb: Save(String)
  spec.csharp:
  - uid: netDxf.Entities.HatchPattern.Save(System.String)
    name: Save
    href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Save_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Entities.HatchPattern.Save(System.String)
    name: Save
    href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Save_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.Entities.HatchGradientPattern.#ctor*
  commentId: Overload:netDxf.Entities.HatchGradientPattern.#ctor
  href: netDxf.Entities.HatchGradientPattern.html#netDxf_Entities_HatchGradientPattern__ctor
  name: HatchGradientPattern
  nameWithType: HatchGradientPattern.HatchGradientPattern
  fullName: netDxf.Entities.HatchGradientPattern.HatchGradientPattern
  nameWithType.vb: HatchGradientPattern.New
  fullName.vb: netDxf.Entities.HatchGradientPattern.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.AciColor
  commentId: T:netDxf.AciColor
  parent: netDxf
  href: netDxf.AciColor.html
  name: AciColor
  nameWithType: AciColor
  fullName: netDxf.AciColor
- uid: netDxf.Entities.HatchGradientPatternType
  commentId: T:netDxf.Entities.HatchGradientPatternType
  parent: netDxf.Entities
  href: netDxf.Entities.HatchGradientPatternType.html
  name: HatchGradientPatternType
  nameWithType: HatchGradientPatternType
  fullName: netDxf.Entities.HatchGradientPatternType
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.Entities.HatchGradientPattern.GradientType*
  commentId: Overload:netDxf.Entities.HatchGradientPattern.GradientType
  href: netDxf.Entities.HatchGradientPattern.html#netDxf_Entities_HatchGradientPattern_GradientType
  name: GradientType
  nameWithType: HatchGradientPattern.GradientType
  fullName: netDxf.Entities.HatchGradientPattern.GradientType
- uid: netDxf.Entities.HatchGradientPattern.Color1*
  commentId: Overload:netDxf.Entities.HatchGradientPattern.Color1
  href: netDxf.Entities.HatchGradientPattern.html#netDxf_Entities_HatchGradientPattern_Color1
  name: Color1
  nameWithType: HatchGradientPattern.Color1
  fullName: netDxf.Entities.HatchGradientPattern.Color1
- uid: netDxf.Entities.HatchGradientPattern.Color2*
  commentId: Overload:netDxf.Entities.HatchGradientPattern.Color2
  href: netDxf.Entities.HatchGradientPattern.html#netDxf_Entities_HatchGradientPattern_Color2
  name: Color2
  nameWithType: HatchGradientPattern.Color2
  fullName: netDxf.Entities.HatchGradientPattern.Color2
- uid: netDxf.Entities.HatchGradientPattern.SingleColor*
  commentId: Overload:netDxf.Entities.HatchGradientPattern.SingleColor
  href: netDxf.Entities.HatchGradientPattern.html#netDxf_Entities_HatchGradientPattern_SingleColor
  name: SingleColor
  nameWithType: HatchGradientPattern.SingleColor
  fullName: netDxf.Entities.HatchGradientPattern.SingleColor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Entities.HatchGradientPattern.Tint*
  commentId: Overload:netDxf.Entities.HatchGradientPattern.Tint
  href: netDxf.Entities.HatchGradientPattern.html#netDxf_Entities_HatchGradientPattern_Tint
  name: Tint
  nameWithType: HatchGradientPattern.Tint
  fullName: netDxf.Entities.HatchGradientPattern.Tint
- uid: netDxf.Entities.HatchGradientPattern.Centered*
  commentId: Overload:netDxf.Entities.HatchGradientPattern.Centered
  href: netDxf.Entities.HatchGradientPattern.html#netDxf_Entities_HatchGradientPattern_Centered
  name: Centered
  nameWithType: HatchGradientPattern.Centered
  fullName: netDxf.Entities.HatchGradientPattern.Centered
- uid: netDxf.Entities.HatchPattern.Clone
  commentId: M:netDxf.Entities.HatchPattern.Clone
  parent: netDxf.Entities.HatchPattern
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Clone
  name: Clone()
  nameWithType: HatchPattern.Clone()
  fullName: netDxf.Entities.HatchPattern.Clone()
  spec.csharp:
  - uid: netDxf.Entities.HatchPattern.Clone
    name: Clone
    href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.HatchPattern.Clone
    name: Clone
    href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Clone
  - name: (
  - name: )
- uid: netDxf.Entities.HatchGradientPattern.Clone*
  commentId: Overload:netDxf.Entities.HatchGradientPattern.Clone
  href: netDxf.Entities.HatchGradientPattern.html#netDxf_Entities_HatchGradientPattern_Clone
  name: Clone
  nameWithType: HatchGradientPattern.Clone
  fullName: netDxf.Entities.HatchGradientPattern.Clone
