### YamlMime:ManagedReference
items:
- uid: netDxf.Entities.PolygonMesh
  commentId: T:netDxf.Entities.PolygonMesh
  id: PolygonMesh
  parent: netDxf.Entities
  children:
  - netDxf.Entities.PolygonMesh.#ctor(System.Int16,System.Int16,System.Collections.Generic.IEnumerable{netDxf.Vector3})
  - netDxf.Entities.PolygonMesh.Clone
  - netDxf.Entities.PolygonMesh.DefaultSurfU
  - netDxf.Entities.PolygonMesh.DefaultSurfV
  - netDxf.Entities.PolygonMesh.DensityU
  - netDxf.Entities.PolygonMesh.DensityV
  - netDxf.Entities.PolygonMesh.Explode
  - netDxf.Entities.PolygonMesh.GetVertex(System.Int32,System.Int32)
  - netDxf.Entities.PolygonMesh.IsClosedInU
  - netDxf.Entities.PolygonMesh.IsClosedInV
  - netDxf.Entities.PolygonMesh.MeshVertexes
  - netDxf.Entities.PolygonMesh.MeshVertexes(System.Int32,System.Int32)
  - netDxf.Entities.PolygonMesh.SetVertex(System.Int32,System.Int32,netDxf.Vector3)
  - netDxf.Entities.PolygonMesh.SmoothType
  - netDxf.Entities.PolygonMesh.ToMesh
  - netDxf.Entities.PolygonMesh.ToMesh(System.Int32,System.Int32)
  - netDxf.Entities.PolygonMesh.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  - netDxf.Entities.PolygonMesh.U
  - netDxf.Entities.PolygonMesh.V
  - netDxf.Entities.PolygonMesh.Vertexes
  langs:
  - csharp
  - vb
  name: PolygonMesh
  nameWithType: PolygonMesh
  fullName: netDxf.Entities.PolygonMesh
  type: Class
  source:
    id: PolygonMesh
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Represents a mesh grid <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class PolygonMesh : EntityObject, ICloneable'
    content.vb: Public Class PolygonMesh Inherits EntityObject Implements ICloneable
  inheritance:
  - System.Object
  - netDxf.DxfObject
  - netDxf.Entities.EntityObject
  implements:
  - System.ICloneable
  inheritedMembers:
  - netDxf.Entities.EntityObject.LayerChanged
  - netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  - netDxf.Entities.EntityObject.LinetypeChanged
  - netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  - netDxf.Entities.EntityObject.Reactors
  - netDxf.Entities.EntityObject.Type
  - netDxf.Entities.EntityObject.Color
  - netDxf.Entities.EntityObject.Layer
  - netDxf.Entities.EntityObject.Linetype
  - netDxf.Entities.EntityObject.Lineweight
  - netDxf.Entities.EntityObject.Transparency
  - netDxf.Entities.EntityObject.LinetypeScale
  - netDxf.Entities.EntityObject.IsVisible
  - netDxf.Entities.EntityObject.Normal
  - netDxf.Entities.EntityObject.Owner
  - netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  - netDxf.Entities.EntityObject.ToString
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.XData
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Entities.PolygonMesh.#ctor(System.Int16,System.Int16,System.Collections.Generic.IEnumerable{netDxf.Vector3})
  commentId: M:netDxf.Entities.PolygonMesh.#ctor(System.Int16,System.Int16,System.Collections.Generic.IEnumerable{netDxf.Vector3})
  id: '#ctor(System.Int16,System.Int16,System.Collections.Generic.IEnumerable{netDxf.Vector3})'
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: PolygonMesh(short, short, IEnumerable<Vector3>)
  nameWithType: PolygonMesh.PolygonMesh(short, short, IEnumerable<Vector3>)
  fullName: netDxf.Entities.PolygonMesh.PolygonMesh(short, short, System.Collections.Generic.IEnumerable<netDxf.Vector3>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 61
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>PolygonMesh</code> class.
  example: []
  syntax:
    content: public PolygonMesh(short u, short v, IEnumerable<Vector3> vertexes)
    parameters:
    - id: u
      type: System.Int16
      description: Number of vertexes along the U direction (local X axis).
    - id: v
      type: System.Int16
      description: Number of vertexes along the V direction (local Y axis).
    - id: vertexes
      type: System.Collections.Generic.IEnumerable{netDxf.Vector3}
      description: Array of UxV vertexes that represents the mesh grid.
    content.vb: Public Sub New(u As Short, v As Short, vertexes As IEnumerable(Of Vector3))
  overload: netDxf.Entities.PolygonMesh.#ctor*
  nameWithType.vb: PolygonMesh.New(Short, Short, IEnumerable(Of Vector3))
  fullName.vb: netDxf.Entities.PolygonMesh.New(Short, Short, System.Collections.Generic.IEnumerable(Of netDxf.Vector3))
  name.vb: New(Short, Short, IEnumerable(Of Vector3))
- uid: netDxf.Entities.PolygonMesh.Vertexes
  commentId: P:netDxf.Entities.PolygonMesh.Vertexes
  id: Vertexes
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: Vertexes
  nameWithType: PolygonMesh.Vertexes
  fullName: netDxf.Entities.PolygonMesh.Vertexes
  type: Property
  source:
    id: Vertexes
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 101
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the mesh vertexes.
  example: []
  syntax:
    content: public Vector3[] Vertexes { get; }
    parameters: []
    return:
      type: netDxf.Vector3[]
    content.vb: Public ReadOnly Property Vertexes As Vector3()
  overload: netDxf.Entities.PolygonMesh.Vertexes*
- uid: netDxf.Entities.PolygonMesh.SetVertex(System.Int32,System.Int32,netDxf.Vector3)
  commentId: M:netDxf.Entities.PolygonMesh.SetVertex(System.Int32,System.Int32,netDxf.Vector3)
  id: SetVertex(System.Int32,System.Int32,netDxf.Vector3)
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: SetVertex(int, int, Vector3)
  nameWithType: PolygonMesh.SetVertex(int, int, Vector3)
  fullName: netDxf.Entities.PolygonMesh.SetVertex(int, int, netDxf.Vector3)
  type: Method
  source:
    id: SetVertex
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 112
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Set a PolygonMesh vertex by its indexes.
  example: []
  syntax:
    content: public void SetVertex(int i0, int i1, Vector3 vertex)
    parameters:
    - id: i0
      type: System.Int32
      description: Index of the vertex in the U direction.
    - id: i1
      type: System.Int32
      description: Index of the vertex in the V direction.
    - id: vertex
      type: netDxf.Vector3
      description: A Vector3.
    content.vb: Public Sub SetVertex(i0 As Integer, i1 As Integer, vertex As Vector3)
  overload: netDxf.Entities.PolygonMesh.SetVertex*
  nameWithType.vb: PolygonMesh.SetVertex(Integer, Integer, Vector3)
  fullName.vb: netDxf.Entities.PolygonMesh.SetVertex(Integer, Integer, netDxf.Vector3)
  name.vb: SetVertex(Integer, Integer, Vector3)
- uid: netDxf.Entities.PolygonMesh.GetVertex(System.Int32,System.Int32)
  commentId: M:netDxf.Entities.PolygonMesh.GetVertex(System.Int32,System.Int32)
  id: GetVertex(System.Int32,System.Int32)
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: GetVertex(int, int)
  nameWithType: PolygonMesh.GetVertex(int, int)
  fullName: netDxf.Entities.PolygonMesh.GetVertex(int, int)
  type: Method
  source:
    id: GetVertex
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 125
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets a PolygonMesh vertex by its indexes.
  example: []
  syntax:
    content: public Vector3 GetVertex(int i0, int i1)
    parameters:
    - id: i0
      type: System.Int32
      description: Index of the vertex in the U direction.
    - id: i1
      type: System.Int32
      description: Index of the vertex in the V direction.
    return:
      type: netDxf.Vector3
    content.vb: Public Function GetVertex(i0 As Integer, i1 As Integer) As Vector3
  overload: netDxf.Entities.PolygonMesh.GetVertex*
  nameWithType.vb: PolygonMesh.GetVertex(Integer, Integer)
  fullName.vb: netDxf.Entities.PolygonMesh.GetVertex(Integer, Integer)
  name.vb: GetVertex(Integer, Integer)
- uid: netDxf.Entities.PolygonMesh.U
  commentId: P:netDxf.Entities.PolygonMesh.U
  id: U
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: U
  nameWithType: PolygonMesh.U
  fullName: netDxf.Entities.PolygonMesh.U
  type: Property
  source:
    id: U
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 138
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the number of vertexes along the U direction (local X axis).
  example: []
  syntax:
    content: public short U { get; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public ReadOnly Property U As Short
  overload: netDxf.Entities.PolygonMesh.U*
- uid: netDxf.Entities.PolygonMesh.V
  commentId: P:netDxf.Entities.PolygonMesh.V
  id: V
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: V
  nameWithType: PolygonMesh.V
  fullName: netDxf.Entities.PolygonMesh.V
  type: Property
  source:
    id: V
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 146
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the number of vertexes along the V direction (local Y axis).
  example: []
  syntax:
    content: public short V { get; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public ReadOnly Property V As Short
  overload: netDxf.Entities.PolygonMesh.V*
- uid: netDxf.Entities.PolygonMesh.DensityU
  commentId: P:netDxf.Entities.PolygonMesh.DensityU
  id: DensityU
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: DensityU
  nameWithType: PolygonMesh.DensityU
  fullName: netDxf.Entities.PolygonMesh.DensityU
  type: Property
  source:
    id: DensityU
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 155
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Smooth surface U density.
  remarks: Valid values range from 3 to 201.
  example: []
  syntax:
    content: public short DensityU { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Property DensityU As Short
  overload: netDxf.Entities.PolygonMesh.DensityU*
- uid: netDxf.Entities.PolygonMesh.DensityV
  commentId: P:netDxf.Entities.PolygonMesh.DensityV
  id: DensityV
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: DensityV
  nameWithType: PolygonMesh.DensityV
  fullName: netDxf.Entities.PolygonMesh.DensityV
  type: Property
  source:
    id: DensityV
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 172
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Smooth surface V density
  remarks: Valid values range from 3 to 201.
  example: []
  syntax:
    content: public short DensityV { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Property DensityV As Short
  overload: netDxf.Entities.PolygonMesh.DensityV*
- uid: netDxf.Entities.PolygonMesh.IsClosedInU
  commentId: P:netDxf.Entities.PolygonMesh.IsClosedInU
  id: IsClosedInU
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: IsClosedInU
  nameWithType: PolygonMesh.IsClosedInU
  fullName: netDxf.Entities.PolygonMesh.IsClosedInU
  type: Property
  source:
    id: IsClosedInU
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 188
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the polygon mesh is closed along the U direction (local X axis).
  example: []
  syntax:
    content: public bool IsClosedInU { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsClosedInU As Boolean
  overload: netDxf.Entities.PolygonMesh.IsClosedInU*
- uid: netDxf.Entities.PolygonMesh.IsClosedInV
  commentId: P:netDxf.Entities.PolygonMesh.IsClosedInV
  id: IsClosedInV
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: IsClosedInV
  nameWithType: PolygonMesh.IsClosedInV
  fullName: netDxf.Entities.PolygonMesh.IsClosedInV
  type: Property
  source:
    id: IsClosedInV
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 207
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the polygon mesh is closed along the V direction (local Y axis).
  example: []
  syntax:
    content: public bool IsClosedInV { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsClosedInV As Boolean
  overload: netDxf.Entities.PolygonMesh.IsClosedInV*
- uid: netDxf.Entities.PolygonMesh.SmoothType
  commentId: P:netDxf.Entities.PolygonMesh.SmoothType
  id: SmoothType
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: SmoothType
  nameWithType: PolygonMesh.SmoothType
  fullName: netDxf.Entities.PolygonMesh.SmoothType
  type: Property
  source:
    id: SmoothType
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 229
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the polyline smooth type.
  remarks: The additional polygon meshes vertexes corresponding to the SplineFit will be created when writing the DXF file.
  example: []
  syntax:
    content: public PolylineSmoothType SmoothType { get; set; }
    parameters: []
    return:
      type: netDxf.Entities.PolylineSmoothType
    content.vb: Public Property SmoothType As PolylineSmoothType
  overload: netDxf.Entities.PolygonMesh.SmoothType*
- uid: netDxf.Entities.PolygonMesh.DefaultSurfU
  commentId: P:netDxf.Entities.PolygonMesh.DefaultSurfU
  id: DefaultSurfU
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: DefaultSurfU
  nameWithType: PolygonMesh.DefaultSurfU
  fullName: netDxf.Entities.PolygonMesh.DefaultSurfU
  type: Property
  source:
    id: DefaultSurfU
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 253
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the default SurfU value.
  remarks: >-
    This value is used by smoothed polygon meshes when they not belong to a DXF document and the density values are left at the default 0.<br />

    The minimum vertexes generated for smoothed polygon meshes is 3.
  example: []
  syntax:
    content: public static short DefaultSurfU { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Shared Property DefaultSurfU As Short
  overload: netDxf.Entities.PolygonMesh.DefaultSurfU*
- uid: netDxf.Entities.PolygonMesh.DefaultSurfV
  commentId: P:netDxf.Entities.PolygonMesh.DefaultSurfV
  id: DefaultSurfV
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: DefaultSurfV
  nameWithType: PolygonMesh.DefaultSurfV
  fullName: netDxf.Entities.PolygonMesh.DefaultSurfV
  type: Property
  source:
    id: DefaultSurfV
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 273
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the default SurfV value.
  remarks: >-
    This value is used by smoothed polygon meshes when they not belong to a DXF document and the density values are left at the default 0.<br />

    The minimum vertexes generated for smoothed polygon meshes is 3.
  example: []
  syntax:
    content: public static short DefaultSurfV { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Shared Property DefaultSurfV As Short
  overload: netDxf.Entities.PolygonMesh.DefaultSurfV*
- uid: netDxf.Entities.PolygonMesh.MeshVertexes
  commentId: M:netDxf.Entities.PolygonMesh.MeshVertexes
  id: MeshVertexes
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: MeshVertexes()
  nameWithType: PolygonMesh.MeshVertexes()
  fullName: netDxf.Entities.PolygonMesh.MeshVertexes()
  type: Method
  source:
    id: MeshVertexes
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 310
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Obtains a list of vertexes that represent the polygon mesh approximating the surface faces as necessary.
  remarks: The minimum vertexes generated for smoothed polygon meshes is 3 in each direction.
  example: []
  syntax:
    content: public List<Vector3> MeshVertexes()
    return:
      type: System.Collections.Generic.List{netDxf.Vector3}
      description: A list of vertexes that represent the mesh.
    content.vb: Public Function MeshVertexes() As List(Of Vector3)
  overload: netDxf.Entities.PolygonMesh.MeshVertexes*
- uid: netDxf.Entities.PolygonMesh.MeshVertexes(System.Int32,System.Int32)
  commentId: M:netDxf.Entities.PolygonMesh.MeshVertexes(System.Int32,System.Int32)
  id: MeshVertexes(System.Int32,System.Int32)
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: MeshVertexes(int, int)
  nameWithType: PolygonMesh.MeshVertexes(int, int)
  fullName: netDxf.Entities.PolygonMesh.MeshVertexes(int, int)
  type: Method
  source:
    id: MeshVertexes
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 333
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Obtains a list of vertexes that represent the polygon mesh approximating the surface faces as necessary.
  example: []
  syntax:
    content: public List<Vector3> MeshVertexes(int precisionU, int precisionV)
    parameters:
    - id: precisionU
      type: System.Int32
      description: Number of vertexes created along the U direction.
    - id: precisionV
      type: System.Int32
      description: Number of vertexes created along the V direction.
    return:
      type: System.Collections.Generic.List{netDxf.Vector3}
      description: A list of vertexes that represent the mesh.
    content.vb: Public Function MeshVertexes(precisionU As Integer, precisionV As Integer) As List(Of Vector3)
  overload: netDxf.Entities.PolygonMesh.MeshVertexes*
  nameWithType.vb: PolygonMesh.MeshVertexes(Integer, Integer)
  fullName.vb: netDxf.Entities.PolygonMesh.MeshVertexes(Integer, Integer)
  name.vb: MeshVertexes(Integer, Integer)
- uid: netDxf.Entities.PolygonMesh.ToMesh
  commentId: M:netDxf.Entities.PolygonMesh.ToMesh
  id: ToMesh
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: ToMesh()
  nameWithType: PolygonMesh.ToMesh()
  fullName: netDxf.Entities.PolygonMesh.ToMesh()
  type: Method
  source:
    id: ToMesh
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 460
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Converts the actual polygon mesh into a mesh entity approximating the surface faces as necessary.
  example: []
  syntax:
    content: public Mesh ToMesh()
    return:
      type: netDxf.Entities.Mesh
      description: A <xref href="netDxf.Entities.Mesh?text=Mesh+entity" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToMesh() As Mesh
  overload: netDxf.Entities.PolygonMesh.ToMesh*
- uid: netDxf.Entities.PolygonMesh.ToMesh(System.Int32,System.Int32)
  commentId: M:netDxf.Entities.PolygonMesh.ToMesh(System.Int32,System.Int32)
  id: ToMesh(System.Int32,System.Int32)
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: ToMesh(int, int)
  nameWithType: PolygonMesh.ToMesh(int, int)
  fullName: netDxf.Entities.PolygonMesh.ToMesh(int, int)
  type: Method
  source:
    id: ToMesh
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 477
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Converts the actual polygon mesh into a mesh entity approximating the surface faces as necessary.
  remarks: The minimum vertexes generated for smoothed polygon meshes is 3 in each direction.
  example: []
  syntax:
    content: public Mesh ToMesh(int precisionU, int precisionV)
    parameters:
    - id: precisionU
      type: System.Int32
      description: Number of vertexes created along the U direction.
    - id: precisionV
      type: System.Int32
      description: Number of vertexes created along the V direction.
    return:
      type: netDxf.Entities.Mesh
      description: A <xref href="netDxf.Entities.Mesh?text=Mesh+entity" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToMesh(precisionU As Integer, precisionV As Integer) As Mesh
  overload: netDxf.Entities.PolygonMesh.ToMesh*
  nameWithType.vb: PolygonMesh.ToMesh(Integer, Integer)
  fullName.vb: netDxf.Entities.PolygonMesh.ToMesh(Integer, Integer)
  name.vb: ToMesh(Integer, Integer)
- uid: netDxf.Entities.PolygonMesh.Explode
  commentId: M:netDxf.Entities.PolygonMesh.Explode
  id: Explode
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: Explode()
  nameWithType: PolygonMesh.Explode()
  fullName: netDxf.Entities.PolygonMesh.Explode()
  type: Method
  source:
    id: Explode
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 543
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Decompose the actual polygon mesh into <xref href="netDxf.Entities.Face3D?text=faces+3D" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public List<Face3D> Explode()
    return:
      type: System.Collections.Generic.List{netDxf.Entities.Face3D}
      description: A list of <xref href="netDxf.Entities.Face3D?text=faces+3D" data-throw-if-not-resolved="false"></xref> that made up the polygon mesh.
    content.vb: Public Function Explode() As List(Of Face3D)
  overload: netDxf.Entities.PolygonMesh.Explode*
- uid: netDxf.Entities.PolygonMesh.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  commentId: M:netDxf.Entities.PolygonMesh.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  id: TransformBy(netDxf.Matrix3,netDxf.Vector3)
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: TransformBy(Matrix3, Vector3)
  nameWithType: PolygonMesh.TransformBy(Matrix3, Vector3)
  fullName: netDxf.Entities.PolygonMesh.TransformBy(netDxf.Matrix3, netDxf.Vector3)
  type: Method
  source:
    id: TransformBy
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 614
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Moves, scales, and/or rotates the current entity given a 3x3 transformation matrix and a translation vector.
  remarks: Matrix3 adopts the convention of using column vectors to represent a transformation matrix.
  example: []
  syntax:
    content: public override void TransformBy(Matrix3 transformation, Vector3 translation)
    parameters:
    - id: transformation
      type: netDxf.Matrix3
      description: Transformation matrix.
    - id: translation
      type: netDxf.Vector3
      description: Translation vector.
    content.vb: Public Overrides Sub TransformBy(transformation As Matrix3, translation As Vector3)
  overridden: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  overload: netDxf.Entities.PolygonMesh.TransformBy*
- uid: netDxf.Entities.PolygonMesh.Clone
  commentId: M:netDxf.Entities.PolygonMesh.Clone
  id: Clone
  parent: netDxf.Entities.PolygonMesh
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: PolygonMesh.Clone()
  fullName: netDxf.Entities.PolygonMesh.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/PolygonMesh.cs
    startLine: 633
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a new PolygonMesh that is a copy of the current instance.
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: A new PolygonMesh that is a copy of this instance.
    content.vb: Public Overrides Function Clone() As Object
  overridden: netDxf.Entities.EntityObject.Clone
  overload: netDxf.Entities.PolygonMesh.Clone*
references:
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  href: netDxf.Entities.EntityObject.html
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: netDxf.Entities.EntityObject.LayerChanged
  commentId: E:netDxf.Entities.EntityObject.LayerChanged
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LayerChanged
  name: LayerChanged
  nameWithType: EntityObject.LayerChanged
  fullName: netDxf.Entities.EntityObject.LayerChanged
- uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  commentId: M:netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  name: OnLayerChangedEvent(Layer, Layer)
  nameWithType: EntityObject.OnLayerChangedEvent(Layer, Layer)
  fullName: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer, netDxf.Tables.Layer)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
    name: OnLayerChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  - name: (
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
    name: OnLayerChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  - name: (
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: )
- uid: netDxf.Entities.EntityObject.LinetypeChanged
  commentId: E:netDxf.Entities.EntityObject.LinetypeChanged
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LinetypeChanged
  name: LinetypeChanged
  nameWithType: EntityObject.LinetypeChanged
  fullName: netDxf.Entities.EntityObject.LinetypeChanged
- uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  commentId: M:netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  name: OnLinetypeChangedEvent(Linetype, Linetype)
  nameWithType: EntityObject.OnLinetypeChangedEvent(Linetype, Linetype)
  fullName: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype, netDxf.Tables.Linetype)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
    name: OnLinetypeChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  - name: (
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
    name: OnLinetypeChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  - name: (
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: )
- uid: netDxf.Entities.EntityObject.Reactors
  commentId: P:netDxf.Entities.EntityObject.Reactors
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Reactors
  name: Reactors
  nameWithType: EntityObject.Reactors
  fullName: netDxf.Entities.EntityObject.Reactors
- uid: netDxf.Entities.EntityObject.Type
  commentId: P:netDxf.Entities.EntityObject.Type
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Type
  name: Type
  nameWithType: EntityObject.Type
  fullName: netDxf.Entities.EntityObject.Type
- uid: netDxf.Entities.EntityObject.Color
  commentId: P:netDxf.Entities.EntityObject.Color
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Color
  name: Color
  nameWithType: EntityObject.Color
  fullName: netDxf.Entities.EntityObject.Color
- uid: netDxf.Entities.EntityObject.Layer
  commentId: P:netDxf.Entities.EntityObject.Layer
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Layer
  name: Layer
  nameWithType: EntityObject.Layer
  fullName: netDxf.Entities.EntityObject.Layer
- uid: netDxf.Entities.EntityObject.Linetype
  commentId: P:netDxf.Entities.EntityObject.Linetype
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Linetype
  name: Linetype
  nameWithType: EntityObject.Linetype
  fullName: netDxf.Entities.EntityObject.Linetype
- uid: netDxf.Entities.EntityObject.Lineweight
  commentId: P:netDxf.Entities.EntityObject.Lineweight
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Lineweight
  name: Lineweight
  nameWithType: EntityObject.Lineweight
  fullName: netDxf.Entities.EntityObject.Lineweight
- uid: netDxf.Entities.EntityObject.Transparency
  commentId: P:netDxf.Entities.EntityObject.Transparency
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Transparency
  name: Transparency
  nameWithType: EntityObject.Transparency
  fullName: netDxf.Entities.EntityObject.Transparency
- uid: netDxf.Entities.EntityObject.LinetypeScale
  commentId: P:netDxf.Entities.EntityObject.LinetypeScale
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LinetypeScale
  name: LinetypeScale
  nameWithType: EntityObject.LinetypeScale
  fullName: netDxf.Entities.EntityObject.LinetypeScale
- uid: netDxf.Entities.EntityObject.IsVisible
  commentId: P:netDxf.Entities.EntityObject.IsVisible
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_IsVisible
  name: IsVisible
  nameWithType: EntityObject.IsVisible
  fullName: netDxf.Entities.EntityObject.IsVisible
- uid: netDxf.Entities.EntityObject.Normal
  commentId: P:netDxf.Entities.EntityObject.Normal
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Normal
  name: Normal
  nameWithType: EntityObject.Normal
  fullName: netDxf.Entities.EntityObject.Normal
- uid: netDxf.Entities.EntityObject.Owner
  commentId: P:netDxf.Entities.EntityObject.Owner
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Owner
  name: Owner
  nameWithType: EntityObject.Owner
  fullName: netDxf.Entities.EntityObject.Owner
- uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  commentId: M:netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  name: TransformBy(Matrix4)
  nameWithType: EntityObject.TransformBy(Matrix4)
  fullName: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  - name: (
  - uid: netDxf.Matrix4
    name: Matrix4
    href: netDxf.Matrix4.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  - name: (
  - uid: netDxf.Matrix4
    name: Matrix4
    href: netDxf.Matrix4.html
  - name: )
- uid: netDxf.Entities.EntityObject.ToString
  commentId: M:netDxf.Entities.EntityObject.ToString
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  name: ToString()
  nameWithType: EntityObject.ToString()
  fullName: netDxf.Entities.EntityObject.ToString()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.ToString
    name: ToString
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.ToString
    name: ToString
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  - name: (
  - name: )
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataAddAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataAddAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataRemoveAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataRemoveAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.Entities.PolygonMesh.#ctor*
  commentId: Overload:netDxf.Entities.PolygonMesh.#ctor
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh__ctor_System_Int16_System_Int16_System_Collections_Generic_IEnumerable_netDxf_Vector3__
  name: PolygonMesh
  nameWithType: PolygonMesh.PolygonMesh
  fullName: netDxf.Entities.PolygonMesh.PolygonMesh
  nameWithType.vb: PolygonMesh.New
  fullName.vb: netDxf.Entities.PolygonMesh.New
  name.vb: New
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: System.Collections.Generic.IEnumerable{netDxf.Vector3}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3>
  nameWithType: IEnumerable<Vector3>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Vector3>
  nameWithType.vb: IEnumerable(Of Vector3)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Vector3)
  name.vb: IEnumerable(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.Entities.PolygonMesh.Vertexes*
  commentId: Overload:netDxf.Entities.PolygonMesh.Vertexes
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_Vertexes
  name: Vertexes
  nameWithType: PolygonMesh.Vertexes
  fullName: netDxf.Entities.PolygonMesh.Vertexes
- uid: netDxf.Vector3[]
  isExternal: true
  href: netDxf.Vector3.html
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: netDxf.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: netDxf.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: (
  - name: )
- uid: netDxf.Entities.PolygonMesh.SetVertex*
  commentId: Overload:netDxf.Entities.PolygonMesh.SetVertex
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_SetVertex_System_Int32_System_Int32_netDxf_Vector3_
  name: SetVertex
  nameWithType: PolygonMesh.SetVertex
  fullName: netDxf.Entities.PolygonMesh.SetVertex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  href: netDxf.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: netDxf.Entities.PolygonMesh.GetVertex*
  commentId: Overload:netDxf.Entities.PolygonMesh.GetVertex
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_GetVertex_System_Int32_System_Int32_
  name: GetVertex
  nameWithType: PolygonMesh.GetVertex
  fullName: netDxf.Entities.PolygonMesh.GetVertex
- uid: netDxf.Entities.PolygonMesh.U*
  commentId: Overload:netDxf.Entities.PolygonMesh.U
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_U
  name: U
  nameWithType: PolygonMesh.U
  fullName: netDxf.Entities.PolygonMesh.U
- uid: netDxf.Entities.PolygonMesh.V*
  commentId: Overload:netDxf.Entities.PolygonMesh.V
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_V
  name: V
  nameWithType: PolygonMesh.V
  fullName: netDxf.Entities.PolygonMesh.V
- uid: netDxf.Entities.PolygonMesh.DensityU*
  commentId: Overload:netDxf.Entities.PolygonMesh.DensityU
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_DensityU
  name: DensityU
  nameWithType: PolygonMesh.DensityU
  fullName: netDxf.Entities.PolygonMesh.DensityU
- uid: netDxf.Entities.PolygonMesh.DensityV*
  commentId: Overload:netDxf.Entities.PolygonMesh.DensityV
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_DensityV
  name: DensityV
  nameWithType: PolygonMesh.DensityV
  fullName: netDxf.Entities.PolygonMesh.DensityV
- uid: netDxf.Entities.PolygonMesh.IsClosedInU*
  commentId: Overload:netDxf.Entities.PolygonMesh.IsClosedInU
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_IsClosedInU
  name: IsClosedInU
  nameWithType: PolygonMesh.IsClosedInU
  fullName: netDxf.Entities.PolygonMesh.IsClosedInU
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Entities.PolygonMesh.IsClosedInV*
  commentId: Overload:netDxf.Entities.PolygonMesh.IsClosedInV
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_IsClosedInV
  name: IsClosedInV
  nameWithType: PolygonMesh.IsClosedInV
  fullName: netDxf.Entities.PolygonMesh.IsClosedInV
- uid: netDxf.Entities.PolygonMesh.SmoothType*
  commentId: Overload:netDxf.Entities.PolygonMesh.SmoothType
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_SmoothType
  name: SmoothType
  nameWithType: PolygonMesh.SmoothType
  fullName: netDxf.Entities.PolygonMesh.SmoothType
- uid: netDxf.Entities.PolylineSmoothType
  commentId: T:netDxf.Entities.PolylineSmoothType
  parent: netDxf.Entities
  href: netDxf.Entities.PolylineSmoothType.html
  name: PolylineSmoothType
  nameWithType: PolylineSmoothType
  fullName: netDxf.Entities.PolylineSmoothType
- uid: netDxf.Entities.PolygonMesh.DefaultSurfU*
  commentId: Overload:netDxf.Entities.PolygonMesh.DefaultSurfU
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_DefaultSurfU
  name: DefaultSurfU
  nameWithType: PolygonMesh.DefaultSurfU
  fullName: netDxf.Entities.PolygonMesh.DefaultSurfU
- uid: netDxf.Entities.PolygonMesh.DefaultSurfV*
  commentId: Overload:netDxf.Entities.PolygonMesh.DefaultSurfV
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_DefaultSurfV
  name: DefaultSurfV
  nameWithType: PolygonMesh.DefaultSurfV
  fullName: netDxf.Entities.PolygonMesh.DefaultSurfV
- uid: netDxf.Entities.PolygonMesh.MeshVertexes*
  commentId: Overload:netDxf.Entities.PolygonMesh.MeshVertexes
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_MeshVertexes
  name: MeshVertexes
  nameWithType: PolygonMesh.MeshVertexes
  fullName: netDxf.Entities.PolygonMesh.MeshVertexes
- uid: System.Collections.Generic.List{netDxf.Vector3}
  commentId: T:System.Collections.Generic.List{netDxf.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<netDxf.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of netDxf.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Entities.Mesh
  commentId: T:netDxf.Entities.Mesh
  parent: netDxf.Entities
  href: netDxf.Entities.Mesh.html
  name: Mesh
  nameWithType: Mesh
  fullName: netDxf.Entities.Mesh
- uid: netDxf.Entities.PolygonMesh.ToMesh*
  commentId: Overload:netDxf.Entities.PolygonMesh.ToMesh
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_ToMesh
  name: ToMesh
  nameWithType: PolygonMesh.ToMesh
  fullName: netDxf.Entities.PolygonMesh.ToMesh
- uid: netDxf.Entities.Face3D
  commentId: T:netDxf.Entities.Face3D
  href: netDxf.Entities.Face3D.html
  name: Face3D
  nameWithType: Face3D
  fullName: netDxf.Entities.Face3D
- uid: netDxf.Entities.PolygonMesh.Explode*
  commentId: Overload:netDxf.Entities.PolygonMesh.Explode
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_Explode
  name: Explode
  nameWithType: PolygonMesh.Explode
  fullName: netDxf.Entities.PolygonMesh.Explode
- uid: System.Collections.Generic.List{netDxf.Entities.Face3D}
  commentId: T:System.Collections.Generic.List{netDxf.Entities.Face3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Face3D>
  nameWithType: List<Face3D>
  fullName: System.Collections.Generic.List<netDxf.Entities.Face3D>
  nameWithType.vb: List(Of Face3D)
  fullName.vb: System.Collections.Generic.List(Of netDxf.Entities.Face3D)
  name.vb: List(Of Face3D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.Entities.Face3D
    name: Face3D
    href: netDxf.Entities.Face3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Face3D
    name: Face3D
    href: netDxf.Entities.Face3D.html
  - name: )
- uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  commentId: M:netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  name: TransformBy(Matrix3, Vector3)
  nameWithType: EntityObject.TransformBy(Matrix3, Vector3)
  fullName: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3, netDxf.Vector3)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  - name: (
  - uid: netDxf.Matrix3
    name: Matrix3
    href: netDxf.Matrix3.html
  - name: ','
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  - name: (
  - uid: netDxf.Matrix3
    name: Matrix3
    href: netDxf.Matrix3.html
  - name: ','
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: netDxf.Entities.PolygonMesh.TransformBy*
  commentId: Overload:netDxf.Entities.PolygonMesh.TransformBy
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  name: TransformBy
  nameWithType: PolygonMesh.TransformBy
  fullName: netDxf.Entities.PolygonMesh.TransformBy
- uid: netDxf.Matrix3
  commentId: T:netDxf.Matrix3
  parent: netDxf
  href: netDxf.Matrix3.html
  name: Matrix3
  nameWithType: Matrix3
  fullName: netDxf.Matrix3
- uid: netDxf.Entities.EntityObject.Clone
  commentId: M:netDxf.Entities.EntityObject.Clone
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  name: Clone()
  nameWithType: EntityObject.Clone()
  fullName: netDxf.Entities.EntityObject.Clone()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.Clone
    name: Clone
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.Clone
    name: Clone
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  - name: (
  - name: )
- uid: netDxf.Entities.PolygonMesh.Clone*
  commentId: Overload:netDxf.Entities.PolygonMesh.Clone
  href: netDxf.Entities.PolygonMesh.html#netDxf_Entities_PolygonMesh_Clone
  name: Clone
  nameWithType: PolygonMesh.Clone
  fullName: netDxf.Entities.PolygonMesh.Clone
