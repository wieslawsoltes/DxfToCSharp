### YamlMime:ManagedReference
items:
- uid: netDxf.DxfDocument
  commentId: T:netDxf.DxfDocument
  id: DxfDocument
  parent: netDxf
  children:
  - netDxf.DxfDocument.#ctor
  - netDxf.DxfDocument.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - netDxf.DxfDocument.#ctor(netDxf.Header.DxfVersion)
  - netDxf.DxfDocument.#ctor(netDxf.Header.DxfVersion,System.Collections.Generic.IEnumerable{System.String})
  - netDxf.DxfDocument.#ctor(netDxf.Header.HeaderVariables)
  - netDxf.DxfDocument.#ctor(netDxf.Header.HeaderVariables,System.Collections.Generic.IEnumerable{System.String})
  - netDxf.DxfDocument.ApplicationRegistries
  - netDxf.DxfDocument.Blocks
  - netDxf.DxfDocument.BuildDimensionBlocks
  - netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream)
  - netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream,System.Boolean@)
  - netDxf.DxfDocument.CheckDxfFileVersion(System.String)
  - netDxf.DxfDocument.CheckDxfFileVersion(System.String,System.Boolean@)
  - netDxf.DxfDocument.Comments
  - netDxf.DxfDocument.DimensionStyles
  - netDxf.DxfDocument.DrawingVariables
  - netDxf.DxfDocument.Entities
  - netDxf.DxfDocument.GetObjectByHandle(System.String)
  - netDxf.DxfDocument.Groups
  - netDxf.DxfDocument.ImageDefinitions
  - netDxf.DxfDocument.Layers
  - netDxf.DxfDocument.Layouts
  - netDxf.DxfDocument.Linetypes
  - netDxf.DxfDocument.Load(System.IO.Stream)
  - netDxf.DxfDocument.Load(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})
  - netDxf.DxfDocument.Load(System.String)
  - netDxf.DxfDocument.Load(System.String,System.Collections.Generic.IEnumerable{System.String})
  - netDxf.DxfDocument.MlineStyles
  - netDxf.DxfDocument.Name
  - netDxf.DxfDocument.RasterVariables
  - netDxf.DxfDocument.Save(System.IO.Stream)
  - netDxf.DxfDocument.Save(System.IO.Stream,System.Boolean)
  - netDxf.DxfDocument.Save(System.String)
  - netDxf.DxfDocument.Save(System.String,System.Boolean)
  - netDxf.DxfDocument.ShapeStyles
  - netDxf.DxfDocument.SupportFolders
  - netDxf.DxfDocument.TextStyles
  - netDxf.DxfDocument.UCSs
  - netDxf.DxfDocument.UnderlayDgnDefinitions
  - netDxf.DxfDocument.UnderlayDwfDefinitions
  - netDxf.DxfDocument.UnderlayPdfDefinitions
  - netDxf.DxfDocument.VPorts
  - netDxf.DxfDocument.Viewport
  langs:
  - csharp
  - vb
  name: DxfDocument
  nameWithType: DxfDocument
  fullName: netDxf.DxfDocument
  type: Class
  source:
    id: DxfDocument
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 46
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Represents a document to read and write DXF files.
  remarks: >-
    The DxfDocument class derives from DxfObject for convenience of this library not because of the DXF structure.

    It can contain external data (XData) information, but it is not saved in the DXF.
  example: []
  syntax:
    content: 'public sealed class DxfDocument : DxfObject'
    content.vb: Public NotInheritable Class DxfDocument Inherits DxfObject
  inheritance:
  - System.Object
  - netDxf.DxfObject
  inheritedMembers:
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.Owner
  - netDxf.DxfObject.XData
  - netDxf.DxfObject.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
- uid: netDxf.DxfDocument.#ctor
  commentId: M:netDxf.DxfDocument.#ctor
  id: '#ctor'
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: DxfDocument()
  nameWithType: DxfDocument.DxfDocument()
  fullName: netDxf.DxfDocument.DxfDocument()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 102
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>DxfDocument</code> class.
  remarks: The default <xref href="netDxf.Header.HeaderVariables?text=drawing+variables" data-throw-if-not-resolved="false"></xref> of the document will be used.
  example: []
  syntax:
    content: public DxfDocument()
    content.vb: Public Sub New()
  overload: netDxf.DxfDocument.#ctor*
  nameWithType.vb: DxfDocument.New()
  fullName.vb: netDxf.DxfDocument.New()
  name.vb: New()
- uid: netDxf.DxfDocument.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.DxfDocument.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: DxfDocument(IEnumerable<string>)
  nameWithType: DxfDocument.DxfDocument(IEnumerable<string>)
  fullName: netDxf.DxfDocument.DxfDocument(System.Collections.Generic.IEnumerable<string>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 112
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>DxfDocument</code> class.
  remarks: The default <xref href="netDxf.Header.HeaderVariables?text=drawing+variables" data-throw-if-not-resolved="false"></xref> of the document will be used.
  example: []
  syntax:
    content: public DxfDocument(IEnumerable<string> supportFolders)
    parameters:
    - id: supportFolders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of the document support folders.
    content.vb: Public Sub New(supportFolders As IEnumerable(Of String))
  overload: netDxf.DxfDocument.#ctor*
  nameWithType.vb: DxfDocument.New(IEnumerable(Of String))
  fullName.vb: netDxf.DxfDocument.New(System.Collections.Generic.IEnumerable(Of String))
  name.vb: New(IEnumerable(Of String))
- uid: netDxf.DxfDocument.#ctor(netDxf.Header.DxfVersion)
  commentId: M:netDxf.DxfDocument.#ctor(netDxf.Header.DxfVersion)
  id: '#ctor(netDxf.Header.DxfVersion)'
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: DxfDocument(DxfVersion)
  nameWithType: DxfDocument.DxfDocument(DxfVersion)
  fullName: netDxf.DxfDocument.DxfDocument(netDxf.Header.DxfVersion)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 121
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>DxfDocument</code> class.
  example: []
  syntax:
    content: public DxfDocument(DxfVersion version)
    parameters:
    - id: version
      type: netDxf.Header.DxfVersion
      description: AutoCAD drawing database version number.
    content.vb: Public Sub New(version As DxfVersion)
  overload: netDxf.DxfDocument.#ctor*
  nameWithType.vb: DxfDocument.New(DxfVersion)
  fullName.vb: netDxf.DxfDocument.New(netDxf.Header.DxfVersion)
  name.vb: New(DxfVersion)
- uid: netDxf.DxfDocument.#ctor(netDxf.Header.DxfVersion,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.DxfDocument.#ctor(netDxf.Header.DxfVersion,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(netDxf.Header.DxfVersion,System.Collections.Generic.IEnumerable{System.String})'
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: DxfDocument(DxfVersion, IEnumerable<string>)
  nameWithType: DxfDocument.DxfDocument(DxfVersion, IEnumerable<string>)
  fullName: netDxf.DxfDocument.DxfDocument(netDxf.Header.DxfVersion, System.Collections.Generic.IEnumerable<string>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 131
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>DxfDocument</code> class.
  example: []
  syntax:
    content: public DxfDocument(DxfVersion version, IEnumerable<string> supportFolders)
    parameters:
    - id: version
      type: netDxf.Header.DxfVersion
      description: AutoCAD drawing database version number.
    - id: supportFolders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of the document support folders.
    content.vb: Public Sub New(version As DxfVersion, supportFolders As IEnumerable(Of String))
  overload: netDxf.DxfDocument.#ctor*
  nameWithType.vb: DxfDocument.New(DxfVersion, IEnumerable(Of String))
  fullName.vb: netDxf.DxfDocument.New(netDxf.Header.DxfVersion, System.Collections.Generic.IEnumerable(Of String))
  name.vb: New(DxfVersion, IEnumerable(Of String))
- uid: netDxf.DxfDocument.#ctor(netDxf.Header.HeaderVariables)
  commentId: M:netDxf.DxfDocument.#ctor(netDxf.Header.HeaderVariables)
  id: '#ctor(netDxf.Header.HeaderVariables)'
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: DxfDocument(HeaderVariables)
  nameWithType: DxfDocument.DxfDocument(HeaderVariables)
  fullName: netDxf.DxfDocument.DxfDocument(netDxf.Header.HeaderVariables)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 140
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>DxfDocument</code> class.
  example: []
  syntax:
    content: public DxfDocument(HeaderVariables drawingVariables)
    parameters:
    - id: drawingVariables
      type: netDxf.Header.HeaderVariables
      description: <xref href="netDxf.Header.HeaderVariables?text=Drawing+variables" data-throw-if-not-resolved="false"></xref> of the document.
    content.vb: Public Sub New(drawingVariables As HeaderVariables)
  overload: netDxf.DxfDocument.#ctor*
  nameWithType.vb: DxfDocument.New(HeaderVariables)
  fullName.vb: netDxf.DxfDocument.New(netDxf.Header.HeaderVariables)
  name.vb: New(HeaderVariables)
- uid: netDxf.DxfDocument.#ctor(netDxf.Header.HeaderVariables,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.DxfDocument.#ctor(netDxf.Header.HeaderVariables,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(netDxf.Header.HeaderVariables,System.Collections.Generic.IEnumerable{System.String})'
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: DxfDocument(HeaderVariables, IEnumerable<string>)
  nameWithType: DxfDocument.DxfDocument(HeaderVariables, IEnumerable<string>)
  fullName: netDxf.DxfDocument.DxfDocument(netDxf.Header.HeaderVariables, System.Collections.Generic.IEnumerable<string>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 150
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>DxfDocument</code> class.
  example: []
  syntax:
    content: public DxfDocument(HeaderVariables drawingVariables, IEnumerable<string> supportFolders)
    parameters:
    - id: drawingVariables
      type: netDxf.Header.HeaderVariables
      description: <xref href="netDxf.Header.HeaderVariables?text=Drawing+variables" data-throw-if-not-resolved="false"></xref> of the document.
    - id: supportFolders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of the document support folders.
    content.vb: Public Sub New(drawingVariables As HeaderVariables, supportFolders As IEnumerable(Of String))
  overload: netDxf.DxfDocument.#ctor*
  nameWithType.vb: DxfDocument.New(HeaderVariables, IEnumerable(Of String))
  fullName.vb: netDxf.DxfDocument.New(netDxf.Header.HeaderVariables, System.Collections.Generic.IEnumerable(Of String))
  name.vb: New(HeaderVariables, IEnumerable(Of String))
- uid: netDxf.DxfDocument.SupportFolders
  commentId: P:netDxf.DxfDocument.SupportFolders
  id: SupportFolders
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: SupportFolders
  nameWithType: DxfDocument.SupportFolders
  fullName: netDxf.DxfDocument.SupportFolders
  type: Property
  source:
    id: SupportFolders
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 215
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the list of folders where the drawing support files are present.
  remarks: >-
    When shape linetype segments are used, the shape number will be obtained reading the .shp file equivalent to the .shx file,

    that file will be looked for in the same folder as the .shx file or one of the document support folders.
  example: []
  syntax:
    content: public SupportFolders SupportFolders { get; }
    parameters: []
    return:
      type: netDxf.Collections.SupportFolders
    content.vb: Public ReadOnly Property SupportFolders As SupportFolders
  overload: netDxf.DxfDocument.SupportFolders*
- uid: netDxf.DxfDocument.BuildDimensionBlocks
  commentId: P:netDxf.DxfDocument.BuildDimensionBlocks
  id: BuildDimensionBlocks
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: BuildDimensionBlocks
  nameWithType: DxfDocument.BuildDimensionBlocks
  fullName: netDxf.DxfDocument.BuildDimensionBlocks
  type: Property
  source:
    id: BuildDimensionBlocks
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 233
  assemblies:
  - netDxf
  namespace: netDxf
  remarks: >-
    By default this value is set to false, no dimension blocks will be generated when adding dimension entities to the document.

    It will be the responsibility of the program importing the DXF to generate the drawing that represent the dimensions.<br />

    When set to true the block that represents the dimension will be generated,

    keep in mind that this process is limited and not all options available in the dimension style will be reflected in the final result.<br />

    When importing a file if the dimension block is present it will be read, regardless of this value.

    If, later, the dimension is modified all updates will be done with the limited dimension drawing capabilities of the library,

    in this case, if you want that the new modifications to be reflected when the file is saved again you can set the dimension block to null,

    and the program reading the resulting file will regenerate the block with the new modifications.
  example: []
  syntax:
    content: public bool BuildDimensionBlocks { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property BuildDimensionBlocks As Boolean
  overload: netDxf.DxfDocument.BuildDimensionBlocks*
- uid: netDxf.DxfDocument.Viewport
  commentId: P:netDxf.DxfDocument.Viewport
  id: Viewport
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Viewport
  nameWithType: DxfDocument.Viewport
  fullName: netDxf.DxfDocument.Viewport
  type: Property
  source:
    id: Viewport
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 245
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the document viewport.
  remarks: This is the same as the *Active VPort in the VPorts list, it describes the current viewport.
  example: []
  syntax:
    content: public VPort Viewport { get; }
    parameters: []
    return:
      type: netDxf.Tables.VPort
    content.vb: Public ReadOnly Property Viewport As VPort
  overload: netDxf.DxfDocument.Viewport*
- uid: netDxf.DxfDocument.RasterVariables
  commentId: P:netDxf.DxfDocument.RasterVariables
  id: RasterVariables
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: RasterVariables
  nameWithType: DxfDocument.RasterVariables
  fullName: netDxf.DxfDocument.RasterVariables
  type: Property
  source:
    id: RasterVariables
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 253
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets or sets the <xref href="netDxf.DxfDocument.RasterVariables?text=RasterVariables" data-throw-if-not-resolved="false"></xref> applied to image entities.
  example: []
  syntax:
    content: public RasterVariables RasterVariables { get; set; }
    parameters: []
    return:
      type: netDxf.Objects.RasterVariables
    content.vb: Public Property RasterVariables As RasterVariables
  overload: netDxf.DxfDocument.RasterVariables*
- uid: netDxf.DxfDocument.Comments
  commentId: P:netDxf.DxfDocument.Comments
  id: Comments
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Comments
  nameWithType: DxfDocument.Comments
  fullName: netDxf.DxfDocument.Comments
  type: Property
  source:
    id: Comments
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 277
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets or sets the name of the document, once a file is saved or loaded this field is equals the file name without extension.
  example: []
  syntax:
    content: public List<string> Comments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property Comments As List(Of String)
  overload: netDxf.DxfDocument.Comments*
- uid: netDxf.DxfDocument.DrawingVariables
  commentId: P:netDxf.DxfDocument.DrawingVariables
  id: DrawingVariables
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: DrawingVariables
  nameWithType: DxfDocument.DrawingVariables
  fullName: netDxf.DxfDocument.DrawingVariables
  type: Property
  source:
    id: DrawingVariables
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 285
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the DXF <xref href="netDxf.Header.HeaderVariables?text=drawing+variables" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public HeaderVariables DrawingVariables { get; }
    parameters: []
    return:
      type: netDxf.Header.HeaderVariables
    content.vb: Public ReadOnly Property DrawingVariables As HeaderVariables
  overload: netDxf.DxfDocument.DrawingVariables*
- uid: netDxf.DxfDocument.Name
  commentId: P:netDxf.DxfDocument.Name
  id: Name
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DxfDocument.Name
  fullName: netDxf.DxfDocument.Name
  type: Property
  source:
    id: Name
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 296
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets or sets the name of the document.
  remarks: When a file is loaded this field is equals the file name without extension.
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: netDxf.DxfDocument.Name*
- uid: netDxf.DxfDocument.ApplicationRegistries
  commentId: P:netDxf.DxfDocument.ApplicationRegistries
  id: ApplicationRegistries
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: ApplicationRegistries
  nameWithType: DxfDocument.ApplicationRegistries
  fullName: netDxf.DxfDocument.ApplicationRegistries
  type: Property
  source:
    id: ApplicationRegistries
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 309
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.ApplicationRegistries?text=application+registries" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public ApplicationRegistries ApplicationRegistries { get; }
    parameters: []
    return:
      type: netDxf.Collections.ApplicationRegistries
    content.vb: Public Property ApplicationRegistries As ApplicationRegistries
  overload: netDxf.DxfDocument.ApplicationRegistries*
- uid: netDxf.DxfDocument.Layers
  commentId: P:netDxf.DxfDocument.Layers
  id: Layers
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Layers
  nameWithType: DxfDocument.Layers
  fullName: netDxf.DxfDocument.Layers
  type: Property
  source:
    id: Layers
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 318
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.Layers?text=layers" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public Layers Layers { get; }
    parameters: []
    return:
      type: netDxf.Collections.Layers
    content.vb: Public Property Layers As Layers
  overload: netDxf.DxfDocument.Layers*
- uid: netDxf.DxfDocument.Linetypes
  commentId: P:netDxf.DxfDocument.Linetypes
  id: Linetypes
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Linetypes
  nameWithType: DxfDocument.Linetypes
  fullName: netDxf.DxfDocument.Linetypes
  type: Property
  source:
    id: Linetypes
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 327
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.Linetypes?text=line+types" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public Linetypes Linetypes { get; }
    parameters: []
    return:
      type: netDxf.Collections.Linetypes
    content.vb: Public Property Linetypes As Linetypes
  overload: netDxf.DxfDocument.Linetypes*
- uid: netDxf.DxfDocument.TextStyles
  commentId: P:netDxf.DxfDocument.TextStyles
  id: TextStyles
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: TextStyles
  nameWithType: DxfDocument.TextStyles
  fullName: netDxf.DxfDocument.TextStyles
  type: Property
  source:
    id: TextStyles
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 336
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.TextStyles?text=text+styles" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public TextStyles TextStyles { get; }
    parameters: []
    return:
      type: netDxf.Collections.TextStyles
    content.vb: Public Property TextStyles As TextStyles
  overload: netDxf.DxfDocument.TextStyles*
- uid: netDxf.DxfDocument.ShapeStyles
  commentId: P:netDxf.DxfDocument.ShapeStyles
  id: ShapeStyles
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: ShapeStyles
  nameWithType: DxfDocument.ShapeStyles
  fullName: netDxf.DxfDocument.ShapeStyles
  type: Property
  source:
    id: ShapeStyles
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 349
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.ShapeStyles?text=shape+styles" data-throw-if-not-resolved="false"></xref> collection.
  remarks: >-
    The DXF stores the TextStyles and ShapeStyles in the same table list, here, they are separated since they serve a different role.

    Under normal circumstances you should not need to access this list.
  example: []
  syntax:
    content: public ShapeStyles ShapeStyles { get; }
    parameters: []
    return:
      type: netDxf.Collections.ShapeStyles
    content.vb: Public Property ShapeStyles As ShapeStyles
  overload: netDxf.DxfDocument.ShapeStyles*
- uid: netDxf.DxfDocument.DimensionStyles
  commentId: P:netDxf.DxfDocument.DimensionStyles
  id: DimensionStyles
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: DimensionStyles
  nameWithType: DxfDocument.DimensionStyles
  fullName: netDxf.DxfDocument.DimensionStyles
  type: Property
  source:
    id: DimensionStyles
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 358
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.DimensionStyles?text=dimension+styles" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public DimensionStyles DimensionStyles { get; }
    parameters: []
    return:
      type: netDxf.Collections.DimensionStyles
    content.vb: Public Property DimensionStyles As DimensionStyles
  overload: netDxf.DxfDocument.DimensionStyles*
- uid: netDxf.DxfDocument.MlineStyles
  commentId: P:netDxf.DxfDocument.MlineStyles
  id: MlineStyles
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: MlineStyles
  nameWithType: DxfDocument.MlineStyles
  fullName: netDxf.DxfDocument.MlineStyles
  type: Property
  source:
    id: MlineStyles
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 367
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.Collections.MLineStyles?text=MLine+styles" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public MLineStyles MlineStyles { get; }
    parameters: []
    return:
      type: netDxf.Collections.MLineStyles
    content.vb: Public Property MlineStyles As MLineStyles
  overload: netDxf.DxfDocument.MlineStyles*
- uid: netDxf.DxfDocument.UCSs
  commentId: P:netDxf.DxfDocument.UCSs
  id: UCSs
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: UCSs
  nameWithType: DxfDocument.UCSs
  fullName: netDxf.DxfDocument.UCSs
  type: Property
  source:
    id: UCSs
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 376
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.UCSs?text=User+coordinate+systems" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public UCSs UCSs { get; }
    parameters: []
    return:
      type: netDxf.Collections.UCSs
    content.vb: Public Property UCSs As UCSs
  overload: netDxf.DxfDocument.UCSs*
- uid: netDxf.DxfDocument.Blocks
  commentId: P:netDxf.DxfDocument.Blocks
  id: Blocks
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Blocks
  nameWithType: DxfDocument.Blocks
  fullName: netDxf.DxfDocument.Blocks
  type: Property
  source:
    id: Blocks
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 385
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.Collections.BlockRecords?text=block" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public BlockRecords Blocks { get; }
    parameters: []
    return:
      type: netDxf.Collections.BlockRecords
    content.vb: Public Property Blocks As BlockRecords
  overload: netDxf.DxfDocument.Blocks*
- uid: netDxf.DxfDocument.ImageDefinitions
  commentId: P:netDxf.DxfDocument.ImageDefinitions
  id: ImageDefinitions
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: ImageDefinitions
  nameWithType: DxfDocument.ImageDefinitions
  fullName: netDxf.DxfDocument.ImageDefinitions
  type: Property
  source:
    id: ImageDefinitions
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 394
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.ImageDefinitions?text=image+definitions" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public ImageDefinitions ImageDefinitions { get; }
    parameters: []
    return:
      type: netDxf.Collections.ImageDefinitions
    content.vb: Public Property ImageDefinitions As ImageDefinitions
  overload: netDxf.DxfDocument.ImageDefinitions*
- uid: netDxf.DxfDocument.UnderlayDgnDefinitions
  commentId: P:netDxf.DxfDocument.UnderlayDgnDefinitions
  id: UnderlayDgnDefinitions
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: UnderlayDgnDefinitions
  nameWithType: DxfDocument.UnderlayDgnDefinitions
  fullName: netDxf.DxfDocument.UnderlayDgnDefinitions
  type: Property
  source:
    id: UnderlayDgnDefinitions
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 403
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.UnderlayDgnDefinitions?text=dgn+underlay+definitions" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public UnderlayDgnDefinitions UnderlayDgnDefinitions { get; }
    parameters: []
    return:
      type: netDxf.Collections.UnderlayDgnDefinitions
    content.vb: Public Property UnderlayDgnDefinitions As UnderlayDgnDefinitions
  overload: netDxf.DxfDocument.UnderlayDgnDefinitions*
- uid: netDxf.DxfDocument.UnderlayDwfDefinitions
  commentId: P:netDxf.DxfDocument.UnderlayDwfDefinitions
  id: UnderlayDwfDefinitions
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: UnderlayDwfDefinitions
  nameWithType: DxfDocument.UnderlayDwfDefinitions
  fullName: netDxf.DxfDocument.UnderlayDwfDefinitions
  type: Property
  source:
    id: UnderlayDwfDefinitions
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 412
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.UnderlayDwfDefinitions?text=dwf+underlay+definitions" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public UnderlayDwfDefinitions UnderlayDwfDefinitions { get; }
    parameters: []
    return:
      type: netDxf.Collections.UnderlayDwfDefinitions
    content.vb: Public Property UnderlayDwfDefinitions As UnderlayDwfDefinitions
  overload: netDxf.DxfDocument.UnderlayDwfDefinitions*
- uid: netDxf.DxfDocument.UnderlayPdfDefinitions
  commentId: P:netDxf.DxfDocument.UnderlayPdfDefinitions
  id: UnderlayPdfDefinitions
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: UnderlayPdfDefinitions
  nameWithType: DxfDocument.UnderlayPdfDefinitions
  fullName: netDxf.DxfDocument.UnderlayPdfDefinitions
  type: Property
  source:
    id: UnderlayPdfDefinitions
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 421
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.UnderlayPdfDefinitions?text=pdf+underlay+definitions" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public UnderlayPdfDefinitions UnderlayPdfDefinitions { get; }
    parameters: []
    return:
      type: netDxf.Collections.UnderlayPdfDefinitions
    content.vb: Public Property UnderlayPdfDefinitions As UnderlayPdfDefinitions
  overload: netDxf.DxfDocument.UnderlayPdfDefinitions*
- uid: netDxf.DxfDocument.Groups
  commentId: P:netDxf.DxfDocument.Groups
  id: Groups
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: DxfDocument.Groups
  fullName: netDxf.DxfDocument.Groups
  type: Property
  source:
    id: Groups
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 430
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.Groups?text=groups" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public Groups Groups { get; }
    parameters: []
    return:
      type: netDxf.Collections.Groups
    content.vb: Public Property Groups As Groups
  overload: netDxf.DxfDocument.Groups*
- uid: netDxf.DxfDocument.Layouts
  commentId: P:netDxf.DxfDocument.Layouts
  id: Layouts
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Layouts
  nameWithType: DxfDocument.Layouts
  fullName: netDxf.DxfDocument.Layouts
  type: Property
  source:
    id: Layouts
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 439
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.Layouts?text=layouts" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public Layouts Layouts { get; }
    parameters: []
    return:
      type: netDxf.Collections.Layouts
    content.vb: Public Property Layouts As Layouts
  overload: netDxf.DxfDocument.Layouts*
- uid: netDxf.DxfDocument.VPorts
  commentId: P:netDxf.DxfDocument.VPorts
  id: VPorts
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: VPorts
  nameWithType: DxfDocument.VPorts
  fullName: netDxf.DxfDocument.VPorts
  type: Property
  source:
    id: VPorts
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 448
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.DxfDocument.VPorts?text=viewports" data-throw-if-not-resolved="false"></xref> collection.
  example: []
  syntax:
    content: public VPorts VPorts { get; }
    parameters: []
    return:
      type: netDxf.Collections.VPorts
    content.vb: Public Property VPorts As VPorts
  overload: netDxf.DxfDocument.VPorts*
- uid: netDxf.DxfDocument.Entities
  commentId: P:netDxf.DxfDocument.Entities
  id: Entities
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Entities
  nameWithType: DxfDocument.Entities
  fullName: netDxf.DxfDocument.Entities
  type: Property
  source:
    id: Entities
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 466
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.Collections.DrawingEntities?text=entities" data-throw-if-not-resolved="false"></xref> shortcuts.
  example: []
  syntax:
    content: public DrawingEntities Entities { get; }
    parameters: []
    return:
      type: netDxf.Collections.DrawingEntities
    content.vb: Public ReadOnly Property Entities As DrawingEntities
  overload: netDxf.DxfDocument.Entities*
- uid: netDxf.DxfDocument.Load(System.String)
  commentId: M:netDxf.DxfDocument.Load(System.String)
  id: Load(System.String)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Load(string)
  nameWithType: DxfDocument.Load(string)
  fullName: netDxf.DxfDocument.Load(string)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 488
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Loads a DXF file.
  remarks: >-
    Loading DXF files prior to AutoCad 2000 is not supported.<br />

    The Load method will still raise an exception if they are unable to create the FileStream.<br />

    On Debug mode it will raise any exception that might occur during the whole process.
  example: []
  syntax:
    content: public static DxfDocument Load(string file)
    parameters:
    - id: file
      type: System.String
      description: File name.
    return:
      type: netDxf.DxfDocument
      description: Returns a DxfDocument. It will return null if the file has not been able to load.
    content.vb: Public Shared Function Load(file As String) As DxfDocument
  overload: netDxf.DxfDocument.Load*
  exceptions:
  - type: netDxf.IO.DxfVersionNotSupportedException
    commentId: T:netDxf.IO.DxfVersionNotSupportedException
    description: ''
  nameWithType.vb: DxfDocument.Load(String)
  fullName.vb: netDxf.DxfDocument.Load(String)
  name.vb: Load(String)
- uid: netDxf.DxfDocument.Load(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.DxfDocument.Load(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Load(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Load(string, IEnumerable<string>)
  nameWithType: DxfDocument.Load(string, IEnumerable<string>)
  fullName: netDxf.DxfDocument.Load(string, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 505
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Loads a DXF file.
  remarks: >-
    Loading DXF files prior to AutoCad 2000 is not supported.<br />

    The Load method will still raise an exception if they are unable to create the FileStream.<br />

    On Debug mode it will raise any exception that might occur during the whole process.
  example: []
  syntax:
    content: public static DxfDocument Load(string file, IEnumerable<string> supportFolders)
    parameters:
    - id: file
      type: System.String
      description: File name.
    - id: supportFolders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of the document support folders.
    return:
      type: netDxf.DxfDocument
      description: Returns a DxfDocument. It will return null if the file has not been able to load.
    content.vb: Public Shared Function Load(file As String, supportFolders As IEnumerable(Of String)) As DxfDocument
  overload: netDxf.DxfDocument.Load*
  exceptions:
  - type: netDxf.IO.DxfVersionNotSupportedException
    commentId: T:netDxf.IO.DxfVersionNotSupportedException
    description: ''
  nameWithType.vb: DxfDocument.Load(String, IEnumerable(Of String))
  fullName.vb: netDxf.DxfDocument.Load(String, System.Collections.Generic.IEnumerable(Of String))
  name.vb: Load(String, IEnumerable(Of String))
- uid: netDxf.DxfDocument.Load(System.IO.Stream)
  commentId: M:netDxf.DxfDocument.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Load(Stream)
  nameWithType: DxfDocument.Load(Stream)
  fullName: netDxf.DxfDocument.Load(System.IO.Stream)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 552
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Loads a DXF file.
  remarks: >-
    Loading DXF files prior to AutoCad 2000 is not supported.<br />

    On Debug mode it will raise any exception that might occur during the whole process.<br />

    The caller will be responsible of closing the stream.
  example: []
  syntax:
    content: public static DxfDocument Load(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream.
    return:
      type: netDxf.DxfDocument
      description: Returns a DxfDocument. It will return null if the file has not been able to load.
    content.vb: Public Shared Function Load(stream As Stream) As DxfDocument
  overload: netDxf.DxfDocument.Load*
  exceptions:
  - type: netDxf.IO.DxfVersionNotSupportedException
    commentId: T:netDxf.IO.DxfVersionNotSupportedException
    description: ''
- uid: netDxf.DxfDocument.Load(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.DxfDocument.Load(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})
  id: Load(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Load(Stream, IEnumerable<string>)
  nameWithType: DxfDocument.Load(Stream, IEnumerable<string>)
  fullName: netDxf.DxfDocument.Load(System.IO.Stream, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 569
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Loads a DXF file.
  remarks: >-
    Loading DXF files prior to AutoCad 2000 is not supported.<br />

    On Debug mode it will raise any exception that might occur during the whole process.<br />

    The caller will be responsible of closing the stream.
  example: []
  syntax:
    content: public static DxfDocument Load(Stream stream, IEnumerable<string> supportFolders)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream.
    - id: supportFolders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of the document support folders.
    return:
      type: netDxf.DxfDocument
      description: Returns a DxfDocument. It will return null if the file has not been able to load.
    content.vb: Public Shared Function Load(stream As Stream, supportFolders As IEnumerable(Of String)) As DxfDocument
  overload: netDxf.DxfDocument.Load*
  exceptions:
  - type: netDxf.IO.DxfVersionNotSupportedException
    commentId: T:netDxf.IO.DxfVersionNotSupportedException
    description: ''
  nameWithType.vb: DxfDocument.Load(Stream, IEnumerable(Of String))
  fullName.vb: netDxf.DxfDocument.Load(System.IO.Stream, System.Collections.Generic.IEnumerable(Of String))
  name.vb: Load(Stream, IEnumerable(Of String))
- uid: netDxf.DxfDocument.Save(System.String)
  commentId: M:netDxf.DxfDocument.Save(System.String)
  id: Save(System.String)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Save(string)
  nameWithType: DxfDocument.Save(string)
  fullName: netDxf.DxfDocument.Save(string)
  type: Method
  source:
    id: Save
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 605
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Saves the database of the actual DxfDocument to a text DXF file.
  remarks: >-
    If the file already exists it will be overwritten.<br />

    The Save method will still raise an exception if they are unable to create the FileStream.<br />

    On Debug mode they will raise any exception that might occur during the whole process.
  example: []
  syntax:
    content: public bool Save(string file)
    parameters:
    - id: file
      type: System.String
      description: File name.
    return:
      type: System.Boolean
      description: Return true if the file has been successfully save, false otherwise.
    content.vb: Public Function Save(file As String) As Boolean
  overload: netDxf.DxfDocument.Save*
  exceptions:
  - type: netDxf.IO.DxfVersionNotSupportedException
    commentId: T:netDxf.IO.DxfVersionNotSupportedException
    description: ''
  nameWithType.vb: DxfDocument.Save(String)
  fullName.vb: netDxf.DxfDocument.Save(String)
  name.vb: Save(String)
- uid: netDxf.DxfDocument.Save(System.String,System.Boolean)
  commentId: M:netDxf.DxfDocument.Save(System.String,System.Boolean)
  id: Save(System.String,System.Boolean)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Save(string, bool)
  nameWithType: DxfDocument.Save(string, bool)
  fullName: netDxf.DxfDocument.Save(string, bool)
  type: Method
  source:
    id: Save
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 622
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Saves the database of the actual DxfDocument to a DXF file.
  remarks: >-
    If the file already exists it will be overwritten.<br />

    The Save method will still raise an exception if they are unable to create the FileStream.<br />

    On Debug mode they will raise any exception that might occur during the whole process.
  example: []
  syntax:
    content: public bool Save(string file, bool isBinary)
    parameters:
    - id: file
      type: System.String
      description: File name.
    - id: isBinary
      type: System.Boolean
      description: Defines if the file will be saved as binary.
    return:
      type: System.Boolean
      description: Returns true if the file has been successfully saved, false otherwise.
    content.vb: Public Function Save(file As String, isBinary As Boolean) As Boolean
  overload: netDxf.DxfDocument.Save*
  exceptions:
  - type: netDxf.IO.DxfVersionNotSupportedException
    commentId: T:netDxf.IO.DxfVersionNotSupportedException
    description: ''
  nameWithType.vb: DxfDocument.Save(String, Boolean)
  fullName.vb: netDxf.DxfDocument.Save(String, Boolean)
  name.vb: Save(String, Boolean)
- uid: netDxf.DxfDocument.Save(System.IO.Stream)
  commentId: M:netDxf.DxfDocument.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: DxfDocument.Save(Stream)
  fullName: netDxf.DxfDocument.Save(System.IO.Stream)
  type: Method
  source:
    id: Save
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 673
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Saves the database of the actual DxfDocument to a text stream.
  remarks: >-
    On Debug mode it will raise any exception that might occur during the whole process.<br />

    The caller will be responsible of closing the stream.
  example: []
  syntax:
    content: public bool Save(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream.
    return:
      type: System.Boolean
      description: Return true if the stream has been successfully saved, false otherwise.
    content.vb: Public Function Save(stream As Stream) As Boolean
  overload: netDxf.DxfDocument.Save*
  exceptions:
  - type: netDxf.IO.DxfVersionNotSupportedException
    commentId: T:netDxf.IO.DxfVersionNotSupportedException
    description: ''
- uid: netDxf.DxfDocument.Save(System.IO.Stream,System.Boolean)
  commentId: M:netDxf.DxfDocument.Save(System.IO.Stream,System.Boolean)
  id: Save(System.IO.Stream,System.Boolean)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: Save(Stream, bool)
  nameWithType: DxfDocument.Save(Stream, bool)
  fullName: netDxf.DxfDocument.Save(System.IO.Stream, bool)
  type: Method
  source:
    id: Save
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 689
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Saves the database of the actual DxfDocument to a stream.
  remarks: >-
    On Debug mode it will raise any exception that might occur during the whole process.<br />

    The caller will be responsible of closing the stream.
  example: []
  syntax:
    content: public bool Save(Stream stream, bool isBinary)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream.
    - id: isBinary
      type: System.Boolean
      description: Defines if the file will be saved as binary.
    return:
      type: System.Boolean
      description: Return true if the stream has been successfully saved, false otherwise.
    content.vb: Public Function Save(stream As Stream, isBinary As Boolean) As Boolean
  overload: netDxf.DxfDocument.Save*
  exceptions:
  - type: netDxf.IO.DxfVersionNotSupportedException
    commentId: T:netDxf.IO.DxfVersionNotSupportedException
    description: ''
  nameWithType.vb: DxfDocument.Save(Stream, Boolean)
  fullName.vb: netDxf.DxfDocument.Save(System.IO.Stream, Boolean)
  name.vb: Save(Stream, Boolean)
- uid: netDxf.DxfDocument.CheckDxfFileVersion(System.String)
  commentId: M:netDxf.DxfDocument.CheckDxfFileVersion(System.String)
  id: CheckDxfFileVersion(System.String)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: CheckDxfFileVersion(string)
  nameWithType: DxfDocument.CheckDxfFileVersion(string)
  fullName: netDxf.DxfDocument.CheckDxfFileVersion(string)
  type: Method
  source:
    id: CheckDxfFileVersion
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 718
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Checks the AutoCAD DXF file database version.
  example: []
  syntax:
    content: public static DxfVersion CheckDxfFileVersion(string file)
    parameters:
    - id: file
      type: System.String
      description: File name.
    return:
      type: netDxf.Header.DxfVersion
      description: String that represents the DXF file version.
    content.vb: Public Shared Function CheckDxfFileVersion(file As String) As DxfVersion
  overload: netDxf.DxfDocument.CheckDxfFileVersion*
  nameWithType.vb: DxfDocument.CheckDxfFileVersion(String)
  fullName.vb: netDxf.DxfDocument.CheckDxfFileVersion(String)
  name.vb: CheckDxfFileVersion(String)
- uid: netDxf.DxfDocument.CheckDxfFileVersion(System.String,System.Boolean@)
  commentId: M:netDxf.DxfDocument.CheckDxfFileVersion(System.String,System.Boolean@)
  id: CheckDxfFileVersion(System.String,System.Boolean@)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: CheckDxfFileVersion(string, out bool)
  nameWithType: DxfDocument.CheckDxfFileVersion(string, out bool)
  fullName: netDxf.DxfDocument.CheckDxfFileVersion(string, out bool)
  type: Method
  source:
    id: CheckDxfFileVersion
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 729
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Checks the AutoCAD DXF file database version.
  example: []
  syntax:
    content: public static DxfVersion CheckDxfFileVersion(string file, out bool isBinary)
    parameters:
    - id: file
      type: System.String
      description: File name.
    - id: isBinary
      type: System.Boolean
      description: Returns true if the DXF is a binary file.
    return:
      type: netDxf.Header.DxfVersion
      description: String that represents the DXF file version.
    content.vb: Public Shared Function CheckDxfFileVersion(file As String, isBinary As Boolean) As DxfVersion
  overload: netDxf.DxfDocument.CheckDxfFileVersion*
  nameWithType.vb: DxfDocument.CheckDxfFileVersion(String, Boolean)
  fullName.vb: netDxf.DxfDocument.CheckDxfFileVersion(String, Boolean)
  name.vb: CheckDxfFileVersion(String, Boolean)
- uid: netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream)
  commentId: M:netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream)
  id: CheckDxfFileVersion(System.IO.Stream)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: CheckDxfFileVersion(Stream)
  nameWithType: DxfDocument.CheckDxfFileVersion(Stream)
  fullName: netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream)
  type: Method
  source:
    id: CheckDxfFileVersion
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 743
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Checks the AutoCAD DXF file database version.
  remarks: The caller will be responsible of closing the stream.
  example: []
  syntax:
    content: public static DxfVersion CheckDxfFileVersion(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream
    return:
      type: netDxf.Header.DxfVersion
      description: String that represents the DXF file version.
    content.vb: Public Shared Function CheckDxfFileVersion(stream As Stream) As DxfVersion
  overload: netDxf.DxfDocument.CheckDxfFileVersion*
- uid: netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream,System.Boolean@)
  commentId: M:netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream,System.Boolean@)
  id: CheckDxfFileVersion(System.IO.Stream,System.Boolean@)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: CheckDxfFileVersion(Stream, out bool)
  nameWithType: DxfDocument.CheckDxfFileVersion(Stream, out bool)
  fullName: netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream, out bool)
  type: Method
  source:
    id: CheckDxfFileVersion
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 755
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Checks the AutoCAD DXF file database version.
  remarks: The caller will be responsible of closing the stream.
  example: []
  syntax:
    content: public static DxfVersion CheckDxfFileVersion(Stream stream, out bool isBinary)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream
    - id: isBinary
      type: System.Boolean
      description: Returns true if the DXF is a binary file.
    return:
      type: netDxf.Header.DxfVersion
      description: String that represents the DXF file version.
    content.vb: Public Shared Function CheckDxfFileVersion(stream As Stream, isBinary As Boolean) As DxfVersion
  overload: netDxf.DxfDocument.CheckDxfFileVersion*
  nameWithType.vb: DxfDocument.CheckDxfFileVersion(Stream, Boolean)
  fullName.vb: netDxf.DxfDocument.CheckDxfFileVersion(System.IO.Stream, Boolean)
  name.vb: CheckDxfFileVersion(Stream, Boolean)
- uid: netDxf.DxfDocument.GetObjectByHandle(System.String)
  commentId: M:netDxf.DxfDocument.GetObjectByHandle(System.String)
  id: GetObjectByHandle(System.String)
  parent: netDxf.DxfDocument
  langs:
  - csharp
  - vb
  name: GetObjectByHandle(string)
  nameWithType: DxfDocument.GetObjectByHandle(string)
  fullName: netDxf.DxfDocument.GetObjectByHandle(string)
  type: Method
  source:
    id: GetObjectByHandle
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/DxfDocument.cs
    startLine: 777
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets a DXF object by its handle.
  example: []
  syntax:
    content: public DxfObject GetObjectByHandle(string objectHandle)
    parameters:
    - id: objectHandle
      type: System.String
      description: DxfObject handle.
    return:
      type: netDxf.DxfObject
      description: The DxfObject that has the provided handle, null otherwise.
    content.vb: Public Function GetObjectByHandle(objectHandle As String) As DxfObject
  overload: netDxf.DxfDocument.GetObjectByHandle*
  nameWithType.vb: DxfDocument.GetObjectByHandle(String)
  fullName.vb: netDxf.DxfDocument.GetObjectByHandle(String)
  name.vb: GetObjectByHandle(String)
references:
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.Owner
  commentId: P:netDxf.DxfObject.Owner
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Owner
  name: Owner
  nameWithType: DxfObject.Owner
  fullName: netDxf.DxfObject.Owner
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: netDxf.DxfObject.ToString
  commentId: M:netDxf.DxfObject.ToString
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  name: ToString()
  nameWithType: DxfObject.ToString()
  fullName: netDxf.DxfObject.ToString()
  spec.csharp:
  - uid: netDxf.DxfObject.ToString
    name: ToString
    href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.ToString
    name: ToString
    href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.Header.HeaderVariables
  commentId: T:netDxf.Header.HeaderVariables
  parent: netDxf.Header
  href: netDxf.Header.HeaderVariables.html
  name: HeaderVariables
  nameWithType: HeaderVariables
  fullName: netDxf.Header.HeaderVariables
- uid: netDxf.DxfDocument.#ctor*
  commentId: Overload:netDxf.DxfDocument.#ctor
  href: netDxf.DxfDocument.html#netDxf_DxfDocument__ctor
  name: DxfDocument
  nameWithType: DxfDocument.DxfDocument
  fullName: netDxf.DxfDocument.DxfDocument
  nameWithType.vb: DxfDocument.New
  fullName.vb: netDxf.DxfDocument.New
  name.vb: New
- uid: netDxf.Header
  commentId: N:netDxf.Header
  href: netDxf.html
  name: netDxf.Header
  nameWithType: netDxf.Header
  fullName: netDxf.Header
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Header
    name: Header
    href: netDxf.Header.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Header
    name: Header
    href: netDxf.Header.html
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.Header.DxfVersion
  commentId: T:netDxf.Header.DxfVersion
  parent: netDxf.Header
  href: netDxf.Header.DxfVersion.html
  name: DxfVersion
  nameWithType: DxfVersion
  fullName: netDxf.Header.DxfVersion
- uid: netDxf.DxfDocument.SupportFolders*
  commentId: Overload:netDxf.DxfDocument.SupportFolders
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_SupportFolders
  name: SupportFolders
  nameWithType: DxfDocument.SupportFolders
  fullName: netDxf.DxfDocument.SupportFolders
- uid: netDxf.Collections.SupportFolders
  commentId: T:netDxf.Collections.SupportFolders
  parent: netDxf.Collections
  href: netDxf.Collections.SupportFolders.html
  name: SupportFolders
  nameWithType: SupportFolders
  fullName: netDxf.Collections.SupportFolders
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: netDxf.DxfDocument.BuildDimensionBlocks*
  commentId: Overload:netDxf.DxfDocument.BuildDimensionBlocks
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_BuildDimensionBlocks
  name: BuildDimensionBlocks
  nameWithType: DxfDocument.BuildDimensionBlocks
  fullName: netDxf.DxfDocument.BuildDimensionBlocks
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.DxfDocument.Viewport*
  commentId: Overload:netDxf.DxfDocument.Viewport
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Viewport
  name: Viewport
  nameWithType: DxfDocument.Viewport
  fullName: netDxf.DxfDocument.Viewport
- uid: netDxf.Tables.VPort
  commentId: T:netDxf.Tables.VPort
  parent: netDxf.Tables
  href: netDxf.Tables.VPort.html
  name: VPort
  nameWithType: VPort
  fullName: netDxf.Tables.VPort
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  href: netDxf.html
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
- uid: netDxf.DxfDocument.RasterVariables
  commentId: P:netDxf.DxfDocument.RasterVariables
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_RasterVariables
  name: RasterVariables
  nameWithType: DxfDocument.RasterVariables
  fullName: netDxf.DxfDocument.RasterVariables
- uid: netDxf.DxfDocument.RasterVariables*
  commentId: Overload:netDxf.DxfDocument.RasterVariables
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_RasterVariables
  name: RasterVariables
  nameWithType: DxfDocument.RasterVariables
  fullName: netDxf.DxfDocument.RasterVariables
- uid: netDxf.Objects.RasterVariables
  commentId: T:netDxf.Objects.RasterVariables
  parent: netDxf.Objects
  href: netDxf.Objects.RasterVariables.html
  name: RasterVariables
  nameWithType: RasterVariables
  fullName: netDxf.Objects.RasterVariables
- uid: netDxf.Objects
  commentId: N:netDxf.Objects
  href: netDxf.html
  name: netDxf.Objects
  nameWithType: netDxf.Objects
  fullName: netDxf.Objects
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Objects
    name: Objects
    href: netDxf.Objects.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Objects
    name: Objects
    href: netDxf.Objects.html
- uid: netDxf.DxfDocument.Comments*
  commentId: Overload:netDxf.DxfDocument.Comments
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Comments
  name: Comments
  nameWithType: DxfDocument.Comments
  fullName: netDxf.DxfDocument.Comments
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.DxfDocument.DrawingVariables*
  commentId: Overload:netDxf.DxfDocument.DrawingVariables
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_DrawingVariables
  name: DrawingVariables
  nameWithType: DxfDocument.DrawingVariables
  fullName: netDxf.DxfDocument.DrawingVariables
- uid: netDxf.DxfDocument.Name*
  commentId: Overload:netDxf.DxfDocument.Name
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Name
  name: Name
  nameWithType: DxfDocument.Name
  fullName: netDxf.DxfDocument.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.DxfDocument.ApplicationRegistries
  commentId: P:netDxf.DxfDocument.ApplicationRegistries
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_ApplicationRegistries
  name: ApplicationRegistries
  nameWithType: DxfDocument.ApplicationRegistries
  fullName: netDxf.DxfDocument.ApplicationRegistries
- uid: netDxf.DxfDocument.ApplicationRegistries*
  commentId: Overload:netDxf.DxfDocument.ApplicationRegistries
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_ApplicationRegistries
  name: ApplicationRegistries
  nameWithType: DxfDocument.ApplicationRegistries
  fullName: netDxf.DxfDocument.ApplicationRegistries
- uid: netDxf.Collections.ApplicationRegistries
  commentId: T:netDxf.Collections.ApplicationRegistries
  parent: netDxf.Collections
  href: netDxf.Collections.ApplicationRegistries.html
  name: ApplicationRegistries
  nameWithType: ApplicationRegistries
  fullName: netDxf.Collections.ApplicationRegistries
- uid: netDxf.DxfDocument.Layers
  commentId: P:netDxf.DxfDocument.Layers
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Layers
  name: Layers
  nameWithType: DxfDocument.Layers
  fullName: netDxf.DxfDocument.Layers
- uid: netDxf.DxfDocument.Layers*
  commentId: Overload:netDxf.DxfDocument.Layers
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Layers
  name: Layers
  nameWithType: DxfDocument.Layers
  fullName: netDxf.DxfDocument.Layers
- uid: netDxf.Collections.Layers
  commentId: T:netDxf.Collections.Layers
  parent: netDxf.Collections
  href: netDxf.Collections.Layers.html
  name: Layers
  nameWithType: Layers
  fullName: netDxf.Collections.Layers
- uid: netDxf.DxfDocument.Linetypes
  commentId: P:netDxf.DxfDocument.Linetypes
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Linetypes
  name: Linetypes
  nameWithType: DxfDocument.Linetypes
  fullName: netDxf.DxfDocument.Linetypes
- uid: netDxf.DxfDocument.Linetypes*
  commentId: Overload:netDxf.DxfDocument.Linetypes
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Linetypes
  name: Linetypes
  nameWithType: DxfDocument.Linetypes
  fullName: netDxf.DxfDocument.Linetypes
- uid: netDxf.Collections.Linetypes
  commentId: T:netDxf.Collections.Linetypes
  parent: netDxf.Collections
  href: netDxf.Collections.Linetypes.html
  name: Linetypes
  nameWithType: Linetypes
  fullName: netDxf.Collections.Linetypes
- uid: netDxf.DxfDocument.TextStyles
  commentId: P:netDxf.DxfDocument.TextStyles
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_TextStyles
  name: TextStyles
  nameWithType: DxfDocument.TextStyles
  fullName: netDxf.DxfDocument.TextStyles
- uid: netDxf.DxfDocument.TextStyles*
  commentId: Overload:netDxf.DxfDocument.TextStyles
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_TextStyles
  name: TextStyles
  nameWithType: DxfDocument.TextStyles
  fullName: netDxf.DxfDocument.TextStyles
- uid: netDxf.Collections.TextStyles
  commentId: T:netDxf.Collections.TextStyles
  parent: netDxf.Collections
  href: netDxf.Collections.TextStyles.html
  name: TextStyles
  nameWithType: TextStyles
  fullName: netDxf.Collections.TextStyles
- uid: netDxf.DxfDocument.ShapeStyles
  commentId: P:netDxf.DxfDocument.ShapeStyles
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_ShapeStyles
  name: ShapeStyles
  nameWithType: DxfDocument.ShapeStyles
  fullName: netDxf.DxfDocument.ShapeStyles
- uid: netDxf.DxfDocument.ShapeStyles*
  commentId: Overload:netDxf.DxfDocument.ShapeStyles
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_ShapeStyles
  name: ShapeStyles
  nameWithType: DxfDocument.ShapeStyles
  fullName: netDxf.DxfDocument.ShapeStyles
- uid: netDxf.Collections.ShapeStyles
  commentId: T:netDxf.Collections.ShapeStyles
  parent: netDxf.Collections
  href: netDxf.Collections.ShapeStyles.html
  name: ShapeStyles
  nameWithType: ShapeStyles
  fullName: netDxf.Collections.ShapeStyles
- uid: netDxf.DxfDocument.DimensionStyles
  commentId: P:netDxf.DxfDocument.DimensionStyles
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_DimensionStyles
  name: DimensionStyles
  nameWithType: DxfDocument.DimensionStyles
  fullName: netDxf.DxfDocument.DimensionStyles
- uid: netDxf.DxfDocument.DimensionStyles*
  commentId: Overload:netDxf.DxfDocument.DimensionStyles
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_DimensionStyles
  name: DimensionStyles
  nameWithType: DxfDocument.DimensionStyles
  fullName: netDxf.DxfDocument.DimensionStyles
- uid: netDxf.Collections.DimensionStyles
  commentId: T:netDxf.Collections.DimensionStyles
  parent: netDxf.Collections
  href: netDxf.Collections.DimensionStyles.html
  name: DimensionStyles
  nameWithType: DimensionStyles
  fullName: netDxf.Collections.DimensionStyles
- uid: netDxf.Collections.MLineStyles
  commentId: T:netDxf.Collections.MLineStyles
  parent: netDxf.Collections
  href: netDxf.Collections.MLineStyles.html
  name: MLineStyles
  nameWithType: MLineStyles
  fullName: netDxf.Collections.MLineStyles
- uid: netDxf.DxfDocument.MlineStyles*
  commentId: Overload:netDxf.DxfDocument.MlineStyles
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_MlineStyles
  name: MlineStyles
  nameWithType: DxfDocument.MlineStyles
  fullName: netDxf.DxfDocument.MlineStyles
- uid: netDxf.DxfDocument.UCSs
  commentId: P:netDxf.DxfDocument.UCSs
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_UCSs
  name: UCSs
  nameWithType: DxfDocument.UCSs
  fullName: netDxf.DxfDocument.UCSs
- uid: netDxf.DxfDocument.UCSs*
  commentId: Overload:netDxf.DxfDocument.UCSs
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_UCSs
  name: UCSs
  nameWithType: DxfDocument.UCSs
  fullName: netDxf.DxfDocument.UCSs
- uid: netDxf.Collections.UCSs
  commentId: T:netDxf.Collections.UCSs
  parent: netDxf.Collections
  href: netDxf.Collections.UCSs.html
  name: UCSs
  nameWithType: UCSs
  fullName: netDxf.Collections.UCSs
- uid: netDxf.Collections.BlockRecords
  commentId: T:netDxf.Collections.BlockRecords
  parent: netDxf.Collections
  href: netDxf.Collections.BlockRecords.html
  name: BlockRecords
  nameWithType: BlockRecords
  fullName: netDxf.Collections.BlockRecords
- uid: netDxf.DxfDocument.Blocks*
  commentId: Overload:netDxf.DxfDocument.Blocks
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Blocks
  name: Blocks
  nameWithType: DxfDocument.Blocks
  fullName: netDxf.DxfDocument.Blocks
- uid: netDxf.DxfDocument.ImageDefinitions
  commentId: P:netDxf.DxfDocument.ImageDefinitions
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_ImageDefinitions
  name: ImageDefinitions
  nameWithType: DxfDocument.ImageDefinitions
  fullName: netDxf.DxfDocument.ImageDefinitions
- uid: netDxf.DxfDocument.ImageDefinitions*
  commentId: Overload:netDxf.DxfDocument.ImageDefinitions
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_ImageDefinitions
  name: ImageDefinitions
  nameWithType: DxfDocument.ImageDefinitions
  fullName: netDxf.DxfDocument.ImageDefinitions
- uid: netDxf.Collections.ImageDefinitions
  commentId: T:netDxf.Collections.ImageDefinitions
  parent: netDxf.Collections
  href: netDxf.Collections.ImageDefinitions.html
  name: ImageDefinitions
  nameWithType: ImageDefinitions
  fullName: netDxf.Collections.ImageDefinitions
- uid: netDxf.DxfDocument.UnderlayDgnDefinitions
  commentId: P:netDxf.DxfDocument.UnderlayDgnDefinitions
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_UnderlayDgnDefinitions
  name: UnderlayDgnDefinitions
  nameWithType: DxfDocument.UnderlayDgnDefinitions
  fullName: netDxf.DxfDocument.UnderlayDgnDefinitions
- uid: netDxf.DxfDocument.UnderlayDgnDefinitions*
  commentId: Overload:netDxf.DxfDocument.UnderlayDgnDefinitions
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_UnderlayDgnDefinitions
  name: UnderlayDgnDefinitions
  nameWithType: DxfDocument.UnderlayDgnDefinitions
  fullName: netDxf.DxfDocument.UnderlayDgnDefinitions
- uid: netDxf.Collections.UnderlayDgnDefinitions
  commentId: T:netDxf.Collections.UnderlayDgnDefinitions
  parent: netDxf.Collections
  href: netDxf.Collections.UnderlayDgnDefinitions.html
  name: UnderlayDgnDefinitions
  nameWithType: UnderlayDgnDefinitions
  fullName: netDxf.Collections.UnderlayDgnDefinitions
- uid: netDxf.DxfDocument.UnderlayDwfDefinitions
  commentId: P:netDxf.DxfDocument.UnderlayDwfDefinitions
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_UnderlayDwfDefinitions
  name: UnderlayDwfDefinitions
  nameWithType: DxfDocument.UnderlayDwfDefinitions
  fullName: netDxf.DxfDocument.UnderlayDwfDefinitions
- uid: netDxf.DxfDocument.UnderlayDwfDefinitions*
  commentId: Overload:netDxf.DxfDocument.UnderlayDwfDefinitions
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_UnderlayDwfDefinitions
  name: UnderlayDwfDefinitions
  nameWithType: DxfDocument.UnderlayDwfDefinitions
  fullName: netDxf.DxfDocument.UnderlayDwfDefinitions
- uid: netDxf.Collections.UnderlayDwfDefinitions
  commentId: T:netDxf.Collections.UnderlayDwfDefinitions
  parent: netDxf.Collections
  href: netDxf.Collections.UnderlayDwfDefinitions.html
  name: UnderlayDwfDefinitions
  nameWithType: UnderlayDwfDefinitions
  fullName: netDxf.Collections.UnderlayDwfDefinitions
- uid: netDxf.DxfDocument.UnderlayPdfDefinitions
  commentId: P:netDxf.DxfDocument.UnderlayPdfDefinitions
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_UnderlayPdfDefinitions
  name: UnderlayPdfDefinitions
  nameWithType: DxfDocument.UnderlayPdfDefinitions
  fullName: netDxf.DxfDocument.UnderlayPdfDefinitions
- uid: netDxf.DxfDocument.UnderlayPdfDefinitions*
  commentId: Overload:netDxf.DxfDocument.UnderlayPdfDefinitions
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_UnderlayPdfDefinitions
  name: UnderlayPdfDefinitions
  nameWithType: DxfDocument.UnderlayPdfDefinitions
  fullName: netDxf.DxfDocument.UnderlayPdfDefinitions
- uid: netDxf.Collections.UnderlayPdfDefinitions
  commentId: T:netDxf.Collections.UnderlayPdfDefinitions
  parent: netDxf.Collections
  href: netDxf.Collections.UnderlayPdfDefinitions.html
  name: UnderlayPdfDefinitions
  nameWithType: UnderlayPdfDefinitions
  fullName: netDxf.Collections.UnderlayPdfDefinitions
- uid: netDxf.DxfDocument.Groups
  commentId: P:netDxf.DxfDocument.Groups
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Groups
  name: Groups
  nameWithType: DxfDocument.Groups
  fullName: netDxf.DxfDocument.Groups
- uid: netDxf.DxfDocument.Groups*
  commentId: Overload:netDxf.DxfDocument.Groups
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Groups
  name: Groups
  nameWithType: DxfDocument.Groups
  fullName: netDxf.DxfDocument.Groups
- uid: netDxf.Collections.Groups
  commentId: T:netDxf.Collections.Groups
  parent: netDxf.Collections
  href: netDxf.Collections.Groups.html
  name: Groups
  nameWithType: Groups
  fullName: netDxf.Collections.Groups
- uid: netDxf.DxfDocument.Layouts
  commentId: P:netDxf.DxfDocument.Layouts
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Layouts
  name: Layouts
  nameWithType: DxfDocument.Layouts
  fullName: netDxf.DxfDocument.Layouts
- uid: netDxf.DxfDocument.Layouts*
  commentId: Overload:netDxf.DxfDocument.Layouts
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Layouts
  name: Layouts
  nameWithType: DxfDocument.Layouts
  fullName: netDxf.DxfDocument.Layouts
- uid: netDxf.Collections.Layouts
  commentId: T:netDxf.Collections.Layouts
  parent: netDxf.Collections
  href: netDxf.Collections.Layouts.html
  name: Layouts
  nameWithType: Layouts
  fullName: netDxf.Collections.Layouts
- uid: netDxf.DxfDocument.VPorts
  commentId: P:netDxf.DxfDocument.VPorts
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_VPorts
  name: VPorts
  nameWithType: DxfDocument.VPorts
  fullName: netDxf.DxfDocument.VPorts
- uid: netDxf.DxfDocument.VPorts*
  commentId: Overload:netDxf.DxfDocument.VPorts
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_VPorts
  name: VPorts
  nameWithType: DxfDocument.VPorts
  fullName: netDxf.DxfDocument.VPorts
- uid: netDxf.Collections.VPorts
  commentId: T:netDxf.Collections.VPorts
  parent: netDxf.Collections
  href: netDxf.Collections.VPorts.html
  name: VPorts
  nameWithType: VPorts
  fullName: netDxf.Collections.VPorts
- uid: netDxf.Collections.DrawingEntities
  commentId: T:netDxf.Collections.DrawingEntities
  parent: netDxf.Collections
  href: netDxf.Collections.DrawingEntities.html
  name: DrawingEntities
  nameWithType: DrawingEntities
  fullName: netDxf.Collections.DrawingEntities
- uid: netDxf.DxfDocument.Entities*
  commentId: Overload:netDxf.DxfDocument.Entities
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Entities
  name: Entities
  nameWithType: DxfDocument.Entities
  fullName: netDxf.DxfDocument.Entities
- uid: netDxf.IO.DxfVersionNotSupportedException
  commentId: T:netDxf.IO.DxfVersionNotSupportedException
  href: netDxf.IO.DxfVersionNotSupportedException.html
  name: DxfVersionNotSupportedException
  nameWithType: DxfVersionNotSupportedException
  fullName: netDxf.IO.DxfVersionNotSupportedException
- uid: netDxf.DxfDocument.Load*
  commentId: Overload:netDxf.DxfDocument.Load
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Load_System_String_
  name: Load
  nameWithType: DxfDocument.Load
  fullName: netDxf.DxfDocument.Load
- uid: netDxf.DxfDocument
  commentId: T:netDxf.DxfDocument
  parent: netDxf
  href: netDxf.DxfDocument.html
  name: DxfDocument
  nameWithType: DxfDocument
  fullName: netDxf.DxfDocument
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: netDxf.DxfDocument.Save*
  commentId: Overload:netDxf.DxfDocument.Save
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_Save_System_String_
  name: Save
  nameWithType: DxfDocument.Save
  fullName: netDxf.DxfDocument.Save
- uid: netDxf.DxfDocument.CheckDxfFileVersion*
  commentId: Overload:netDxf.DxfDocument.CheckDxfFileVersion
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_CheckDxfFileVersion_System_String_
  name: CheckDxfFileVersion
  nameWithType: DxfDocument.CheckDxfFileVersion
  fullName: netDxf.DxfDocument.CheckDxfFileVersion
- uid: netDxf.DxfDocument.GetObjectByHandle*
  commentId: Overload:netDxf.DxfDocument.GetObjectByHandle
  href: netDxf.DxfDocument.html#netDxf_DxfDocument_GetObjectByHandle_System_String_
  name: GetObjectByHandle
  nameWithType: DxfDocument.GetObjectByHandle
  fullName: netDxf.DxfDocument.GetObjectByHandle
