### YamlMime:ManagedReference
items:
- uid: netDxf.Entities.MText
  commentId: T:netDxf.Entities.MText
  id: MText
  parent: netDxf.Entities
  children:
  - netDxf.Entities.MText.#ctor
  - netDxf.Entities.MText.#ctor(System.String)
  - netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double)
  - netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double,System.Double)
  - netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double,System.Double,netDxf.Tables.TextStyle)
  - netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double)
  - netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double,System.Double)
  - netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double,System.Double,netDxf.Tables.TextStyle)
  - netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double)
  - netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double,System.Double)
  - netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double,System.Double,netDxf.Tables.TextStyle)
  - netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double)
  - netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double,System.Double)
  - netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double,System.Double,netDxf.Tables.TextStyle)
  - netDxf.Entities.MText.AttachmentPoint
  - netDxf.Entities.MText.Clone
  - netDxf.Entities.MText.DefaultMirrText
  - netDxf.Entities.MText.DrawingDirection
  - netDxf.Entities.MText.EndParagraph
  - netDxf.Entities.MText.Height
  - netDxf.Entities.MText.LineSpacingFactor
  - netDxf.Entities.MText.LineSpacingStyle
  - netDxf.Entities.MText.OnTextStyleChangedEvent(netDxf.Tables.TextStyle,netDxf.Tables.TextStyle)
  - netDxf.Entities.MText.PlainText
  - netDxf.Entities.MText.Position
  - netDxf.Entities.MText.RectangleWidth
  - netDxf.Entities.MText.Rotation
  - netDxf.Entities.MText.StartParagraph
  - netDxf.Entities.MText.StartParagraph(netDxf.Entities.MTextParagraphOptions)
  - netDxf.Entities.MText.Style
  - netDxf.Entities.MText.TextStyleChanged
  - netDxf.Entities.MText.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  - netDxf.Entities.MText.Value
  - netDxf.Entities.MText.Write(System.String)
  - netDxf.Entities.MText.Write(System.String,netDxf.Entities.MTextFormattingOptions)
  - netDxf.Entities.MText.WriteFraction(System.String,System.String,netDxf.Units.FractionFormatType)
  - netDxf.Entities.MText.WriteFraction(System.String,System.String,netDxf.Units.FractionFormatType,netDxf.Entities.MTextFormattingOptions)
  langs:
  - csharp
  - vb
  name: MText
  nameWithType: MText
  fullName: netDxf.Entities.MText
  type: Class
  source:
    id: MText
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 89
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Represents a multiline text <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    Formatting codes for MText, you can use them directly while setting the text value or use the Write() and EndParagraph() methods.<br />

    \L Start underline<br />

    \l Stop underline<br />

    \O Start overstrike<br />

    \o Stop overstrike<br />

    \K Start strike-through<br />

    \k Stop strike-through<br />

    \P New paragraph (new line)<br />

    \pxi Control codes for bullets, numbered paragraphs and columns<br />

    \X Paragraph wrap on the dimension line (only in dimensions)<br />

    \Q Slanting (obliquing) text by angle - e.g. \Q30;<br />

    \H Text height - e.g. \H3x;<br />

    \W Text width - e.g. \W0.8x;<br />

    \F Font selection<br />

    <br />

    e.g. \Fgdt;o - GDT-tolerance<br />

    e.g. \Fkroeger|b0|i0|c238|p10; - font Kroeger, non-bold, non-italic, code page 238, pitch 10<br />

    <br />

    \S Stacking, fractions<br />

    <br />

    e.g. \SA^B;<br />

    A<br />

    B<br />

    e.g. \SX/Y<br />

    X<br />

    -<br />

    Y<br />

    e.g. \S1#4;<br />

    1/4<br />

    <br />

    \A Alignment<br />

    \A0; = bottom<br />

    \A1; = center<br />

    \A2; = top<br />

    <br />

    \C Color change<br />

    \C1; = red<br />

    \C2; = yellow<br />

    \C3; = green<br />

    \C4; = cyan<br />

    \C5; = blue<br />

    \C6; = magenta<br />

    \C7; = white<br />

    <br />

    \T Tracking, char.spacing - e.g. \T2;<br />

    \~ Non-wrapping space, hard space<br />

    {} Braces - define the text area influenced by the code<br />

    \ Escape character - e.g. \\ = "\", \{ = "{"<br />

    <br />

    Codes and braces can be nested up to 8 levels deep.<br />
  example: []
  syntax:
    content: 'public class MText : EntityObject, ICloneable'
    content.vb: Public Class MText Inherits EntityObject Implements ICloneable
  inheritance:
  - System.Object
  - netDxf.DxfObject
  - netDxf.Entities.EntityObject
  implements:
  - System.ICloneable
  inheritedMembers:
  - netDxf.Entities.EntityObject.LayerChanged
  - netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  - netDxf.Entities.EntityObject.LinetypeChanged
  - netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  - netDxf.Entities.EntityObject.Reactors
  - netDxf.Entities.EntityObject.Type
  - netDxf.Entities.EntityObject.Color
  - netDxf.Entities.EntityObject.Layer
  - netDxf.Entities.EntityObject.Linetype
  - netDxf.Entities.EntityObject.Lineweight
  - netDxf.Entities.EntityObject.Transparency
  - netDxf.Entities.EntityObject.LinetypeScale
  - netDxf.Entities.EntityObject.IsVisible
  - netDxf.Entities.EntityObject.Normal
  - netDxf.Entities.EntityObject.Owner
  - netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  - netDxf.Entities.EntityObject.ToString
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.XData
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Entities.MText.TextStyleChanged
  commentId: E:netDxf.Entities.MText.TextStyleChanged
  id: TextStyleChanged
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: TextStyleChanged
  nameWithType: MText.TextStyleChanged
  fullName: netDxf.Entities.MText.TextStyleChanged
  type: Event
  source:
    id: TextStyleChanged
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 95
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  syntax:
    content: public event MText.TextStyleChangedEventHandler TextStyleChanged
    return:
      type: netDxf.Entities.MText.TextStyleChangedEventHandler
    content.vb: Public Event TextStyleChanged As MText.TextStyleChangedEventHandler
- uid: netDxf.Entities.MText.OnTextStyleChangedEvent(netDxf.Tables.TextStyle,netDxf.Tables.TextStyle)
  commentId: M:netDxf.Entities.MText.OnTextStyleChangedEvent(netDxf.Tables.TextStyle,netDxf.Tables.TextStyle)
  id: OnTextStyleChangedEvent(netDxf.Tables.TextStyle,netDxf.Tables.TextStyle)
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: OnTextStyleChangedEvent(TextStyle, TextStyle)
  nameWithType: MText.OnTextStyleChangedEvent(TextStyle, TextStyle)
  fullName: netDxf.Entities.MText.OnTextStyleChangedEvent(netDxf.Tables.TextStyle, netDxf.Tables.TextStyle)
  type: Method
  source:
    id: OnTextStyleChangedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 96
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  syntax:
    content: protected virtual TextStyle OnTextStyleChangedEvent(TextStyle oldTextStyle, TextStyle newTextStyle)
    parameters:
    - id: oldTextStyle
      type: netDxf.Tables.TextStyle
    - id: newTextStyle
      type: netDxf.Tables.TextStyle
    return:
      type: netDxf.Tables.TextStyle
    content.vb: Protected Overridable Function OnTextStyleChangedEvent(oldTextStyle As TextStyle, newTextStyle As TextStyle) As TextStyle
  overload: netDxf.Entities.MText.OnTextStyleChangedEvent*
- uid: netDxf.Entities.MText.#ctor
  commentId: M:netDxf.Entities.MText.#ctor
  id: '#ctor'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText()
  nameWithType: MText.MText()
  fullName: netDxf.Entities.MText.MText()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 130
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText()
    content.vb: Public Sub New()
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New()
  fullName.vb: netDxf.Entities.MText.New()
  name.vb: New()
- uid: netDxf.Entities.MText.#ctor(System.String)
  commentId: M:netDxf.Entities.MText.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(string)
  nameWithType: MText.MText(string)
  fullName: netDxf.Entities.MText.MText(string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 139
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(string text)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    content.vb: Public Sub New(text As String)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(String)
  fullName.vb: netDxf.Entities.MText.New(String)
  name.vb: New(String)
- uid: netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double)
  commentId: M:netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double)
  id: '#ctor(netDxf.Vector2,System.Double)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(Vector2, double)
  nameWithType: MText.MText(Vector2, double)
  fullName: netDxf.Entities.MText.MText(netDxf.Vector2, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 149
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(Vector2 position, double height)
    parameters:
    - id: position
      type: netDxf.Vector2
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    content.vb: Public Sub New(position As Vector2, height As Double)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(Vector2, Double)
  fullName.vb: netDxf.Entities.MText.New(netDxf.Vector2, Double)
  name.vb: New(Vector2, Double)
- uid: netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double)
  commentId: M:netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double)
  id: '#ctor(netDxf.Vector3,System.Double)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(Vector3, double)
  nameWithType: MText.MText(Vector3, double)
  fullName: netDxf.Entities.MText.MText(netDxf.Vector3, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 159
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(Vector3 position, double height)
    parameters:
    - id: position
      type: netDxf.Vector3
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    content.vb: Public Sub New(position As Vector3, height As Double)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(Vector3, Double)
  fullName.vb: netDxf.Entities.MText.New(netDxf.Vector3, Double)
  name.vb: New(Vector3, Double)
- uid: netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double,System.Double)
  commentId: M:netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double,System.Double)
  id: '#ctor(netDxf.Vector3,System.Double,System.Double)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(Vector3, double, double)
  nameWithType: MText.MText(Vector3, double, double)
  fullName: netDxf.Entities.MText.MText(netDxf.Vector3, double, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 170
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(Vector3 position, double height, double rectangleWidth)
    parameters:
    - id: position
      type: netDxf.Vector3
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: rectangleWidth
      type: System.Double
      description: Reference rectangle width.
    content.vb: Public Sub New(position As Vector3, height As Double, rectangleWidth As Double)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(Vector3, Double, Double)
  fullName.vb: netDxf.Entities.MText.New(netDxf.Vector3, Double, Double)
  name.vb: New(Vector3, Double, Double)
- uid: netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double,System.Double)
  commentId: M:netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double,System.Double)
  id: '#ctor(netDxf.Vector2,System.Double,System.Double)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(Vector2, double, double)
  nameWithType: MText.MText(Vector2, double, double)
  fullName: netDxf.Entities.MText.MText(netDxf.Vector2, double, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 181
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(Vector2 position, double height, double rectangleWidth)
    parameters:
    - id: position
      type: netDxf.Vector2
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: rectangleWidth
      type: System.Double
      description: Reference rectangle width.
    content.vb: Public Sub New(position As Vector2, height As Double, rectangleWidth As Double)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(Vector2, Double, Double)
  fullName.vb: netDxf.Entities.MText.New(netDxf.Vector2, Double, Double)
  name.vb: New(Vector2, Double, Double)
- uid: netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double,System.Double,netDxf.Tables.TextStyle)
  commentId: M:netDxf.Entities.MText.#ctor(netDxf.Vector3,System.Double,System.Double,netDxf.Tables.TextStyle)
  id: '#ctor(netDxf.Vector3,System.Double,System.Double,netDxf.Tables.TextStyle)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(Vector3, double, double, TextStyle)
  nameWithType: MText.MText(Vector3, double, double, TextStyle)
  fullName: netDxf.Entities.MText.MText(netDxf.Vector3, double, double, netDxf.Tables.TextStyle)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 193
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(Vector3 position, double height, double rectangleWidth, TextStyle style)
    parameters:
    - id: position
      type: netDxf.Vector3
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: rectangleWidth
      type: System.Double
      description: Reference rectangle width.
    - id: style
      type: netDxf.Tables.TextStyle
      description: Text <xref href="netDxf.Tables.TextStyle?text=style" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(position As Vector3, height As Double, rectangleWidth As Double, style As TextStyle)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(Vector3, Double, Double, TextStyle)
  fullName.vb: netDxf.Entities.MText.New(netDxf.Vector3, Double, Double, netDxf.Tables.TextStyle)
  name.vb: New(Vector3, Double, Double, TextStyle)
- uid: netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double,System.Double,netDxf.Tables.TextStyle)
  commentId: M:netDxf.Entities.MText.#ctor(netDxf.Vector2,System.Double,System.Double,netDxf.Tables.TextStyle)
  id: '#ctor(netDxf.Vector2,System.Double,System.Double,netDxf.Tables.TextStyle)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(Vector2, double, double, TextStyle)
  nameWithType: MText.MText(Vector2, double, double, TextStyle)
  fullName: netDxf.Entities.MText.MText(netDxf.Vector2, double, double, netDxf.Tables.TextStyle)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 205
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(Vector2 position, double height, double rectangleWidth, TextStyle style)
    parameters:
    - id: position
      type: netDxf.Vector2
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: rectangleWidth
      type: System.Double
      description: Reference rectangle width.
    - id: style
      type: netDxf.Tables.TextStyle
      description: Text <xref href="netDxf.Tables.TextStyle?text=style" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(position As Vector2, height As Double, rectangleWidth As Double, style As TextStyle)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(Vector2, Double, Double, TextStyle)
  fullName.vb: netDxf.Entities.MText.New(netDxf.Vector2, Double, Double, netDxf.Tables.TextStyle)
  name.vb: New(Vector2, Double, Double, TextStyle)
- uid: netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double)
  commentId: M:netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double)
  id: '#ctor(System.String,netDxf.Vector2,System.Double)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(string, Vector2, double)
  nameWithType: MText.MText(string, Vector2, double)
  fullName: netDxf.Entities.MText.MText(string, netDxf.Vector2, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 216
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(string text, Vector2 position, double height)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector2
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    content.vb: Public Sub New(text As String, position As Vector2, height As Double)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(String, Vector2, Double)
  fullName.vb: netDxf.Entities.MText.New(String, netDxf.Vector2, Double)
  name.vb: New(String, Vector2, Double)
- uid: netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double)
  commentId: M:netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double)
  id: '#ctor(System.String,netDxf.Vector3,System.Double)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(string, Vector3, double)
  nameWithType: MText.MText(string, Vector3, double)
  fullName: netDxf.Entities.MText.MText(string, netDxf.Vector3, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 227
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(string text, Vector3 position, double height)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector3
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    content.vb: Public Sub New(text As String, position As Vector3, height As Double)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(String, Vector3, Double)
  fullName.vb: netDxf.Entities.MText.New(String, netDxf.Vector3, Double)
  name.vb: New(String, Vector3, Double)
- uid: netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double,System.Double)
  commentId: M:netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double,System.Double)
  id: '#ctor(System.String,netDxf.Vector2,System.Double,System.Double)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(string, Vector2, double, double)
  nameWithType: MText.MText(string, Vector2, double, double)
  fullName: netDxf.Entities.MText.MText(string, netDxf.Vector2, double, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 239
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(string text, Vector2 position, double height, double rectangleWidth)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector2
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: rectangleWidth
      type: System.Double
      description: Reference rectangle width.
    content.vb: Public Sub New(text As String, position As Vector2, height As Double, rectangleWidth As Double)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(String, Vector2, Double, Double)
  fullName.vb: netDxf.Entities.MText.New(String, netDxf.Vector2, Double, Double)
  name.vb: New(String, Vector2, Double, Double)
- uid: netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double,System.Double)
  commentId: M:netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double,System.Double)
  id: '#ctor(System.String,netDxf.Vector3,System.Double,System.Double)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(string, Vector3, double, double)
  nameWithType: MText.MText(string, Vector3, double, double)
  fullName: netDxf.Entities.MText.MText(string, netDxf.Vector3, double, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 251
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(string text, Vector3 position, double height, double rectangleWidth)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector3
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: rectangleWidth
      type: System.Double
      description: Reference rectangle width.
    content.vb: Public Sub New(text As String, position As Vector3, height As Double, rectangleWidth As Double)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(String, Vector3, Double, Double)
  fullName.vb: netDxf.Entities.MText.New(String, netDxf.Vector3, Double, Double)
  name.vb: New(String, Vector3, Double, Double)
- uid: netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double,System.Double,netDxf.Tables.TextStyle)
  commentId: M:netDxf.Entities.MText.#ctor(System.String,netDxf.Vector2,System.Double,System.Double,netDxf.Tables.TextStyle)
  id: '#ctor(System.String,netDxf.Vector2,System.Double,System.Double,netDxf.Tables.TextStyle)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(string, Vector2, double, double, TextStyle)
  nameWithType: MText.MText(string, Vector2, double, double, TextStyle)
  fullName: netDxf.Entities.MText.MText(string, netDxf.Vector2, double, double, netDxf.Tables.TextStyle)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 264
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(string text, Vector2 position, double height, double rectangleWidth, TextStyle style)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector2
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: rectangleWidth
      type: System.Double
      description: Reference rectangle width.
    - id: style
      type: netDxf.Tables.TextStyle
      description: Text <xref href="netDxf.Tables.TextStyle?text=style" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(text As String, position As Vector2, height As Double, rectangleWidth As Double, style As TextStyle)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(String, Vector2, Double, Double, TextStyle)
  fullName.vb: netDxf.Entities.MText.New(String, netDxf.Vector2, Double, Double, netDxf.Tables.TextStyle)
  name.vb: New(String, Vector2, Double, Double, TextStyle)
- uid: netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double,System.Double,netDxf.Tables.TextStyle)
  commentId: M:netDxf.Entities.MText.#ctor(System.String,netDxf.Vector3,System.Double,System.Double,netDxf.Tables.TextStyle)
  id: '#ctor(System.String,netDxf.Vector3,System.Double,System.Double,netDxf.Tables.TextStyle)'
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: MText(string, Vector3, double, double, TextStyle)
  nameWithType: MText.MText(string, Vector3, double, double, TextStyle)
  fullName: netDxf.Entities.MText.MText(string, netDxf.Vector3, double, double, netDxf.Tables.TextStyle)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 277
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>MText</code> class.
  example: []
  syntax:
    content: public MText(string text, Vector3 position, double height, double rectangleWidth, TextStyle style)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector3
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: rectangleWidth
      type: System.Double
      description: Reference rectangle width.
    - id: style
      type: netDxf.Tables.TextStyle
      description: Text <xref href="netDxf.Tables.TextStyle?text=style" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(text As String, position As Vector3, height As Double, rectangleWidth As Double, style As TextStyle)
  overload: netDxf.Entities.MText.#ctor*
  nameWithType.vb: MText.New(String, Vector3, Double, Double, TextStyle)
  fullName.vb: netDxf.Entities.MText.New(String, netDxf.Vector3, Double, Double, netDxf.Tables.TextStyle)
  name.vb: New(String, Vector3, Double, Double, TextStyle)
- uid: netDxf.Entities.MText.DefaultMirrText
  commentId: P:netDxf.Entities.MText.DefaultMirrText
  id: DefaultMirrText
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: DefaultMirrText
  nameWithType: MText.DefaultMirrText
  fullName: netDxf.Entities.MText.DefaultMirrText
  type: Property
  source:
    id: DefaultMirrText
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 303
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the text will be mirrored when a symmetry is performed, when the current MText entity does not belong to a DXF document.
  example: []
  syntax:
    content: public static bool DefaultMirrText { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property DefaultMirrText As Boolean
  overload: netDxf.Entities.MText.DefaultMirrText*
- uid: netDxf.Entities.MText.Rotation
  commentId: P:netDxf.Entities.MText.Rotation
  id: Rotation
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: MText.Rotation
  fullName: netDxf.Entities.MText.Rotation
  type: Property
  source:
    id: Rotation
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 312
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text rotation in degrees.
  example: []
  syntax:
    content: public double Rotation { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Rotation As Double
  overload: netDxf.Entities.MText.Rotation*
- uid: netDxf.Entities.MText.Height
  commentId: P:netDxf.Entities.MText.Height
  id: Height
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: MText.Height
  fullName: netDxf.Entities.MText.Height
  type: Property
  source:
    id: Height
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 321
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text height.
  example: []
  syntax:
    content: public double Height { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Height As Double
  overload: netDxf.Entities.MText.Height*
- uid: netDxf.Entities.MText.LineSpacingFactor
  commentId: P:netDxf.Entities.MText.LineSpacingFactor
  id: LineSpacingFactor
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: LineSpacingFactor
  nameWithType: MText.LineSpacingFactor
  fullName: netDxf.Entities.MText.LineSpacingFactor
  type: Property
  source:
    id: LineSpacingFactor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 340
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the line spacing factor.
  remarks: Percentage of default line spacing to be applied. Valid values range from 0.25 to 4.0, the default value 1.0.
  example: []
  syntax:
    content: public double LineSpacingFactor { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property LineSpacingFactor As Double
  overload: netDxf.Entities.MText.LineSpacingFactor*
- uid: netDxf.Entities.MText.LineSpacingStyle
  commentId: P:netDxf.Entities.MText.LineSpacingStyle
  id: LineSpacingStyle
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: LineSpacingStyle
  nameWithType: MText.LineSpacingStyle
  fullName: netDxf.Entities.MText.LineSpacingStyle
  type: Property
  source:
    id: LineSpacingStyle
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 360
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Get or sets the <xref href="netDxf.Entities.MTextLineSpacingStyle?text=line+spacing+style" data-throw-if-not-resolved="false"></xref>.
  remarks: The only available options are AtLeast and Exact, Default and Multiple are only applicable to MTextParagraphOptions objects.
  example: []
  syntax:
    content: public MTextLineSpacingStyle LineSpacingStyle { get; set; }
    parameters: []
    return:
      type: netDxf.Entities.MTextLineSpacingStyle
    content.vb: Public Property LineSpacingStyle As MTextLineSpacingStyle
  overload: netDxf.Entities.MText.LineSpacingStyle*
- uid: netDxf.Entities.MText.DrawingDirection
  commentId: P:netDxf.Entities.MText.DrawingDirection
  id: DrawingDirection
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: DrawingDirection
  nameWithType: MText.DrawingDirection
  fullName: netDxf.Entities.MText.DrawingDirection
  type: Property
  source:
    id: DrawingDirection
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 376
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Get or sets the <xref href="netDxf.Entities.MTextDrawingDirection?text=text+drawing+direction" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public MTextDrawingDirection DrawingDirection { get; set; }
    parameters: []
    return:
      type: netDxf.Entities.MTextDrawingDirection
    content.vb: Public Property DrawingDirection As MTextDrawingDirection
  overload: netDxf.Entities.MText.DrawingDirection*
- uid: netDxf.Entities.MText.RectangleWidth
  commentId: P:netDxf.Entities.MText.RectangleWidth
  id: RectangleWidth
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: RectangleWidth
  nameWithType: MText.RectangleWidth
  fullName: netDxf.Entities.MText.RectangleWidth
  type: Property
  source:
    id: RectangleWidth
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 390
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text reference rectangle width.
  remarks: >-
    This value defines the width of the box where the text will fit.<br />

    If a paragraph width is longer than the rectangle width it will be broken in several lines, using the word spaces as breaking points.<br />

    If you specify a width of 0, word wrap is turned off and the width of the multiline text object is as wide as the longest line of text.
  example: []
  syntax:
    content: public double RectangleWidth { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property RectangleWidth As Double
  overload: netDxf.Entities.MText.RectangleWidth*
- uid: netDxf.Entities.MText.AttachmentPoint
  commentId: P:netDxf.Entities.MText.AttachmentPoint
  id: AttachmentPoint
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: AttachmentPoint
  nameWithType: MText.AttachmentPoint
  fullName: netDxf.Entities.MText.AttachmentPoint
  type: Property
  source:
    id: AttachmentPoint
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 406
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text <xref href="netDxf.Entities.MTextAttachmentPoint?text=attachment+point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public MTextAttachmentPoint AttachmentPoint { get; set; }
    parameters: []
    return:
      type: netDxf.Entities.MTextAttachmentPoint
    content.vb: Public Property AttachmentPoint As MTextAttachmentPoint
  overload: netDxf.Entities.MText.AttachmentPoint*
- uid: netDxf.Entities.MText.Style
  commentId: P:netDxf.Entities.MText.Style
  id: Style
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: MText.Style
  fullName: netDxf.Entities.MText.Style
  type: Property
  source:
    id: Style
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 415
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the <xref href="netDxf.Tables.TextStyle?text=text+style" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TextStyle Style { get; set; }
    parameters: []
    return:
      type: netDxf.Tables.TextStyle
    content.vb: Public Property Style As TextStyle
  overload: netDxf.Entities.MText.Style*
- uid: netDxf.Entities.MText.Position
  commentId: P:netDxf.Entities.MText.Position
  id: Position
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: MText.Position
  fullName: netDxf.Entities.MText.Position
  type: Property
  source:
    id: Position
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 431
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the Text <xref href="netDxf.Vector3?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
  example: []
  syntax:
    content: public Vector3 Position { get; set; }
    parameters: []
    return:
      type: netDxf.Vector3
    content.vb: Public Property Position As Vector3
  overload: netDxf.Entities.MText.Position*
- uid: netDxf.Entities.MText.Value
  commentId: P:netDxf.Entities.MText.Value
  id: Value
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: MText.Value
  fullName: netDxf.Entities.MText.Value
  type: Property
  source:
    id: Value
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 440
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the raw text string.
  example: []
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: netDxf.Entities.MText.Value*
- uid: netDxf.Entities.MText.WriteFraction(System.String,System.String,netDxf.Units.FractionFormatType)
  commentId: M:netDxf.Entities.MText.WriteFraction(System.String,System.String,netDxf.Units.FractionFormatType)
  id: WriteFraction(System.String,System.String,netDxf.Units.FractionFormatType)
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: WriteFraction(string, string, FractionFormatType)
  nameWithType: MText.WriteFraction(string, string, FractionFormatType)
  fullName: netDxf.Entities.MText.WriteFraction(string, string, netDxf.Units.FractionFormatType)
  type: Method
  source:
    id: WriteFraction
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 460
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Formats a text string to represent a fraction.
  remarks: In fractions the characters '/' and '#' are reserved if you need to write them you must write "\/" and "\#", respectively.
  example: []
  syntax:
    content: public void WriteFraction(string numerator, string denominator, FractionFormatType fractionType)
    parameters:
    - id: numerator
      type: System.String
      description: Fraction numerator.
    - id: denominator
      type: System.String
      description: Fraction denominator.
    - id: fractionType
      type: netDxf.Units.FractionFormatType
      description: Style of the fraction.
    content.vb: Public Sub WriteFraction(numerator As String, denominator As String, fractionType As FractionFormatType)
  overload: netDxf.Entities.MText.WriteFraction*
  nameWithType.vb: MText.WriteFraction(String, String, FractionFormatType)
  fullName.vb: netDxf.Entities.MText.WriteFraction(String, String, netDxf.Units.FractionFormatType)
  name.vb: WriteFraction(String, String, FractionFormatType)
- uid: netDxf.Entities.MText.WriteFraction(System.String,System.String,netDxf.Units.FractionFormatType,netDxf.Entities.MTextFormattingOptions)
  commentId: M:netDxf.Entities.MText.WriteFraction(System.String,System.String,netDxf.Units.FractionFormatType,netDxf.Entities.MTextFormattingOptions)
  id: WriteFraction(System.String,System.String,netDxf.Units.FractionFormatType,netDxf.Entities.MTextFormattingOptions)
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: WriteFraction(string, string, FractionFormatType, MTextFormattingOptions)
  nameWithType: MText.WriteFraction(string, string, FractionFormatType, MTextFormattingOptions)
  fullName: netDxf.Entities.MText.WriteFraction(string, string, netDxf.Units.FractionFormatType, netDxf.Entities.MTextFormattingOptions)
  type: Method
  source:
    id: WriteFraction
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 477
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Formats a text string to represent a fraction.
  remarks: >-
    In fractions the characters '/' and '#' are reserved if you need to write them you must write "\/" and "\#", respectively.<br />

    Do not combine fractions with super or subscript options, it is not supported (stacking commands cannot be nested).
  example: []
  syntax:
    content: public void WriteFraction(string numerator, string denominator, FractionFormatType fractionType, MTextFormattingOptions options)
    parameters:
    - id: numerator
      type: System.String
      description: Fraction numerator.
    - id: denominator
      type: System.String
      description: Fraction denominator.
    - id: fractionType
      type: netDxf.Units.FractionFormatType
      description: Style of the fraction.
    - id: options
      type: netDxf.Entities.MTextFormattingOptions
      description: Text formatting options.
    content.vb: Public Sub WriteFraction(numerator As String, denominator As String, fractionType As FractionFormatType, options As MTextFormattingOptions)
  overload: netDxf.Entities.MText.WriteFraction*
  nameWithType.vb: MText.WriteFraction(String, String, FractionFormatType, MTextFormattingOptions)
  fullName.vb: netDxf.Entities.MText.WriteFraction(String, String, netDxf.Units.FractionFormatType, netDxf.Entities.MTextFormattingOptions)
  name.vb: WriteFraction(String, String, FractionFormatType, MTextFormattingOptions)
- uid: netDxf.Entities.MText.Write(System.String)
  commentId: M:netDxf.Entities.MText.Write(System.String)
  id: Write(System.String)
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: Write(string)
  nameWithType: MText.Write(string)
  fullName: netDxf.Entities.MText.Write(string)
  type: Method
  source:
    id: Write
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 500
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Adds the text to the current paragraph.
  example: []
  syntax:
    content: public void Write(string txt)
    parameters:
    - id: txt
      type: System.String
      description: Text string.
    content.vb: Public Sub Write(txt As String)
  overload: netDxf.Entities.MText.Write*
  nameWithType.vb: MText.Write(String)
  fullName.vb: netDxf.Entities.MText.Write(String)
  name.vb: Write(String)
- uid: netDxf.Entities.MText.Write(System.String,netDxf.Entities.MTextFormattingOptions)
  commentId: M:netDxf.Entities.MText.Write(System.String,netDxf.Entities.MTextFormattingOptions)
  id: Write(System.String,netDxf.Entities.MTextFormattingOptions)
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: Write(string, MTextFormattingOptions)
  nameWithType: MText.Write(string, MTextFormattingOptions)
  fullName: netDxf.Entities.MText.Write(string, netDxf.Entities.MTextFormattingOptions)
  type: Method
  source:
    id: Write
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 510
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Adds the text to the current paragraph.
  example: []
  syntax:
    content: public void Write(string txt, MTextFormattingOptions options)
    parameters:
    - id: txt
      type: System.String
      description: Text string.
    - id: options
      type: netDxf.Entities.MTextFormattingOptions
      description: Text formatting options.
    content.vb: Public Sub Write(txt As String, options As MTextFormattingOptions)
  overload: netDxf.Entities.MText.Write*
  nameWithType.vb: MText.Write(String, MTextFormattingOptions)
  fullName.vb: netDxf.Entities.MText.Write(String, netDxf.Entities.MTextFormattingOptions)
  name.vb: Write(String, MTextFormattingOptions)
- uid: netDxf.Entities.MText.EndParagraph
  commentId: M:netDxf.Entities.MText.EndParagraph
  id: EndParagraph
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: EndParagraph()
  nameWithType: MText.EndParagraph()
  fullName: netDxf.Entities.MText.EndParagraph()
  type: Method
  source:
    id: EndParagraph
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 609
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Ends the current paragraph.
  example: []
  syntax:
    content: public void EndParagraph()
    content.vb: Public Sub EndParagraph()
  overload: netDxf.Entities.MText.EndParagraph*
- uid: netDxf.Entities.MText.StartParagraph
  commentId: M:netDxf.Entities.MText.StartParagraph
  id: StartParagraph
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: StartParagraph()
  nameWithType: MText.StartParagraph()
  fullName: netDxf.Entities.MText.StartParagraph()
  type: Method
  source:
    id: StartParagraph
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 623
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Starts a new paragraph.
  remarks: >-
    When no paragraph options are used, strictly speaking, there is no need to call this method, the previous paragraph options will be inherited.<br />

    When there is no need to change the paragraph options from the previous, it is no necessary to pass again the same instance,

    the paragraph characteristics are inherited from the previous one.

    This way no codes needs to be written and it will save some characters in the final string.
  example: []
  syntax:
    content: public void StartParagraph()
    content.vb: Public Sub StartParagraph()
  overload: netDxf.Entities.MText.StartParagraph*
- uid: netDxf.Entities.MText.StartParagraph(netDxf.Entities.MTextParagraphOptions)
  commentId: M:netDxf.Entities.MText.StartParagraph(netDxf.Entities.MTextParagraphOptions)
  id: StartParagraph(netDxf.Entities.MTextParagraphOptions)
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: StartParagraph(MTextParagraphOptions)
  nameWithType: MText.StartParagraph(MTextParagraphOptions)
  fullName: netDxf.Entities.MText.StartParagraph(netDxf.Entities.MTextParagraphOptions)
  type: Method
  source:
    id: StartParagraph
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 638
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Starts a new paragraph.
  remarks: >-
    When no paragraph options are used, strictly speaking, there is no need to call this method, the previous paragraph options will be inherited.<br />

    When there is no need to change the paragraph options from the previous, it is no necessary to pass again the same instance,

    the paragraph characteristics are inherited from the previous one.

    This way no codes needs to be written and it will save some characters in the final string.
  example: []
  syntax:
    content: public void StartParagraph(MTextParagraphOptions options)
    parameters:
    - id: options
      type: netDxf.Entities.MTextParagraphOptions
      description: Paragraph options.
    content.vb: Public Sub StartParagraph(options As MTextParagraphOptions)
  overload: netDxf.Entities.MText.StartParagraph*
- uid: netDxf.Entities.MText.PlainText
  commentId: M:netDxf.Entities.MText.PlainText
  id: PlainText
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: PlainText()
  nameWithType: MText.PlainText()
  fullName: netDxf.Entities.MText.PlainText()
  type: Method
  source:
    id: PlainText
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 708
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: >-
    Obtains the MText text value without the formatting codes, control characters like tab '\t' will be preserved in the result,

    the new paragraph command "\P" will be converted to new line feed '\r\n'.
  example: []
  syntax:
    content: public string PlainText()
    return:
      type: System.String
      description: MText text value without the formatting codes.
    content.vb: Public Function PlainText() As String
  overload: netDxf.Entities.MText.PlainText*
- uid: netDxf.Entities.MText.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  commentId: M:netDxf.Entities.MText.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  id: TransformBy(netDxf.Matrix3,netDxf.Vector3)
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: TransformBy(Matrix3, Vector3)
  nameWithType: MText.TransformBy(Matrix3, Vector3)
  fullName: netDxf.Entities.MText.TransformBy(netDxf.Matrix3, netDxf.Vector3)
  type: Method
  source:
    id: TransformBy
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 827
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Moves, scales, and/or rotates the current entity given a 3x3 transformation matrix and a translation vector.
  remarks: >-
    Non-uniform scaling is not supported, it would require to decompose each line into independent Text entities.

    When the current Text entity does not belong to a DXF document, the text will use the DefaultMirrText when a symmetry is performed;

    otherwise, the drawing variable MirrText will be used.<br />

    Matrix3 adopts the convention of using column vectors to represent a transformation matrix.
  example: []
  syntax:
    content: public override void TransformBy(Matrix3 transformation, Vector3 translation)
    parameters:
    - id: transformation
      type: netDxf.Matrix3
      description: Transformation matrix.
    - id: translation
      type: netDxf.Vector3
      description: Translation vector.
    content.vb: Public Overrides Sub TransformBy(transformation As Matrix3, translation As Vector3)
  overridden: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  overload: netDxf.Entities.MText.TransformBy*
- uid: netDxf.Entities.MText.Clone
  commentId: M:netDxf.Entities.MText.Clone
  id: Clone
  parent: netDxf.Entities.MText
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: MText.Clone()
  fullName: netDxf.Entities.MText.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/MText.cs
    startLine: 947
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a new MText that is a copy of the current instance.
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: A new MText that is a copy of this instance.
    content.vb: Public Overrides Function Clone() As Object
  overridden: netDxf.Entities.EntityObject.Clone
  overload: netDxf.Entities.MText.Clone*
references:
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  href: netDxf.Entities.EntityObject.html
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: netDxf.Entities.EntityObject.LayerChanged
  commentId: E:netDxf.Entities.EntityObject.LayerChanged
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LayerChanged
  name: LayerChanged
  nameWithType: EntityObject.LayerChanged
  fullName: netDxf.Entities.EntityObject.LayerChanged
- uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  commentId: M:netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  name: OnLayerChangedEvent(Layer, Layer)
  nameWithType: EntityObject.OnLayerChangedEvent(Layer, Layer)
  fullName: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer, netDxf.Tables.Layer)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
    name: OnLayerChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  - name: (
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
    name: OnLayerChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  - name: (
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: )
- uid: netDxf.Entities.EntityObject.LinetypeChanged
  commentId: E:netDxf.Entities.EntityObject.LinetypeChanged
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LinetypeChanged
  name: LinetypeChanged
  nameWithType: EntityObject.LinetypeChanged
  fullName: netDxf.Entities.EntityObject.LinetypeChanged
- uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  commentId: M:netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  name: OnLinetypeChangedEvent(Linetype, Linetype)
  nameWithType: EntityObject.OnLinetypeChangedEvent(Linetype, Linetype)
  fullName: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype, netDxf.Tables.Linetype)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
    name: OnLinetypeChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  - name: (
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
    name: OnLinetypeChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  - name: (
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: )
- uid: netDxf.Entities.EntityObject.Reactors
  commentId: P:netDxf.Entities.EntityObject.Reactors
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Reactors
  name: Reactors
  nameWithType: EntityObject.Reactors
  fullName: netDxf.Entities.EntityObject.Reactors
- uid: netDxf.Entities.EntityObject.Type
  commentId: P:netDxf.Entities.EntityObject.Type
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Type
  name: Type
  nameWithType: EntityObject.Type
  fullName: netDxf.Entities.EntityObject.Type
- uid: netDxf.Entities.EntityObject.Color
  commentId: P:netDxf.Entities.EntityObject.Color
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Color
  name: Color
  nameWithType: EntityObject.Color
  fullName: netDxf.Entities.EntityObject.Color
- uid: netDxf.Entities.EntityObject.Layer
  commentId: P:netDxf.Entities.EntityObject.Layer
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Layer
  name: Layer
  nameWithType: EntityObject.Layer
  fullName: netDxf.Entities.EntityObject.Layer
- uid: netDxf.Entities.EntityObject.Linetype
  commentId: P:netDxf.Entities.EntityObject.Linetype
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Linetype
  name: Linetype
  nameWithType: EntityObject.Linetype
  fullName: netDxf.Entities.EntityObject.Linetype
- uid: netDxf.Entities.EntityObject.Lineweight
  commentId: P:netDxf.Entities.EntityObject.Lineweight
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Lineweight
  name: Lineweight
  nameWithType: EntityObject.Lineweight
  fullName: netDxf.Entities.EntityObject.Lineweight
- uid: netDxf.Entities.EntityObject.Transparency
  commentId: P:netDxf.Entities.EntityObject.Transparency
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Transparency
  name: Transparency
  nameWithType: EntityObject.Transparency
  fullName: netDxf.Entities.EntityObject.Transparency
- uid: netDxf.Entities.EntityObject.LinetypeScale
  commentId: P:netDxf.Entities.EntityObject.LinetypeScale
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LinetypeScale
  name: LinetypeScale
  nameWithType: EntityObject.LinetypeScale
  fullName: netDxf.Entities.EntityObject.LinetypeScale
- uid: netDxf.Entities.EntityObject.IsVisible
  commentId: P:netDxf.Entities.EntityObject.IsVisible
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_IsVisible
  name: IsVisible
  nameWithType: EntityObject.IsVisible
  fullName: netDxf.Entities.EntityObject.IsVisible
- uid: netDxf.Entities.EntityObject.Normal
  commentId: P:netDxf.Entities.EntityObject.Normal
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Normal
  name: Normal
  nameWithType: EntityObject.Normal
  fullName: netDxf.Entities.EntityObject.Normal
- uid: netDxf.Entities.EntityObject.Owner
  commentId: P:netDxf.Entities.EntityObject.Owner
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Owner
  name: Owner
  nameWithType: EntityObject.Owner
  fullName: netDxf.Entities.EntityObject.Owner
- uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  commentId: M:netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  name: TransformBy(Matrix4)
  nameWithType: EntityObject.TransformBy(Matrix4)
  fullName: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  - name: (
  - uid: netDxf.Matrix4
    name: Matrix4
    href: netDxf.Matrix4.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  - name: (
  - uid: netDxf.Matrix4
    name: Matrix4
    href: netDxf.Matrix4.html
  - name: )
- uid: netDxf.Entities.EntityObject.ToString
  commentId: M:netDxf.Entities.EntityObject.ToString
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  name: ToString()
  nameWithType: EntityObject.ToString()
  fullName: netDxf.Entities.EntityObject.ToString()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.ToString
    name: ToString
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.ToString
    name: ToString
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  - name: (
  - name: )
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataAddAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataAddAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataRemoveAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataRemoveAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.Entities.MText.TextStyleChangedEventHandler
  commentId: T:netDxf.Entities.MText.TextStyleChangedEventHandler
  parent: netDxf.Entities
  href: netDxf.Entities.MText.html
  name: MText.TextStyleChangedEventHandler
  nameWithType: MText.TextStyleChangedEventHandler
  fullName: netDxf.Entities.MText.TextStyleChangedEventHandler
  spec.csharp:
  - uid: netDxf.Entities.MText
    name: MText
    href: netDxf.Entities.MText.html
  - name: .
  - uid: netDxf.Entities.MText.TextStyleChangedEventHandler
    name: TextStyleChangedEventHandler
    href: netDxf.Entities.MText.TextStyleChangedEventHandler.html
  spec.vb:
  - uid: netDxf.Entities.MText
    name: MText
    href: netDxf.Entities.MText.html
  - name: .
  - uid: netDxf.Entities.MText.TextStyleChangedEventHandler
    name: TextStyleChangedEventHandler
    href: netDxf.Entities.MText.TextStyleChangedEventHandler.html
- uid: netDxf.Entities.MText.OnTextStyleChangedEvent*
  commentId: Overload:netDxf.Entities.MText.OnTextStyleChangedEvent
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_OnTextStyleChangedEvent_netDxf_Tables_TextStyle_netDxf_Tables_TextStyle_
  name: OnTextStyleChangedEvent
  nameWithType: MText.OnTextStyleChangedEvent
  fullName: netDxf.Entities.MText.OnTextStyleChangedEvent
- uid: netDxf.Tables.TextStyle
  commentId: T:netDxf.Tables.TextStyle
  parent: netDxf.Tables
  href: netDxf.Tables.TextStyle.html
  name: TextStyle
  nameWithType: TextStyle
  fullName: netDxf.Tables.TextStyle
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  href: netDxf.html
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
- uid: netDxf.Entities.MText.#ctor*
  commentId: Overload:netDxf.Entities.MText.#ctor
  href: netDxf.Entities.MText.html#netDxf_Entities_MText__ctor
  name: MText
  nameWithType: MText.MText
  fullName: netDxf.Entities.MText.MText
  nameWithType.vb: MText.New
  fullName.vb: netDxf.Entities.MText.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Vector2
  commentId: T:netDxf.Vector2
  parent: netDxf
  href: netDxf.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: netDxf.Vector2
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  href: netDxf.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: netDxf.Entities.MText.DefaultMirrText*
  commentId: Overload:netDxf.Entities.MText.DefaultMirrText
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_DefaultMirrText
  name: DefaultMirrText
  nameWithType: MText.DefaultMirrText
  fullName: netDxf.Entities.MText.DefaultMirrText
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Entities.MText.Rotation*
  commentId: Overload:netDxf.Entities.MText.Rotation
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_Rotation
  name: Rotation
  nameWithType: MText.Rotation
  fullName: netDxf.Entities.MText.Rotation
- uid: netDxf.Entities.MText.Height*
  commentId: Overload:netDxf.Entities.MText.Height
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_Height
  name: Height
  nameWithType: MText.Height
  fullName: netDxf.Entities.MText.Height
- uid: netDxf.Entities.MText.LineSpacingFactor*
  commentId: Overload:netDxf.Entities.MText.LineSpacingFactor
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_LineSpacingFactor
  name: LineSpacingFactor
  nameWithType: MText.LineSpacingFactor
  fullName: netDxf.Entities.MText.LineSpacingFactor
- uid: netDxf.Entities.MTextLineSpacingStyle
  commentId: T:netDxf.Entities.MTextLineSpacingStyle
  parent: netDxf.Entities
  href: netDxf.Entities.MTextLineSpacingStyle.html
  name: MTextLineSpacingStyle
  nameWithType: MTextLineSpacingStyle
  fullName: netDxf.Entities.MTextLineSpacingStyle
- uid: netDxf.Entities.MText.LineSpacingStyle*
  commentId: Overload:netDxf.Entities.MText.LineSpacingStyle
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_LineSpacingStyle
  name: LineSpacingStyle
  nameWithType: MText.LineSpacingStyle
  fullName: netDxf.Entities.MText.LineSpacingStyle
- uid: netDxf.Entities.MTextDrawingDirection
  commentId: T:netDxf.Entities.MTextDrawingDirection
  parent: netDxf.Entities
  href: netDxf.Entities.MTextDrawingDirection.html
  name: MTextDrawingDirection
  nameWithType: MTextDrawingDirection
  fullName: netDxf.Entities.MTextDrawingDirection
- uid: netDxf.Entities.MText.DrawingDirection*
  commentId: Overload:netDxf.Entities.MText.DrawingDirection
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_DrawingDirection
  name: DrawingDirection
  nameWithType: MText.DrawingDirection
  fullName: netDxf.Entities.MText.DrawingDirection
- uid: netDxf.Entities.MText.RectangleWidth*
  commentId: Overload:netDxf.Entities.MText.RectangleWidth
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_RectangleWidth
  name: RectangleWidth
  nameWithType: MText.RectangleWidth
  fullName: netDxf.Entities.MText.RectangleWidth
- uid: netDxf.Entities.MTextAttachmentPoint
  commentId: T:netDxf.Entities.MTextAttachmentPoint
  parent: netDxf.Entities
  href: netDxf.Entities.MTextAttachmentPoint.html
  name: MTextAttachmentPoint
  nameWithType: MTextAttachmentPoint
  fullName: netDxf.Entities.MTextAttachmentPoint
- uid: netDxf.Entities.MText.AttachmentPoint*
  commentId: Overload:netDxf.Entities.MText.AttachmentPoint
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_AttachmentPoint
  name: AttachmentPoint
  nameWithType: MText.AttachmentPoint
  fullName: netDxf.Entities.MText.AttachmentPoint
- uid: netDxf.Entities.MText.Style*
  commentId: Overload:netDxf.Entities.MText.Style
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_Style
  name: Style
  nameWithType: MText.Style
  fullName: netDxf.Entities.MText.Style
- uid: netDxf.Entities.MText.Position*
  commentId: Overload:netDxf.Entities.MText.Position
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_Position
  name: Position
  nameWithType: MText.Position
  fullName: netDxf.Entities.MText.Position
- uid: netDxf.Entities.MText.Value*
  commentId: Overload:netDxf.Entities.MText.Value
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_Value
  name: Value
  nameWithType: MText.Value
  fullName: netDxf.Entities.MText.Value
- uid: netDxf.Entities.MText.WriteFraction*
  commentId: Overload:netDxf.Entities.MText.WriteFraction
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_WriteFraction_System_String_System_String_netDxf_Units_FractionFormatType_
  name: WriteFraction
  nameWithType: MText.WriteFraction
  fullName: netDxf.Entities.MText.WriteFraction
- uid: netDxf.Units.FractionFormatType
  commentId: T:netDxf.Units.FractionFormatType
  parent: netDxf.Units
  href: netDxf.Units.FractionFormatType.html
  name: FractionFormatType
  nameWithType: FractionFormatType
  fullName: netDxf.Units.FractionFormatType
- uid: netDxf.Units
  commentId: N:netDxf.Units
  href: netDxf.html
  name: netDxf.Units
  nameWithType: netDxf.Units
  fullName: netDxf.Units
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Units
    name: Units
    href: netDxf.Units.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Units
    name: Units
    href: netDxf.Units.html
- uid: netDxf.Entities.MTextFormattingOptions
  commentId: T:netDxf.Entities.MTextFormattingOptions
  parent: netDxf.Entities
  href: netDxf.Entities.MTextFormattingOptions.html
  name: MTextFormattingOptions
  nameWithType: MTextFormattingOptions
  fullName: netDxf.Entities.MTextFormattingOptions
- uid: netDxf.Entities.MText.Write*
  commentId: Overload:netDxf.Entities.MText.Write
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_Write_System_String_
  name: Write
  nameWithType: MText.Write
  fullName: netDxf.Entities.MText.Write
- uid: netDxf.Entities.MText.EndParagraph*
  commentId: Overload:netDxf.Entities.MText.EndParagraph
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_EndParagraph
  name: EndParagraph
  nameWithType: MText.EndParagraph
  fullName: netDxf.Entities.MText.EndParagraph
- uid: netDxf.Entities.MText.StartParagraph*
  commentId: Overload:netDxf.Entities.MText.StartParagraph
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_StartParagraph
  name: StartParagraph
  nameWithType: MText.StartParagraph
  fullName: netDxf.Entities.MText.StartParagraph
- uid: netDxf.Entities.MTextParagraphOptions
  commentId: T:netDxf.Entities.MTextParagraphOptions
  parent: netDxf.Entities
  href: netDxf.Entities.MTextParagraphOptions.html
  name: MTextParagraphOptions
  nameWithType: MTextParagraphOptions
  fullName: netDxf.Entities.MTextParagraphOptions
- uid: netDxf.Entities.MText.PlainText*
  commentId: Overload:netDxf.Entities.MText.PlainText
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_PlainText
  name: PlainText
  nameWithType: MText.PlainText
  fullName: netDxf.Entities.MText.PlainText
- uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  commentId: M:netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  name: TransformBy(Matrix3, Vector3)
  nameWithType: EntityObject.TransformBy(Matrix3, Vector3)
  fullName: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3, netDxf.Vector3)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  - name: (
  - uid: netDxf.Matrix3
    name: Matrix3
    href: netDxf.Matrix3.html
  - name: ','
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  - name: (
  - uid: netDxf.Matrix3
    name: Matrix3
    href: netDxf.Matrix3.html
  - name: ','
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: netDxf.Entities.MText.TransformBy*
  commentId: Overload:netDxf.Entities.MText.TransformBy
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  name: TransformBy
  nameWithType: MText.TransformBy
  fullName: netDxf.Entities.MText.TransformBy
- uid: netDxf.Matrix3
  commentId: T:netDxf.Matrix3
  parent: netDxf
  href: netDxf.Matrix3.html
  name: Matrix3
  nameWithType: Matrix3
  fullName: netDxf.Matrix3
- uid: netDxf.Entities.EntityObject.Clone
  commentId: M:netDxf.Entities.EntityObject.Clone
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  name: Clone()
  nameWithType: EntityObject.Clone()
  fullName: netDxf.Entities.EntityObject.Clone()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.Clone
    name: Clone
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.Clone
    name: Clone
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  - name: (
  - name: )
- uid: netDxf.Entities.MText.Clone*
  commentId: Overload:netDxf.Entities.MText.Clone
  href: netDxf.Entities.MText.html#netDxf_Entities_MText_Clone
  name: Clone
  nameWithType: MText.Clone
  fullName: netDxf.Entities.MText.Clone
