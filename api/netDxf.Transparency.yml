### YamlMime:ManagedReference
items:
- uid: netDxf.Transparency
  commentId: T:netDxf.Transparency
  id: Transparency
  parent: netDxf
  children:
  - netDxf.Transparency.#ctor
  - netDxf.Transparency.#ctor(System.Int16)
  - netDxf.Transparency.ByBlock
  - netDxf.Transparency.ByLayer
  - netDxf.Transparency.Clone
  - netDxf.Transparency.Equals(netDxf.Transparency)
  - netDxf.Transparency.FromAlphaValue(System.Int32)
  - netDxf.Transparency.FromCadIndex(System.Int16)
  - netDxf.Transparency.IsByBlock
  - netDxf.Transparency.IsByLayer
  - netDxf.Transparency.ToAlphaValue(netDxf.Transparency)
  - netDxf.Transparency.ToString
  - netDxf.Transparency.Value
  langs:
  - csharp
  - vb
  name: Transparency
  nameWithType: Transparency
  fullName: netDxf.Transparency
  type: Class
  source:
    id: Transparency
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 37
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Represents the transparency of a layer or an entity.
  remarks: >-
    When the transparency of an entity is ByLayer the code 440 will not appear in the dxf,

    but for comparison purposes the ByLayer transparency is assigned a value of -1.
  example: []
  syntax:
    content: 'public class Transparency : ICloneable, IEquatable<Transparency>'
    content.vb: Public Class Transparency Implements ICloneable, IEquatable(Of Transparency)
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.IEquatable{netDxf.Transparency}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Transparency.ByLayer
  commentId: P:netDxf.Transparency.ByLayer
  id: ByLayer
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: ByLayer
  nameWithType: Transparency.ByLayer
  fullName: netDxf.Transparency.ByLayer
  type: Property
  source:
    id: ByLayer
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 52
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the ByLayer transparency.
  example: []
  syntax:
    content: public static Transparency ByLayer { get; }
    parameters: []
    return:
      type: netDxf.Transparency
    content.vb: Public Shared ReadOnly Property ByLayer As Transparency
  overload: netDxf.Transparency.ByLayer*
- uid: netDxf.Transparency.ByBlock
  commentId: P:netDxf.Transparency.ByBlock
  id: ByBlock
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: ByBlock
  nameWithType: Transparency.ByBlock
  fullName: netDxf.Transparency.ByBlock
  type: Property
  source:
    id: ByBlock
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 60
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the ByBlock transparency.
  example: []
  syntax:
    content: public static Transparency ByBlock { get; }
    parameters: []
    return:
      type: netDxf.Transparency
    content.vb: Public Shared ReadOnly Property ByBlock As Transparency
  overload: netDxf.Transparency.ByBlock*
- uid: netDxf.Transparency.#ctor
  commentId: M:netDxf.Transparency.#ctor
  id: '#ctor'
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: Transparency()
  nameWithType: Transparency.Transparency()
  fullName: netDxf.Transparency.Transparency()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 72
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>Transparency</code> class.
  example: []
  syntax:
    content: public Transparency()
    content.vb: Public Sub New()
  overload: netDxf.Transparency.#ctor*
  nameWithType.vb: Transparency.New()
  fullName.vb: netDxf.Transparency.New()
  name.vb: New()
- uid: netDxf.Transparency.#ctor(System.Int16)
  commentId: M:netDxf.Transparency.#ctor(System.Int16)
  id: '#ctor(System.Int16)'
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: Transparency(short)
  nameWithType: Transparency.Transparency(short)
  fullName: netDxf.Transparency.Transparency(short)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 84
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>Transparency</code> class.
  remarks: Accepted transparency values range from 0 (opaque) to 90 (almost transparent), the reserved values -1 and 100 represents ByLayer and ByBlock transparency.
  example: []
  syntax:
    content: public Transparency(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Alpha value range from 0 to 90.
    content.vb: Public Sub New(value As Short)
  overload: netDxf.Transparency.#ctor*
  nameWithType.vb: Transparency.New(Short)
  fullName.vb: netDxf.Transparency.New(Short)
  name.vb: New(Short)
- uid: netDxf.Transparency.IsByLayer
  commentId: P:netDxf.Transparency.IsByLayer
  id: IsByLayer
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: IsByLayer
  nameWithType: Transparency.IsByLayer
  fullName: netDxf.Transparency.IsByLayer
  type: Property
  source:
    id: IsByLayer
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 100
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Defines if the transparency is defined by layer.
  example: []
  syntax:
    content: public bool IsByLayer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsByLayer As Boolean
  overload: netDxf.Transparency.IsByLayer*
- uid: netDxf.Transparency.IsByBlock
  commentId: P:netDxf.Transparency.IsByBlock
  id: IsByBlock
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: IsByBlock
  nameWithType: Transparency.IsByBlock
  fullName: netDxf.Transparency.IsByBlock
  type: Property
  source:
    id: IsByBlock
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 108
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Defines if the transparency is defined by block.
  example: []
  syntax:
    content: public bool IsByBlock { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsByBlock As Boolean
  overload: netDxf.Transparency.IsByBlock*
- uid: netDxf.Transparency.Value
  commentId: P:netDxf.Transparency.Value
  id: Value
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Transparency.Value
  fullName: netDxf.Transparency.Value
  type: Property
  source:
    id: Value
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 119
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets or sets the transparency value range from 0 to 90.
  remarks: Accepted transparency values range from 0 to 90, the reserved values -1 and 100 represents ByLayer and ByBlock.
  example: []
  syntax:
    content: public short Value { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Property Value As Short
  overload: netDxf.Transparency.Value*
- uid: netDxf.Transparency.ToAlphaValue(netDxf.Transparency)
  commentId: M:netDxf.Transparency.ToAlphaValue(netDxf.Transparency)
  id: ToAlphaValue(netDxf.Transparency)
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: ToAlphaValue(Transparency)
  nameWithType: Transparency.ToAlphaValue(Transparency)
  fullName: netDxf.Transparency.ToAlphaValue(netDxf.Transparency)
  type: Method
  source:
    id: ToAlphaValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 141
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the transparency value from a <xref href="netDxf.Transparency?text=transparency" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static int ToAlphaValue(Transparency transparency)
    parameters:
    - id: transparency
      type: netDxf.Transparency
      description: A <xref href="netDxf.Transparency?text=transparency" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Int32
      description: A transparency value.
    content.vb: Public Shared Function ToAlphaValue(transparency As Transparency) As Integer
  overload: netDxf.Transparency.ToAlphaValue*
- uid: netDxf.Transparency.FromAlphaValue(System.Int32)
  commentId: M:netDxf.Transparency.FromAlphaValue(System.Int32)
  id: FromAlphaValue(System.Int32)
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: FromAlphaValue(int)
  nameWithType: Transparency.FromAlphaValue(int)
  fullName: netDxf.Transparency.FromAlphaValue(int)
  type: Method
  source:
    id: FromAlphaValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 158
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the <xref href="netDxf.Transparency?text=transparency" data-throw-if-not-resolved="false"></xref> object from a transparency value.
  example: []
  syntax:
    content: public static Transparency FromAlphaValue(int value)
    parameters:
    - id: value
      type: System.Int32
      description: A transparency value.
    return:
      type: netDxf.Transparency
      description: A <xref href="netDxf.Transparency?text=transparency" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function FromAlphaValue(value As Integer) As Transparency
  overload: netDxf.Transparency.FromAlphaValue*
  nameWithType.vb: Transparency.FromAlphaValue(Integer)
  fullName.vb: netDxf.Transparency.FromAlphaValue(Integer)
  name.vb: FromAlphaValue(Integer)
- uid: netDxf.Transparency.FromCadIndex(System.Int16)
  commentId: M:netDxf.Transparency.FromCadIndex(System.Int16)
  id: FromCadIndex(System.Int16)
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: FromCadIndex(short)
  nameWithType: Transparency.FromCadIndex(short)
  fullName: netDxf.Transparency.FromCadIndex(short)
  type: Method
  source:
    id: FromCadIndex
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 165
  assemblies:
  - netDxf
  namespace: netDxf
  syntax:
    content: public static Transparency FromCadIndex(short alpha)
    parameters:
    - id: alpha
      type: System.Int16
    return:
      type: netDxf.Transparency
    content.vb: Public Shared Function FromCadIndex(alpha As Short) As Transparency
  overload: netDxf.Transparency.FromCadIndex*
  nameWithType.vb: Transparency.FromCadIndex(Short)
  fullName.vb: netDxf.Transparency.FromCadIndex(Short)
  name.vb: FromCadIndex(Short)
- uid: netDxf.Transparency.Clone
  commentId: M:netDxf.Transparency.Clone
  id: Clone
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Transparency.Clone()
  fullName: netDxf.Transparency.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 195
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Creates a new transparency that is a copy of the current instance.
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: A new transparency that is a copy of this instance.
    content.vb: Public Function Clone() As Object
  overload: netDxf.Transparency.Clone*
  implements:
  - System.ICloneable.Clone
- uid: netDxf.Transparency.Equals(netDxf.Transparency)
  commentId: M:netDxf.Transparency.Equals(netDxf.Transparency)
  id: Equals(netDxf.Transparency)
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: Equals(Transparency)
  nameWithType: Transparency.Equals(Transparency)
  fullName: netDxf.Transparency.Equals(netDxf.Transparency)
  type: Method
  source:
    id: Equals
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 209
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Check if the components of two transparencies are equal.
  example: []
  syntax:
    content: public bool Equals(Transparency other)
    parameters:
    - id: other
      type: netDxf.Transparency
      description: Another transparency to compare to.
    return:
      type: System.Boolean
      description: True if their indexes are equal or false in any other case.
    content.vb: Public Function Equals(other As Transparency) As Boolean
  overload: netDxf.Transparency.Equals*
  implements:
  - System.IEquatable{netDxf.Transparency}.Equals(netDxf.Transparency)
- uid: netDxf.Transparency.ToString
  commentId: M:netDxf.Transparency.ToString
  id: ToString
  parent: netDxf.Transparency
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Transparency.ToString()
  fullName: netDxf.Transparency.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Transparency.cs
    startLine: 227
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Converts the value of this instance to its equivalent string representation.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: netDxf.Transparency.ToString*
references:
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IEquatable{netDxf.Transparency}
  commentId: T:System.IEquatable{netDxf.Transparency}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Transparency>
  nameWithType: IEquatable<Transparency>
  fullName: System.IEquatable<netDxf.Transparency>
  nameWithType.vb: IEquatable(Of Transparency)
  fullName.vb: System.IEquatable(Of netDxf.Transparency)
  name.vb: IEquatable(Of Transparency)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: netDxf.Transparency
    name: Transparency
    href: netDxf.Transparency.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Transparency
    name: Transparency
    href: netDxf.Transparency.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Transparency.ByLayer*
  commentId: Overload:netDxf.Transparency.ByLayer
  href: netDxf.Transparency.html#netDxf_Transparency_ByLayer
  name: ByLayer
  nameWithType: Transparency.ByLayer
  fullName: netDxf.Transparency.ByLayer
- uid: netDxf.Transparency
  commentId: T:netDxf.Transparency
  parent: netDxf
  href: netDxf.Transparency.html
  name: Transparency
  nameWithType: Transparency
  fullName: netDxf.Transparency
- uid: netDxf.Transparency.ByBlock*
  commentId: Overload:netDxf.Transparency.ByBlock
  href: netDxf.Transparency.html#netDxf_Transparency_ByBlock
  name: ByBlock
  nameWithType: Transparency.ByBlock
  fullName: netDxf.Transparency.ByBlock
- uid: netDxf.Transparency.#ctor*
  commentId: Overload:netDxf.Transparency.#ctor
  href: netDxf.Transparency.html#netDxf_Transparency__ctor
  name: Transparency
  nameWithType: Transparency.Transparency
  fullName: netDxf.Transparency.Transparency
  nameWithType.vb: Transparency.New
  fullName.vb: netDxf.Transparency.New
  name.vb: New
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: netDxf.Transparency.IsByLayer*
  commentId: Overload:netDxf.Transparency.IsByLayer
  href: netDxf.Transparency.html#netDxf_Transparency_IsByLayer
  name: IsByLayer
  nameWithType: Transparency.IsByLayer
  fullName: netDxf.Transparency.IsByLayer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Transparency.IsByBlock*
  commentId: Overload:netDxf.Transparency.IsByBlock
  href: netDxf.Transparency.html#netDxf_Transparency_IsByBlock
  name: IsByBlock
  nameWithType: Transparency.IsByBlock
  fullName: netDxf.Transparency.IsByBlock
- uid: netDxf.Transparency.Value*
  commentId: Overload:netDxf.Transparency.Value
  href: netDxf.Transparency.html#netDxf_Transparency_Value
  name: Value
  nameWithType: Transparency.Value
  fullName: netDxf.Transparency.Value
- uid: netDxf.Transparency.ToAlphaValue*
  commentId: Overload:netDxf.Transparency.ToAlphaValue
  href: netDxf.Transparency.html#netDxf_Transparency_ToAlphaValue_netDxf_Transparency_
  name: ToAlphaValue
  nameWithType: Transparency.ToAlphaValue
  fullName: netDxf.Transparency.ToAlphaValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.Transparency.FromAlphaValue*
  commentId: Overload:netDxf.Transparency.FromAlphaValue
  href: netDxf.Transparency.html#netDxf_Transparency_FromAlphaValue_System_Int32_
  name: FromAlphaValue
  nameWithType: Transparency.FromAlphaValue
  fullName: netDxf.Transparency.FromAlphaValue
- uid: netDxf.Transparency.FromCadIndex*
  commentId: Overload:netDxf.Transparency.FromCadIndex
  href: netDxf.Transparency.html#netDxf_Transparency_FromCadIndex_System_Int16_
  name: FromCadIndex
  nameWithType: Transparency.FromCadIndex
  fullName: netDxf.Transparency.FromCadIndex
- uid: netDxf.Transparency.Clone*
  commentId: Overload:netDxf.Transparency.Clone
  href: netDxf.Transparency.html#netDxf_Transparency_Clone
  name: Clone
  nameWithType: Transparency.Clone
  fullName: netDxf.Transparency.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: netDxf.Transparency.Equals*
  commentId: Overload:netDxf.Transparency.Equals
  href: netDxf.Transparency.html#netDxf_Transparency_Equals_netDxf_Transparency_
  name: Equals
  nameWithType: Transparency.Equals
  fullName: netDxf.Transparency.Equals
- uid: System.IEquatable{netDxf.Transparency}.Equals(netDxf.Transparency)
  commentId: M:System.IEquatable{netDxf.Transparency}.Equals(netDxf.Transparency)
  parent: System.IEquatable{netDxf.Transparency}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Transparency)
  nameWithType: IEquatable<Transparency>.Equals(Transparency)
  fullName: System.IEquatable<netDxf.Transparency>.Equals(netDxf.Transparency)
  nameWithType.vb: IEquatable(Of Transparency).Equals(Transparency)
  fullName.vb: System.IEquatable(Of netDxf.Transparency).Equals(netDxf.Transparency)
  spec.csharp:
  - uid: System.IEquatable{netDxf.Transparency}.Equals(netDxf.Transparency)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: netDxf.Transparency
    name: Transparency
    href: netDxf.Transparency.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{netDxf.Transparency}.Equals(netDxf.Transparency)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: netDxf.Transparency
    name: Transparency
    href: netDxf.Transparency.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: netDxf.Transparency.ToString*
  commentId: Overload:netDxf.Transparency.ToString
  href: netDxf.Transparency.html#netDxf_Transparency_ToString
  name: ToString
  nameWithType: Transparency.ToString
  fullName: netDxf.Transparency.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
