### YamlMime:ManagedReference
items:
- uid: netDxf.BezierCurve
  commentId: T:netDxf.BezierCurve
  id: BezierCurve
  parent: netDxf
  children:
  - netDxf.BezierCurve.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector3},System.Int32)
  - netDxf.BezierCurve.CalculatePoint(System.Double)
  - netDxf.BezierCurve.CalculateTangent(System.Double)
  - netDxf.BezierCurve.ControlPoints
  - netDxf.BezierCurve.Degree
  - netDxf.BezierCurve.controlPoints
  - netDxf.BezierCurve.degree
  langs:
  - csharp
  - vb
  name: BezierCurve
  nameWithType: BezierCurve
  fullName: netDxf.BezierCurve
  type: Class
  source:
    id: BezierCurve
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurve.cs
    startLine: 34
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Represent a bezier curve.
  example: []
  syntax:
    content: public abstract class BezierCurve
    content.vb: Public MustInherit Class BezierCurve
  inheritance:
  - System.Object
  derivedClasses:
  - netDxf.BezierCurveCubic
  - netDxf.BezierCurveQuadratic
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.BezierCurve.controlPoints
  commentId: F:netDxf.BezierCurve.controlPoints
  id: controlPoints
  parent: netDxf.BezierCurve
  langs:
  - csharp
  - vb
  name: controlPoints
  nameWithType: BezierCurve.controlPoints
  fullName: netDxf.BezierCurve.controlPoints
  type: Field
  source:
    id: controlPoints
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurve.cs
    startLine: 38
  assemblies:
  - netDxf
  namespace: netDxf
  syntax:
    content: protected readonly Vector3[] controlPoints
    return:
      type: netDxf.Vector3[]
    content.vb: Protected ReadOnly controlPoints As Vector3()
- uid: netDxf.BezierCurve.degree
  commentId: F:netDxf.BezierCurve.degree
  id: degree
  parent: netDxf.BezierCurve
  langs:
  - csharp
  - vb
  name: degree
  nameWithType: BezierCurve.degree
  fullName: netDxf.BezierCurve.degree
  type: Field
  source:
    id: degree
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurve.cs
    startLine: 39
  assemblies:
  - netDxf
  namespace: netDxf
  syntax:
    content: protected readonly int degree
    return:
      type: System.Int32
    content.vb: Protected ReadOnly degree As Integer
- uid: netDxf.BezierCurve.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector3},System.Int32)
  commentId: M:netDxf.BezierCurve.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector3},System.Int32)
  id: '#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector3},System.Int32)'
  parent: netDxf.BezierCurve
  langs:
  - csharp
  - vb
  name: BezierCurve(IEnumerable<Vector3>, int)
  nameWithType: BezierCurve.BezierCurve(IEnumerable<Vector3>, int)
  fullName: netDxf.BezierCurve.BezierCurve(System.Collections.Generic.IEnumerable<netDxf.Vector3>, int)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurve.cs
    startLine: 53
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>BezierCurve</code> class.
  remarks: The curve degree must be equal to the number of control points minus one.
  example: []
  syntax:
    content: protected BezierCurve(IEnumerable<Vector3> controlPoints, int degree)
    parameters:
    - id: controlPoints
      type: System.Collections.Generic.IEnumerable{netDxf.Vector3}
      description: A list of control points.
    - id: degree
      type: System.Int32
      description: Bezier curve degree.
    content.vb: Protected Sub New(controlPoints As IEnumerable(Of Vector3), degree As Integer)
  overload: netDxf.BezierCurve.#ctor*
  nameWithType.vb: BezierCurve.New(IEnumerable(Of Vector3), Integer)
  fullName.vb: netDxf.BezierCurve.New(System.Collections.Generic.IEnumerable(Of netDxf.Vector3), Integer)
  name.vb: New(IEnumerable(Of Vector3), Integer)
- uid: netDxf.BezierCurve.ControlPoints
  commentId: P:netDxf.BezierCurve.ControlPoints
  id: ControlPoints
  parent: netDxf.BezierCurve
  langs:
  - csharp
  - vb
  name: ControlPoints
  nameWithType: BezierCurve.ControlPoints
  fullName: netDxf.BezierCurve.ControlPoints
  type: Property
  source:
    id: ControlPoints
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurve.cs
    startLine: 80
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the control points.
  example: []
  syntax:
    content: public Vector3[] ControlPoints { get; }
    parameters: []
    return:
      type: netDxf.Vector3[]
    content.vb: Public ReadOnly Property ControlPoints As Vector3()
  overload: netDxf.BezierCurve.ControlPoints*
- uid: netDxf.BezierCurve.Degree
  commentId: P:netDxf.BezierCurve.Degree
  id: Degree
  parent: netDxf.BezierCurve
  langs:
  - csharp
  - vb
  name: Degree
  nameWithType: BezierCurve.Degree
  fullName: netDxf.BezierCurve.Degree
  type: Property
  source:
    id: Degree
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurve.cs
    startLine: 88
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the bezier curve degree.
  example: []
  syntax:
    content: public int Degree { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Degree As Integer
  overload: netDxf.BezierCurve.Degree*
- uid: netDxf.BezierCurve.CalculatePoint(System.Double)
  commentId: M:netDxf.BezierCurve.CalculatePoint(System.Double)
  id: CalculatePoint(System.Double)
  parent: netDxf.BezierCurve
  langs:
  - csharp
  - vb
  name: CalculatePoint(double)
  nameWithType: BezierCurve.CalculatePoint(double)
  fullName: netDxf.BezierCurve.CalculatePoint(double)
  type: Method
  source:
    id: CalculatePoint
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurve.cs
    startLine: 102
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Obtains a point along the curve at parameter t.
  example: []
  syntax:
    content: public abstract Vector3 CalculatePoint(double t)
    parameters:
    - id: t
      type: System.Double
      description: Parameter t, between 0.0 and 1.0.
    return:
      type: netDxf.Vector3
      description: A point along the curve.
    content.vb: Public MustOverride Function CalculatePoint(t As Double) As Vector3
  overload: netDxf.BezierCurve.CalculatePoint*
  nameWithType.vb: BezierCurve.CalculatePoint(Double)
  fullName.vb: netDxf.BezierCurve.CalculatePoint(Double)
  name.vb: CalculatePoint(Double)
- uid: netDxf.BezierCurve.CalculateTangent(System.Double)
  commentId: M:netDxf.BezierCurve.CalculateTangent(System.Double)
  id: CalculateTangent(System.Double)
  parent: netDxf.BezierCurve
  langs:
  - csharp
  - vb
  name: CalculateTangent(double)
  nameWithType: BezierCurve.CalculateTangent(double)
  fullName: netDxf.BezierCurve.CalculateTangent(double)
  type: Method
  source:
    id: CalculateTangent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurve.cs
    startLine: 109
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Calculates the tangent vector at parameter t.
  example: []
  syntax:
    content: public abstract Vector3 CalculateTangent(double t)
    parameters:
    - id: t
      type: System.Double
      description: Parameter t, between 0.0 and 1.0.
    return:
      type: netDxf.Vector3
      description: A normalized tangent vector.
    content.vb: Public MustOverride Function CalculateTangent(t As Double) As Vector3
  overload: netDxf.BezierCurve.CalculateTangent*
  nameWithType.vb: BezierCurve.CalculateTangent(Double)
  fullName.vb: netDxf.BezierCurve.CalculateTangent(Double)
  name.vb: CalculateTangent(Double)
references:
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.Vector3[]
  isExternal: true
  href: netDxf.Vector3.html
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: netDxf.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: netDxf.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.BezierCurve.#ctor*
  commentId: Overload:netDxf.BezierCurve.#ctor
  href: netDxf.BezierCurve.html#netDxf_BezierCurve__ctor_System_Collections_Generic_IEnumerable_netDxf_Vector3__System_Int32_
  name: BezierCurve
  nameWithType: BezierCurve.BezierCurve
  fullName: netDxf.BezierCurve.BezierCurve
  nameWithType.vb: BezierCurve.New
  fullName.vb: netDxf.BezierCurve.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{netDxf.Vector3}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3>
  nameWithType: IEnumerable<Vector3>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Vector3>
  nameWithType.vb: IEnumerable(Of Vector3)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Vector3)
  name.vb: IEnumerable(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.BezierCurve.ControlPoints*
  commentId: Overload:netDxf.BezierCurve.ControlPoints
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_ControlPoints
  name: ControlPoints
  nameWithType: BezierCurve.ControlPoints
  fullName: netDxf.BezierCurve.ControlPoints
- uid: netDxf.BezierCurve.Degree*
  commentId: Overload:netDxf.BezierCurve.Degree
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_Degree
  name: Degree
  nameWithType: BezierCurve.Degree
  fullName: netDxf.BezierCurve.Degree
- uid: netDxf.BezierCurve.CalculatePoint*
  commentId: Overload:netDxf.BezierCurve.CalculatePoint
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_CalculatePoint_System_Double_
  name: CalculatePoint
  nameWithType: BezierCurve.CalculatePoint
  fullName: netDxf.BezierCurve.CalculatePoint
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  href: netDxf.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: netDxf.BezierCurve.CalculateTangent*
  commentId: Overload:netDxf.BezierCurve.CalculateTangent
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_CalculateTangent_System_Double_
  name: CalculateTangent
  nameWithType: BezierCurve.CalculateTangent
  fullName: netDxf.BezierCurve.CalculateTangent
