### YamlMime:ManagedReference
items:
- uid: netDxf.Tables.TextStyle
  commentId: T:netDxf.Tables.TextStyle
  id: TextStyle
  parent: netDxf.Tables
  children:
  - netDxf.Tables.TextStyle.#ctor(System.String,System.String)
  - netDxf.Tables.TextStyle.#ctor(System.String,System.String,netDxf.Tables.FontStyle)
  - netDxf.Tables.TextStyle.BigFont
  - netDxf.Tables.TextStyle.Clone
  - netDxf.Tables.TextStyle.Clone(System.String)
  - netDxf.Tables.TextStyle.Default
  - netDxf.Tables.TextStyle.DefaultFont
  - netDxf.Tables.TextStyle.DefaultName
  - netDxf.Tables.TextStyle.FontFamilyName
  - netDxf.Tables.TextStyle.FontFile
  - netDxf.Tables.TextStyle.FontStyle
  - netDxf.Tables.TextStyle.GetReferences
  - netDxf.Tables.TextStyle.HasReferences
  - netDxf.Tables.TextStyle.Height
  - netDxf.Tables.TextStyle.IsBackward
  - netDxf.Tables.TextStyle.IsUpsideDown
  - netDxf.Tables.TextStyle.IsVertical
  - netDxf.Tables.TextStyle.ObliqueAngle
  - netDxf.Tables.TextStyle.Owner
  - netDxf.Tables.TextStyle.TrueTypeFontFamilyName(System.String)
  - netDxf.Tables.TextStyle.WidthFactor
  langs:
  - csharp
  - vb
  name: TextStyle
  nameWithType: TextStyle
  fullName: netDxf.Tables.TextStyle
  type: Class
  source:
    id: TextStyle
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Represents a text style.
  example: []
  syntax:
    content: 'public class TextStyle : TableObject, ICloneable, IComparable, IComparable<TableObject>, IEquatable<TableObject>'
    content.vb: Public Class TextStyle Inherits TableObject Implements ICloneable, IComparable, IComparable(Of TableObject), IEquatable(Of TableObject)
  inheritance:
  - System.Object
  - netDxf.DxfObject
  - netDxf.Tables.TableObject
  implements:
  - System.ICloneable
  - System.IComparable
  - System.IComparable{netDxf.Tables.TableObject}
  - System.IEquatable{netDxf.Tables.TableObject}
  inheritedMembers:
  - netDxf.Tables.TableObject.NameChanged
  - netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  - netDxf.Tables.TableObject.Name
  - netDxf.Tables.TableObject.IsReserved
  - netDxf.Tables.TableObject.InvalidCharacters
  - netDxf.Tables.TableObject.IsValidName(System.String)
  - netDxf.Tables.TableObject.ToString
  - netDxf.Tables.TableObject.CompareTo(System.Object)
  - netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  - netDxf.Tables.TableObject.GetHashCode
  - netDxf.Tables.TableObject.Equals(System.Object)
  - netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.XData
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Tables.TextStyle.DefaultName
  commentId: F:netDxf.Tables.TextStyle.DefaultName
  id: DefaultName
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: DefaultName
  nameWithType: TextStyle.DefaultName
  fullName: netDxf.Tables.TextStyle.DefaultName
  type: Field
  source:
    id: DefaultName
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 58
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Default text style name.
  example: []
  syntax:
    content: public const string DefaultName = "Standard"
    return:
      type: System.String
    content.vb: Public Const DefaultName As String = "Standard"
- uid: netDxf.Tables.TextStyle.DefaultFont
  commentId: F:netDxf.Tables.TextStyle.DefaultFont
  id: DefaultFont
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: DefaultFont
  nameWithType: TextStyle.DefaultFont
  fullName: netDxf.Tables.TextStyle.DefaultFont
  type: Field
  source:
    id: DefaultFont
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 63
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Default text style font.
  example: []
  syntax:
    content: public const string DefaultFont = "simplex.shx"
    return:
      type: System.String
    content.vb: Public Const DefaultFont As String = "simplex.shx"
- uid: netDxf.Tables.TextStyle.Default
  commentId: P:netDxf.Tables.TextStyle.Default
  id: Default
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: TextStyle.Default
  fullName: netDxf.Tables.TextStyle.Default
  type: Property
  source:
    id: Default
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 68
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets the default text style.
  example: []
  syntax:
    content: public static TextStyle Default { get; }
    parameters: []
    return:
      type: netDxf.Tables.TextStyle
    content.vb: Public Shared ReadOnly Property [Default] As TextStyle
  overload: netDxf.Tables.TextStyle.Default*
- uid: netDxf.Tables.TextStyle.#ctor(System.String,System.String)
  commentId: M:netDxf.Tables.TextStyle.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: TextStyle(string, string)
  nameWithType: TextStyle.TextStyle(string, string)
  fullName: netDxf.Tables.TextStyle.TextStyle(string, string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 82
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Initializes a new instance of the <code>TextStyle</code> class.
  example: []
  syntax:
    content: public TextStyle(string name, string font)
    parameters:
    - id: name
      type: System.String
      description: Text style name.
    - id: font
      type: System.String
      description: Text style font file name with full or relative path.
    content.vb: Public Sub New(name As String, font As String)
  overload: netDxf.Tables.TextStyle.#ctor*
  nameWithType.vb: TextStyle.New(String, String)
  fullName.vb: netDxf.Tables.TextStyle.New(String, String)
  name.vb: New(String, String)
- uid: netDxf.Tables.TextStyle.#ctor(System.String,System.String,netDxf.Tables.FontStyle)
  commentId: M:netDxf.Tables.TextStyle.#ctor(System.String,System.String,netDxf.Tables.FontStyle)
  id: '#ctor(System.String,System.String,netDxf.Tables.FontStyle)'
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: TextStyle(string, string, FontStyle)
  nameWithType: TextStyle.TextStyle(string, string, FontStyle)
  fullName: netDxf.Tables.TextStyle.TextStyle(string, string, netDxf.Tables.FontStyle)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 132
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Initializes a new instance of the <code>TextStyle</code> class exclusively to be used with true type fonts.
  remarks: This constructor is to be use only with true type fonts.
  example: []
  syntax:
    content: public TextStyle(string name, string fontFamily, FontStyle fontStyle)
    parameters:
    - id: name
      type: System.String
      description: Text style name.
    - id: fontFamily
      type: System.String
      description: True type font family name.
    - id: fontStyle
      type: netDxf.Tables.FontStyle
      description: True type font style.
    content.vb: Public Sub New(name As String, fontFamily As String, fontStyle As FontStyle)
  overload: netDxf.Tables.TextStyle.#ctor*
  nameWithType.vb: TextStyle.New(String, String, FontStyle)
  fullName.vb: netDxf.Tables.TextStyle.New(String, String, netDxf.Tables.FontStyle)
  name.vb: New(String, String, FontStyle)
- uid: netDxf.Tables.TextStyle.FontFile
  commentId: P:netDxf.Tables.TextStyle.FontFile
  id: FontFile
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: FontFile
  nameWithType: TextStyle.FontFile
  fullName: netDxf.Tables.TextStyle.FontFile
  type: Property
  source:
    id: FontFile
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 176
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets the text style font file name.
  remarks: >-
    When this value is used for true type fonts should be present in the Font system folder.<br />

    When the style does not contain any information for the file the font information will be saved in the extended data when saved to a DXF,

    this is only applicable for true type fonts.
  example: []
  syntax:
    content: public string FontFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FontFile As String
  overload: netDxf.Tables.TextStyle.FontFile*
- uid: netDxf.Tables.TextStyle.BigFont
  commentId: P:netDxf.Tables.TextStyle.BigFont
  id: BigFont
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: BigFont
  nameWithType: TextStyle.BigFont
  fullName: netDxf.Tables.TextStyle.BigFont
  type: Property
  source:
    id: BigFont
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 203
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets an Asian-language Big Font file.
  remarks: Only ACAD compiled shape SHX fonts are valid for creating Big Fonts.
  example: []
  syntax:
    content: public string BigFont { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BigFont As String
  overload: netDxf.Tables.TextStyle.BigFont*
- uid: netDxf.Tables.TextStyle.FontFamilyName
  commentId: P:netDxf.Tables.TextStyle.FontFamilyName
  id: FontFamilyName
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: FontFamilyName
  nameWithType: TextStyle.FontFamilyName
  fullName: netDxf.Tables.TextStyle.FontFamilyName
  type: Property
  source:
    id: FontFamilyName
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 243
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets the true type font family name.
  remarks: >-
    When the font family name is manually specified the file font will not be used and it will be set to empty,

    the font style will also we set to FontStyle.Regular.

    In this case the font information will be stored in the style extended data when saved to a DXF.<br />

    This value is only applicable for true type fonts.
  example: []
  syntax:
    content: public string FontFamilyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FontFamilyName As String
  overload: netDxf.Tables.TextStyle.FontFamilyName*
- uid: netDxf.Tables.TextStyle.FontStyle
  commentId: P:netDxf.Tables.TextStyle.FontStyle
  id: FontStyle
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: FontStyle
  nameWithType: TextStyle.FontStyle
  fullName: netDxf.Tables.TextStyle.FontStyle
  type: Property
  source:
    id: FontStyle
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 266
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets the true type font style.
  remarks: >-
    The font style value is ignored and will always return FontStyle.Regular when a font file has been specified.<br />

    All styles may not be available for the current font family.
  example: []
  syntax:
    content: public FontStyle FontStyle { get; set; }
    parameters: []
    return:
      type: netDxf.Tables.FontStyle
    content.vb: Public Property FontStyle As FontStyle
  overload: netDxf.Tables.TextStyle.FontStyle*
- uid: netDxf.Tables.TextStyle.Height
  commentId: P:netDxf.Tables.TextStyle.Height
  id: Height
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: TextStyle.Height
  fullName: netDxf.Tables.TextStyle.Height
  type: Property
  source:
    id: Height
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 282
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets the text height.
  remarks: Fixed text height; 0 if not fixed.
  example: []
  syntax:
    content: public double Height { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Height As Double
  overload: netDxf.Tables.TextStyle.Height*
- uid: netDxf.Tables.TextStyle.WidthFactor
  commentId: P:netDxf.Tables.TextStyle.WidthFactor
  id: WidthFactor
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: WidthFactor
  nameWithType: TextStyle.WidthFactor
  fullName: netDxf.Tables.TextStyle.WidthFactor
  type: Property
  source:
    id: WidthFactor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 299
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets the text width factor.
  remarks: 'Valid values range from 0.01 to 100. Default: 1.0.'
  example: []
  syntax:
    content: public double WidthFactor { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property WidthFactor As Double
  overload: netDxf.Tables.TextStyle.WidthFactor*
- uid: netDxf.Tables.TextStyle.ObliqueAngle
  commentId: P:netDxf.Tables.TextStyle.ObliqueAngle
  id: ObliqueAngle
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: ObliqueAngle
  nameWithType: TextStyle.ObliqueAngle
  fullName: netDxf.Tables.TextStyle.ObliqueAngle
  type: Property
  source:
    id: ObliqueAngle
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 316
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets the font oblique angle in degrees.
  remarks: 'Valid values range from -85 to 85. Default: 0.0.'
  example: []
  syntax:
    content: public double ObliqueAngle { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ObliqueAngle As Double
  overload: netDxf.Tables.TextStyle.ObliqueAngle*
- uid: netDxf.Tables.TextStyle.IsVertical
  commentId: P:netDxf.Tables.TextStyle.IsVertical
  id: IsVertical
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: IsVertical
  nameWithType: TextStyle.IsVertical
  fullName: netDxf.Tables.TextStyle.IsVertical
  type: Property
  source:
    id: IsVertical
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 332
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets the text is vertical.
  example: []
  syntax:
    content: public bool IsVertical { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVertical As Boolean
  overload: netDxf.Tables.TextStyle.IsVertical*
- uid: netDxf.Tables.TextStyle.IsBackward
  commentId: P:netDxf.Tables.TextStyle.IsBackward
  id: IsBackward
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: IsBackward
  nameWithType: TextStyle.IsBackward
  fullName: netDxf.Tables.TextStyle.IsBackward
  type: Property
  source:
    id: IsBackward
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 341
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets if the text is backward (mirrored in X).
  example: []
  syntax:
    content: public bool IsBackward { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsBackward As Boolean
  overload: netDxf.Tables.TextStyle.IsBackward*
- uid: netDxf.Tables.TextStyle.IsUpsideDown
  commentId: P:netDxf.Tables.TextStyle.IsUpsideDown
  id: IsUpsideDown
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: IsUpsideDown
  nameWithType: TextStyle.IsUpsideDown
  fullName: netDxf.Tables.TextStyle.IsUpsideDown
  type: Property
  source:
    id: IsUpsideDown
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 350
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets or sets if the text is upside down (mirrored in Y).
  example: []
  syntax:
    content: public bool IsUpsideDown { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsUpsideDown As Boolean
  overload: netDxf.Tables.TextStyle.IsUpsideDown*
- uid: netDxf.Tables.TextStyle.Owner
  commentId: P:netDxf.Tables.TextStyle.Owner
  id: Owner
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: TextStyle.Owner
  fullName: netDxf.Tables.TextStyle.Owner
  type: Property
  source:
    id: Owner
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 359
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets the owner of the actual text style.
  example: []
  syntax:
    content: public TextStyles Owner { get; }
    parameters: []
    return:
      type: netDxf.Collections.TextStyles
    content.vb: Public Property Owner As TextStyles
  overload: netDxf.Tables.TextStyle.Owner*
- uid: netDxf.Tables.TextStyle.TrueTypeFontFamilyName(System.String)
  commentId: M:netDxf.Tables.TextStyle.TrueTypeFontFamilyName(System.String)
  id: TrueTypeFontFamilyName(System.String)
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: TrueTypeFontFamilyName(string)
  nameWithType: TextStyle.TrueTypeFontFamilyName(string)
  fullName: netDxf.Tables.TextStyle.TrueTypeFontFamilyName(string)
  type: Method
  source:
    id: TrueTypeFontFamilyName
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 377
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Find the font family name of an specified TTF font file. Only available for Net Framework 4.5 builds.
  remarks: This method will return an empty string if the specified font is not found in its path or the system font folder or if it is not a valid TTF font.
  example: []
  syntax:
    content: public static string TrueTypeFontFamilyName(string ttfFont)
    parameters:
    - id: ttfFont
      type: System.String
      description: TTF font file.
    return:
      type: System.String
      description: The font family name of the specified TTF font file.
    content.vb: Public Shared Function TrueTypeFontFamilyName(ttfFont As String) As String
  overload: netDxf.Tables.TextStyle.TrueTypeFontFamilyName*
  nameWithType.vb: TextStyle.TrueTypeFontFamilyName(String)
  fullName.vb: netDxf.Tables.TextStyle.TrueTypeFontFamilyName(String)
  name.vb: TrueTypeFontFamilyName(String)
- uid: netDxf.Tables.TextStyle.HasReferences
  commentId: M:netDxf.Tables.TextStyle.HasReferences
  id: HasReferences
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: HasReferences()
  nameWithType: TextStyle.HasReferences()
  fullName: netDxf.Tables.TextStyle.HasReferences()
  type: Method
  source:
    id: HasReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 427
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Checks if this instance has been referenced by other DxfObjects.
  remarks: This method returns the same value as the HasReferences method that can be found in the TableObjects class.
  example: []
  syntax:
    content: public override bool HasReferences()
    return:
      type: System.Boolean
      description: >-
        Returns true if this instance has been referenced by other DxfObjects, false otherwise.

        It will always return false if this instance does not belong to a document.
    content.vb: Public Overrides Function HasReferences() As Boolean
  overridden: netDxf.Tables.TableObject.HasReferences
  overload: netDxf.Tables.TextStyle.HasReferences*
- uid: netDxf.Tables.TextStyle.GetReferences
  commentId: M:netDxf.Tables.TextStyle.GetReferences
  id: GetReferences
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: GetReferences()
  nameWithType: TextStyle.GetReferences()
  fullName: netDxf.Tables.TextStyle.GetReferences()
  type: Method
  source:
    id: GetReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 442
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets the list of DxfObjects referenced by this instance.
  remarks: This method returns the same list as the GetReferences method that can be found in the TableObjects class.
  example: []
  syntax:
    content: public override List<DxfObjectReference> GetReferences()
    return:
      type: System.Collections.Generic.List{netDxf.DxfObjectReference}
      description: >-
        A list of DxfObjectReference that contains the DxfObject referenced by this instance and the number of times it does.

        It will return null if this instance does not belong to a document.
    content.vb: Public Overrides Function GetReferences() As List(Of DxfObjectReference)
  overridden: netDxf.Tables.TableObject.GetReferences
  overload: netDxf.Tables.TextStyle.GetReferences*
- uid: netDxf.Tables.TextStyle.Clone(System.String)
  commentId: M:netDxf.Tables.TextStyle.Clone(System.String)
  id: Clone(System.String)
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: Clone(string)
  nameWithType: TextStyle.Clone(string)
  fullName: netDxf.Tables.TextStyle.Clone(string)
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 452
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Creates a new TextStyle that is a copy of the current instance.
  example: []
  syntax:
    content: public override TableObject Clone(string newName)
    parameters:
    - id: newName
      type: System.String
      description: TextStyle name of the copy.
    return:
      type: netDxf.Tables.TableObject
      description: A new TextStyle that is a copy of this instance.
    content.vb: Public Overrides Function Clone(newName As String) As TableObject
  overridden: netDxf.Tables.TableObject.Clone(System.String)
  overload: netDxf.Tables.TextStyle.Clone*
  nameWithType.vb: TextStyle.Clone(String)
  fullName.vb: netDxf.Tables.TextStyle.Clone(String)
  name.vb: Clone(String)
- uid: netDxf.Tables.TextStyle.Clone
  commentId: M:netDxf.Tables.TextStyle.Clone
  id: Clone
  parent: netDxf.Tables.TextStyle
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: TextStyle.Clone()
  fullName: netDxf.Tables.TextStyle.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TextStyle.cs
    startLine: 493
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Creates a new TextStyle that is a copy of the current instance.
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: A new TextStyle that is a copy of this instance.
    content.vb: Public Overrides Function Clone() As Object
  overridden: netDxf.Tables.TableObject.Clone
  overload: netDxf.Tables.TextStyle.Clone*
references:
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  href: netDxf.html
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: netDxf.Tables.TableObject
  commentId: T:netDxf.Tables.TableObject
  parent: netDxf.Tables
  href: netDxf.Tables.TableObject.html
  name: TableObject
  nameWithType: TableObject
  fullName: netDxf.Tables.TableObject
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{netDxf.Tables.TableObject}
  commentId: T:System.IComparable{netDxf.Tables.TableObject}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<TableObject>
  nameWithType: IComparable<TableObject>
  fullName: System.IComparable<netDxf.Tables.TableObject>
  nameWithType.vb: IComparable(Of TableObject)
  fullName.vb: System.IComparable(Of netDxf.Tables.TableObject)
  name.vb: IComparable(Of TableObject)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: System.IEquatable{netDxf.Tables.TableObject}
  commentId: T:System.IEquatable{netDxf.Tables.TableObject}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TableObject>
  nameWithType: IEquatable<TableObject>
  fullName: System.IEquatable<netDxf.Tables.TableObject>
  nameWithType.vb: IEquatable(Of TableObject)
  fullName.vb: System.IEquatable(Of netDxf.Tables.TableObject)
  name.vb: IEquatable(Of TableObject)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: netDxf.Tables.TableObject.NameChanged
  commentId: E:netDxf.Tables.TableObject.NameChanged
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_NameChanged
  name: NameChanged
  nameWithType: TableObject.NameChanged
  fullName: netDxf.Tables.TableObject.NameChanged
- uid: netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  commentId: M:netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_OnNameChangedEvent_System_String_System_String_
  name: OnNameChangedEvent(string, string)
  nameWithType: TableObject.OnNameChangedEvent(string, string)
  fullName: netDxf.Tables.TableObject.OnNameChangedEvent(string, string)
  nameWithType.vb: TableObject.OnNameChangedEvent(String, String)
  fullName.vb: netDxf.Tables.TableObject.OnNameChangedEvent(String, String)
  name.vb: OnNameChangedEvent(String, String)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
    name: OnNameChangedEvent
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_OnNameChangedEvent_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
    name: OnNameChangedEvent
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_OnNameChangedEvent_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Tables.TableObject.Name
  commentId: P:netDxf.Tables.TableObject.Name
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Name
  name: Name
  nameWithType: TableObject.Name
  fullName: netDxf.Tables.TableObject.Name
- uid: netDxf.Tables.TableObject.IsReserved
  commentId: P:netDxf.Tables.TableObject.IsReserved
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsReserved
  name: IsReserved
  nameWithType: TableObject.IsReserved
  fullName: netDxf.Tables.TableObject.IsReserved
- uid: netDxf.Tables.TableObject.InvalidCharacters
  commentId: P:netDxf.Tables.TableObject.InvalidCharacters
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_InvalidCharacters
  name: InvalidCharacters
  nameWithType: TableObject.InvalidCharacters
  fullName: netDxf.Tables.TableObject.InvalidCharacters
- uid: netDxf.Tables.TableObject.IsValidName(System.String)
  commentId: M:netDxf.Tables.TableObject.IsValidName(System.String)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsValidName_System_String_
  name: IsValidName(string)
  nameWithType: TableObject.IsValidName(string)
  fullName: netDxf.Tables.TableObject.IsValidName(string)
  nameWithType.vb: TableObject.IsValidName(String)
  fullName.vb: netDxf.Tables.TableObject.IsValidName(String)
  name.vb: IsValidName(String)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.IsValidName(System.String)
    name: IsValidName
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsValidName_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.IsValidName(System.String)
    name: IsValidName
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsValidName_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Tables.TableObject.ToString
  commentId: M:netDxf.Tables.TableObject.ToString
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_ToString
  name: ToString()
  nameWithType: TableObject.ToString()
  fullName: netDxf.Tables.TableObject.ToString()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.ToString
    name: ToString
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.ToString
    name: ToString
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_ToString
  - name: (
  - name: )
- uid: netDxf.Tables.TableObject.CompareTo(System.Object)
  commentId: M:netDxf.Tables.TableObject.CompareTo(System.Object)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_System_Object_
  name: CompareTo(object)
  nameWithType: TableObject.CompareTo(object)
  fullName: netDxf.Tables.TableObject.CompareTo(object)
  nameWithType.vb: TableObject.CompareTo(Object)
  fullName.vb: netDxf.Tables.TableObject.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.CompareTo(System.Object)
    name: CompareTo
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.CompareTo(System.Object)
    name: CompareTo
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  commentId: M:netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_netDxf_Tables_TableObject_
  name: CompareTo(TableObject)
  nameWithType: TableObject.CompareTo(TableObject)
  fullName: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
    name: CompareTo
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_netDxf_Tables_TableObject_
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
    name: CompareTo
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_netDxf_Tables_TableObject_
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: netDxf.Tables.TableObject.GetHashCode
  commentId: M:netDxf.Tables.TableObject.GetHashCode
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetHashCode
  name: GetHashCode()
  nameWithType: TableObject.GetHashCode()
  fullName: netDxf.Tables.TableObject.GetHashCode()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.GetHashCode
    name: GetHashCode
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.GetHashCode
    name: GetHashCode
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetHashCode
  - name: (
  - name: )
- uid: netDxf.Tables.TableObject.Equals(System.Object)
  commentId: M:netDxf.Tables.TableObject.Equals(System.Object)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_System_Object_
  name: Equals(object)
  nameWithType: TableObject.Equals(object)
  fullName: netDxf.Tables.TableObject.Equals(object)
  nameWithType.vb: TableObject.Equals(Object)
  fullName.vb: netDxf.Tables.TableObject.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.Equals(System.Object)
    name: Equals
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.Equals(System.Object)
    name: Equals
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  commentId: M:netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_netDxf_Tables_TableObject_
  name: Equals(TableObject)
  nameWithType: TableObject.Equals(TableObject)
  fullName: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
    name: Equals
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_netDxf_Tables_TableObject_
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
    name: Equals
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_netDxf_Tables_TableObject_
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataAddAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataAddAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataRemoveAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataRemoveAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Tables.TextStyle.Default*
  commentId: Overload:netDxf.Tables.TextStyle.Default
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_Default
  name: Default
  nameWithType: TextStyle.Default
  fullName: netDxf.Tables.TextStyle.Default
- uid: netDxf.Tables.TextStyle
  commentId: T:netDxf.Tables.TextStyle
  parent: netDxf.Tables
  href: netDxf.Tables.TextStyle.html
  name: TextStyle
  nameWithType: TextStyle
  fullName: netDxf.Tables.TextStyle
- uid: netDxf.Tables.TextStyle.#ctor*
  commentId: Overload:netDxf.Tables.TextStyle.#ctor
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle__ctor_System_String_System_String_
  name: TextStyle
  nameWithType: TextStyle.TextStyle
  fullName: netDxf.Tables.TextStyle.TextStyle
  nameWithType.vb: TextStyle.New
  fullName.vb: netDxf.Tables.TextStyle.New
  name.vb: New
- uid: netDxf.Tables.FontStyle
  commentId: T:netDxf.Tables.FontStyle
  parent: netDxf.Tables
  href: netDxf.Tables.FontStyle.html
  name: FontStyle
  nameWithType: FontStyle
  fullName: netDxf.Tables.FontStyle
- uid: netDxf.Tables.TextStyle.FontFile*
  commentId: Overload:netDxf.Tables.TextStyle.FontFile
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_FontFile
  name: FontFile
  nameWithType: TextStyle.FontFile
  fullName: netDxf.Tables.TextStyle.FontFile
- uid: netDxf.Tables.TextStyle.BigFont*
  commentId: Overload:netDxf.Tables.TextStyle.BigFont
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_BigFont
  name: BigFont
  nameWithType: TextStyle.BigFont
  fullName: netDxf.Tables.TextStyle.BigFont
- uid: netDxf.Tables.TextStyle.FontFamilyName*
  commentId: Overload:netDxf.Tables.TextStyle.FontFamilyName
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_FontFamilyName
  name: FontFamilyName
  nameWithType: TextStyle.FontFamilyName
  fullName: netDxf.Tables.TextStyle.FontFamilyName
- uid: netDxf.Tables.TextStyle.FontStyle*
  commentId: Overload:netDxf.Tables.TextStyle.FontStyle
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_FontStyle
  name: FontStyle
  nameWithType: TextStyle.FontStyle
  fullName: netDxf.Tables.TextStyle.FontStyle
- uid: netDxf.Tables.TextStyle.Height*
  commentId: Overload:netDxf.Tables.TextStyle.Height
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_Height
  name: Height
  nameWithType: TextStyle.Height
  fullName: netDxf.Tables.TextStyle.Height
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Tables.TextStyle.WidthFactor*
  commentId: Overload:netDxf.Tables.TextStyle.WidthFactor
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_WidthFactor
  name: WidthFactor
  nameWithType: TextStyle.WidthFactor
  fullName: netDxf.Tables.TextStyle.WidthFactor
- uid: netDxf.Tables.TextStyle.ObliqueAngle*
  commentId: Overload:netDxf.Tables.TextStyle.ObliqueAngle
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_ObliqueAngle
  name: ObliqueAngle
  nameWithType: TextStyle.ObliqueAngle
  fullName: netDxf.Tables.TextStyle.ObliqueAngle
- uid: netDxf.Tables.TextStyle.IsVertical*
  commentId: Overload:netDxf.Tables.TextStyle.IsVertical
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_IsVertical
  name: IsVertical
  nameWithType: TextStyle.IsVertical
  fullName: netDxf.Tables.TextStyle.IsVertical
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Tables.TextStyle.IsBackward*
  commentId: Overload:netDxf.Tables.TextStyle.IsBackward
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_IsBackward
  name: IsBackward
  nameWithType: TextStyle.IsBackward
  fullName: netDxf.Tables.TextStyle.IsBackward
- uid: netDxf.Tables.TextStyle.IsUpsideDown*
  commentId: Overload:netDxf.Tables.TextStyle.IsUpsideDown
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_IsUpsideDown
  name: IsUpsideDown
  nameWithType: TextStyle.IsUpsideDown
  fullName: netDxf.Tables.TextStyle.IsUpsideDown
- uid: netDxf.Tables.TextStyle.Owner*
  commentId: Overload:netDxf.Tables.TextStyle.Owner
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_Owner
  name: Owner
  nameWithType: TextStyle.Owner
  fullName: netDxf.Tables.TextStyle.Owner
- uid: netDxf.Collections.TextStyles
  commentId: T:netDxf.Collections.TextStyles
  parent: netDxf.Collections
  href: netDxf.Collections.TextStyles.html
  name: TextStyles
  nameWithType: TextStyles
  fullName: netDxf.Collections.TextStyles
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: netDxf.Tables.TextStyle.TrueTypeFontFamilyName*
  commentId: Overload:netDxf.Tables.TextStyle.TrueTypeFontFamilyName
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_TrueTypeFontFamilyName_System_String_
  name: TrueTypeFontFamilyName
  nameWithType: TextStyle.TrueTypeFontFamilyName
  fullName: netDxf.Tables.TextStyle.TrueTypeFontFamilyName
- uid: netDxf.Tables.TableObject.HasReferences
  commentId: M:netDxf.Tables.TableObject.HasReferences
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_HasReferences
  name: HasReferences()
  nameWithType: TableObject.HasReferences()
  fullName: netDxf.Tables.TableObject.HasReferences()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.HasReferences
    name: HasReferences
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_HasReferences
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.HasReferences
    name: HasReferences
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_HasReferences
  - name: (
  - name: )
- uid: netDxf.Tables.TextStyle.HasReferences*
  commentId: Overload:netDxf.Tables.TextStyle.HasReferences
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_HasReferences
  name: HasReferences
  nameWithType: TextStyle.HasReferences
  fullName: netDxf.Tables.TextStyle.HasReferences
- uid: netDxf.Tables.TableObject.GetReferences
  commentId: M:netDxf.Tables.TableObject.GetReferences
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetReferences
  name: GetReferences()
  nameWithType: TableObject.GetReferences()
  fullName: netDxf.Tables.TableObject.GetReferences()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.GetReferences
    name: GetReferences
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetReferences
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.GetReferences
    name: GetReferences
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetReferences
  - name: (
  - name: )
- uid: netDxf.Tables.TextStyle.GetReferences*
  commentId: Overload:netDxf.Tables.TextStyle.GetReferences
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_GetReferences
  name: GetReferences
  nameWithType: TextStyle.GetReferences
  fullName: netDxf.Tables.TextStyle.GetReferences
- uid: System.Collections.Generic.List{netDxf.DxfObjectReference}
  commentId: T:System.Collections.Generic.List{netDxf.DxfObjectReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<DxfObjectReference>
  nameWithType: List<DxfObjectReference>
  fullName: System.Collections.Generic.List<netDxf.DxfObjectReference>
  nameWithType.vb: List(Of DxfObjectReference)
  fullName.vb: System.Collections.Generic.List(Of netDxf.DxfObjectReference)
  name.vb: List(Of DxfObjectReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.DxfObjectReference
    name: DxfObjectReference
    href: netDxf.DxfObjectReference.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.DxfObjectReference
    name: DxfObjectReference
    href: netDxf.DxfObjectReference.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.Tables.TableObject.Clone(System.String)
  commentId: M:netDxf.Tables.TableObject.Clone(System.String)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone_System_String_
  name: Clone(string)
  nameWithType: TableObject.Clone(string)
  fullName: netDxf.Tables.TableObject.Clone(string)
  nameWithType.vb: TableObject.Clone(String)
  fullName.vb: netDxf.Tables.TableObject.Clone(String)
  name.vb: Clone(String)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.Clone(System.String)
    name: Clone
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.Clone(System.String)
    name: Clone
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Tables.TextStyle.Clone*
  commentId: Overload:netDxf.Tables.TextStyle.Clone
  href: netDxf.Tables.TextStyle.html#netDxf_Tables_TextStyle_Clone_System_String_
  name: Clone
  nameWithType: TextStyle.Clone
  fullName: netDxf.Tables.TextStyle.Clone
- uid: netDxf.Tables.TableObject.Clone
  commentId: M:netDxf.Tables.TableObject.Clone
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone
  name: Clone()
  nameWithType: TableObject.Clone()
  fullName: netDxf.Tables.TableObject.Clone()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.Clone
    name: Clone
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.Clone
    name: Clone
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone
  - name: (
  - name: )
