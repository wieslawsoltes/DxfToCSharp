### YamlMime:ManagedReference
items:
- uid: netDxf.ClippingBoundary
  commentId: T:netDxf.ClippingBoundary
  id: ClippingBoundary
  parent: netDxf
  children:
  - netDxf.ClippingBoundary.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector2})
  - netDxf.ClippingBoundary.#ctor(System.Double,System.Double,System.Double,System.Double)
  - netDxf.ClippingBoundary.#ctor(netDxf.Vector2,netDxf.Vector2)
  - netDxf.ClippingBoundary.Clone
  - netDxf.ClippingBoundary.Type
  - netDxf.ClippingBoundary.Vertexes
  langs:
  - csharp
  - vb
  name: ClippingBoundary
  nameWithType: ClippingBoundary
  fullName: netDxf.ClippingBoundary
  type: Class
  source:
    id: ClippingBoundary
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/ClippingBoundary.cs
    startLine: 37
  assemblies:
  - netDxf
  namespace: netDxf
  summary: >-
    Represent a clipping boundary to display specific portions of

    an <xref href="netDxf.Entities.Image?text=Image" data-throw-if-not-resolved="false"></xref>,

    an <xref href="netDxf.Entities.Underlay?text=Underlay" data-throw-if-not-resolved="false"></xref>,

    or a <xref href="netDxf.Entities.Wipeout?text=Wipeout" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class ClippingBoundary : ICloneable'
    content.vb: Public Class ClippingBoundary Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.ClippingBoundary.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:netDxf.ClippingBoundary.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: netDxf.ClippingBoundary
  langs:
  - csharp
  - vb
  name: ClippingBoundary(double, double, double, double)
  nameWithType: ClippingBoundary.ClippingBoundary(double, double, double, double)
  fullName: netDxf.ClippingBoundary.ClippingBoundary(double, double, double, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/ClippingBoundary.cs
    startLine: 56
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>ClippingBoundary</code> class as a rectangular clipping boundary.
  example: []
  syntax:
    content: public ClippingBoundary(double x, double y, double width, double height)
    parameters:
    - id: x
      type: System.Double
      description: Rectangle x-coordinate of the first corner.
    - id: y
      type: System.Double
      description: Rectangle y-coordinate of the first corner.
    - id: width
      type: System.Double
      description: Rectangle width.
    - id: height
      type: System.Double
      description: Rectangle height.
    content.vb: Public Sub New(x As Double, y As Double, width As Double, height As Double)
  overload: netDxf.ClippingBoundary.#ctor*
  nameWithType.vb: ClippingBoundary.New(Double, Double, Double, Double)
  fullName.vb: netDxf.ClippingBoundary.New(Double, Double, Double, Double)
  name.vb: New(Double, Double, Double, Double)
- uid: netDxf.ClippingBoundary.#ctor(netDxf.Vector2,netDxf.Vector2)
  commentId: M:netDxf.ClippingBoundary.#ctor(netDxf.Vector2,netDxf.Vector2)
  id: '#ctor(netDxf.Vector2,netDxf.Vector2)'
  parent: netDxf.ClippingBoundary
  langs:
  - csharp
  - vb
  name: ClippingBoundary(Vector2, Vector2)
  nameWithType: ClippingBoundary.ClippingBoundary(Vector2, Vector2)
  fullName: netDxf.ClippingBoundary.ClippingBoundary(netDxf.Vector2, netDxf.Vector2)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/ClippingBoundary.cs
    startLine: 67
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>ClippingBoundary</code> class as a rectangular clipping boundary from two opposite corners.
  example: []
  syntax:
    content: public ClippingBoundary(Vector2 firstCorner, Vector2 secondCorner)
    parameters:
    - id: firstCorner
      type: netDxf.Vector2
      description: Rectangle first corner.
    - id: secondCorner
      type: netDxf.Vector2
      description: Rectangle second corner.
    content.vb: Public Sub New(firstCorner As Vector2, secondCorner As Vector2)
  overload: netDxf.ClippingBoundary.#ctor*
  nameWithType.vb: ClippingBoundary.New(Vector2, Vector2)
  fullName.vb: netDxf.ClippingBoundary.New(netDxf.Vector2, netDxf.Vector2)
  name.vb: New(Vector2, Vector2)
- uid: netDxf.ClippingBoundary.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector2})
  commentId: M:netDxf.ClippingBoundary.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector2})
  id: '#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector2})'
  parent: netDxf.ClippingBoundary
  langs:
  - csharp
  - vb
  name: ClippingBoundary(IEnumerable<Vector2>)
  nameWithType: ClippingBoundary.ClippingBoundary(IEnumerable<Vector2>)
  fullName: netDxf.ClippingBoundary.ClippingBoundary(System.Collections.Generic.IEnumerable<netDxf.Vector2>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/ClippingBoundary.cs
    startLine: 77
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>ClippingBoundary</code> class as a polygonal clipping boundary.
  example: []
  syntax:
    content: public ClippingBoundary(IEnumerable<Vector2> vertexes)
    parameters:
    - id: vertexes
      type: System.Collections.Generic.IEnumerable{netDxf.Vector2}
      description: The list of vertexes of the polygonal boundary.
    content.vb: Public Sub New(vertexes As IEnumerable(Of Vector2))
  overload: netDxf.ClippingBoundary.#ctor*
  nameWithType.vb: ClippingBoundary.New(IEnumerable(Of Vector2))
  fullName.vb: netDxf.ClippingBoundary.New(System.Collections.Generic.IEnumerable(Of netDxf.Vector2))
  name.vb: New(IEnumerable(Of Vector2))
- uid: netDxf.ClippingBoundary.Type
  commentId: P:netDxf.ClippingBoundary.Type
  id: Type
  parent: netDxf.ClippingBoundary
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ClippingBoundary.Type
  fullName: netDxf.ClippingBoundary.Type
  type: Property
  source:
    id: Type
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/ClippingBoundary.cs
    startLine: 94
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the clipping boundary type, rectangular or polygonal.
  example: []
  syntax:
    content: public ClippingBoundaryType Type { get; }
    parameters: []
    return:
      type: netDxf.ClippingBoundaryType
    content.vb: Public ReadOnly Property Type As ClippingBoundaryType
  overload: netDxf.ClippingBoundary.Type*
- uid: netDxf.ClippingBoundary.Vertexes
  commentId: P:netDxf.ClippingBoundary.Vertexes
  id: Vertexes
  parent: netDxf.ClippingBoundary
  langs:
  - csharp
  - vb
  name: Vertexes
  nameWithType: ClippingBoundary.Vertexes
  fullName: netDxf.ClippingBoundary.Vertexes
  type: Property
  source:
    id: Vertexes
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/ClippingBoundary.cs
    startLine: 102
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the list of vertexes of the polygonal boundary, or the opposite vertexes if the boundary is rectangular.
  example: []
  syntax:
    content: public IReadOnlyList<Vector2> Vertexes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{netDxf.Vector2}
    content.vb: Public ReadOnly Property Vertexes As IReadOnlyList(Of Vector2)
  overload: netDxf.ClippingBoundary.Vertexes*
- uid: netDxf.ClippingBoundary.Clone
  commentId: M:netDxf.ClippingBoundary.Clone
  id: Clone
  parent: netDxf.ClippingBoundary
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ClippingBoundary.Clone()
  fullName: netDxf.ClippingBoundary.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/ClippingBoundary.cs
    startLine: 115
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Creates a new ClippingBoundary that is a copy of the current instance.
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: A new ClippingBoundary that is a copy of this instance.
    content.vb: Public Function Clone() As Object
  overload: netDxf.ClippingBoundary.Clone*
  implements:
  - System.ICloneable.Clone
references:
- uid: netDxf.Entities.Image
  commentId: T:netDxf.Entities.Image
  parent: netDxf.Entities
  href: netDxf.Entities.Image.html
  name: Image
  nameWithType: Image
  fullName: netDxf.Entities.Image
- uid: netDxf.Entities.Underlay
  commentId: T:netDxf.Entities.Underlay
  parent: netDxf.Entities
  href: netDxf.Entities.Underlay.html
  name: Underlay
  nameWithType: Underlay
  fullName: netDxf.Entities.Underlay
- uid: netDxf.Entities.Wipeout
  commentId: T:netDxf.Entities.Wipeout
  href: netDxf.Entities.Wipeout.html
  name: Wipeout
  nameWithType: Wipeout
  fullName: netDxf.Entities.Wipeout
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.ClippingBoundary.#ctor*
  commentId: Overload:netDxf.ClippingBoundary.#ctor
  href: netDxf.ClippingBoundary.html#netDxf_ClippingBoundary__ctor_System_Double_System_Double_System_Double_System_Double_
  name: ClippingBoundary
  nameWithType: ClippingBoundary.ClippingBoundary
  fullName: netDxf.ClippingBoundary.ClippingBoundary
  nameWithType.vb: ClippingBoundary.New
  fullName.vb: netDxf.ClippingBoundary.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Vector2
  commentId: T:netDxf.Vector2
  parent: netDxf
  href: netDxf.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: netDxf.Vector2
- uid: System.Collections.Generic.IEnumerable{netDxf.Vector2}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector2>
  nameWithType: IEnumerable<Vector2>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Vector2>
  nameWithType.vb: IEnumerable(Of Vector2)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Vector2)
  name.vb: IEnumerable(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Vector2
    name: Vector2
    href: netDxf.Vector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Vector2
    name: Vector2
    href: netDxf.Vector2.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.ClippingBoundary.Type*
  commentId: Overload:netDxf.ClippingBoundary.Type
  href: netDxf.ClippingBoundary.html#netDxf_ClippingBoundary_Type
  name: Type
  nameWithType: ClippingBoundary.Type
  fullName: netDxf.ClippingBoundary.Type
- uid: netDxf.ClippingBoundaryType
  commentId: T:netDxf.ClippingBoundaryType
  parent: netDxf
  href: netDxf.ClippingBoundaryType.html
  name: ClippingBoundaryType
  nameWithType: ClippingBoundaryType
  fullName: netDxf.ClippingBoundaryType
- uid: netDxf.ClippingBoundary.Vertexes*
  commentId: Overload:netDxf.ClippingBoundary.Vertexes
  href: netDxf.ClippingBoundary.html#netDxf_ClippingBoundary_Vertexes
  name: Vertexes
  nameWithType: ClippingBoundary.Vertexes
  fullName: netDxf.ClippingBoundary.Vertexes
- uid: System.Collections.Generic.IReadOnlyList{netDxf.Vector2}
  commentId: T:System.Collections.Generic.IReadOnlyList{netDxf.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Vector2>
  nameWithType: IReadOnlyList<Vector2>
  fullName: System.Collections.Generic.IReadOnlyList<netDxf.Vector2>
  nameWithType.vb: IReadOnlyList(Of Vector2)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of netDxf.Vector2)
  name.vb: IReadOnlyList(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: netDxf.Vector2
    name: Vector2
    href: netDxf.Vector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Vector2
    name: Vector2
    href: netDxf.Vector2.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.ClippingBoundary.Clone*
  commentId: Overload:netDxf.ClippingBoundary.Clone
  href: netDxf.ClippingBoundary.html#netDxf_ClippingBoundary_Clone
  name: Clone
  nameWithType: ClippingBoundary.Clone
  fullName: netDxf.ClippingBoundary.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
