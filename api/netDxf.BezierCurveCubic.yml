### YamlMime:ManagedReference
items:
- uid: netDxf.BezierCurveCubic
  commentId: T:netDxf.BezierCurveCubic
  id: BezierCurveCubic
  parent: netDxf
  children:
  - netDxf.BezierCurveCubic.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector3})
  - netDxf.BezierCurveCubic.#ctor(netDxf.Vector3,netDxf.Vector3,netDxf.Vector3,netDxf.Vector3)
  - netDxf.BezierCurveCubic.CalculatePoint(System.Double)
  - netDxf.BezierCurveCubic.CalculateTangent(System.Double)
  - netDxf.BezierCurveCubic.CreateFromFitPoints(System.Collections.Generic.IEnumerable{netDxf.Vector3})
  - netDxf.BezierCurveCubic.EndPoint
  - netDxf.BezierCurveCubic.FirstControlPoint
  - netDxf.BezierCurveCubic.PolygonalVertexes(System.Int32)
  - netDxf.BezierCurveCubic.Reverse
  - netDxf.BezierCurveCubic.SecondControlPoint
  - netDxf.BezierCurveCubic.Split(System.Double)
  - netDxf.BezierCurveCubic.StartPoint
  langs:
  - csharp
  - vb
  name: BezierCurveCubic
  nameWithType: BezierCurveCubic
  fullName: netDxf.BezierCurveCubic
  type: Class
  source:
    id: BezierCurveCubic
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 34
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Represent a cubic bezier curve.
  example: []
  syntax:
    content: 'public class BezierCurveCubic : BezierCurve'
    content.vb: Public Class BezierCurveCubic Inherits BezierCurve
  inheritance:
  - System.Object
  - netDxf.BezierCurve
  inheritedMembers:
  - netDxf.BezierCurve.controlPoints
  - netDxf.BezierCurve.degree
  - netDxf.BezierCurve.ControlPoints
  - netDxf.BezierCurve.Degree
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.BezierCurveCubic.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector3})
  commentId: M:netDxf.BezierCurveCubic.#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector3})
  id: '#ctor(System.Collections.Generic.IEnumerable{netDxf.Vector3})'
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: BezierCurveCubic(IEnumerable<Vector3>)
  nameWithType: BezierCurveCubic.BezierCurveCubic(IEnumerable<Vector3>)
  fullName: netDxf.BezierCurveCubic.BezierCurveCubic(System.Collections.Generic.IEnumerable<netDxf.Vector3>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 50
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>BezierCurve</code> class.
  remarks: >-
    The list must contain four control points.

    The first index represents the start point or anchor,

    the second represents the first control point,

    the third the second control point,

    and the last the end point.
  example: []
  syntax:
    content: public BezierCurveCubic(IEnumerable<Vector3> controlPoints)
    parameters:
    - id: controlPoints
      type: System.Collections.Generic.IEnumerable{netDxf.Vector3}
      description: A list of four control points.
    content.vb: Public Sub New(controlPoints As IEnumerable(Of Vector3))
  overload: netDxf.BezierCurveCubic.#ctor*
  nameWithType.vb: BezierCurveCubic.New(IEnumerable(Of Vector3))
  fullName.vb: netDxf.BezierCurveCubic.New(System.Collections.Generic.IEnumerable(Of netDxf.Vector3))
  name.vb: New(IEnumerable(Of Vector3))
- uid: netDxf.BezierCurveCubic.#ctor(netDxf.Vector3,netDxf.Vector3,netDxf.Vector3,netDxf.Vector3)
  commentId: M:netDxf.BezierCurveCubic.#ctor(netDxf.Vector3,netDxf.Vector3,netDxf.Vector3,netDxf.Vector3)
  id: '#ctor(netDxf.Vector3,netDxf.Vector3,netDxf.Vector3,netDxf.Vector3)'
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: BezierCurveCubic(Vector3, Vector3, Vector3, Vector3)
  nameWithType: BezierCurveCubic.BezierCurveCubic(Vector3, Vector3, Vector3, Vector3)
  fullName: netDxf.BezierCurveCubic.BezierCurveCubic(netDxf.Vector3, netDxf.Vector3, netDxf.Vector3, netDxf.Vector3)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 62
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Initializes a new instance of the <code>BezierCurve</code> class.
  example: []
  syntax:
    content: public BezierCurveCubic(Vector3 startPoint, Vector3 firstControlPoint, Vector3 secondControlPoint, Vector3 endPoint)
    parameters:
    - id: startPoint
      type: netDxf.Vector3
      description: Start anchor point.
    - id: firstControlPoint
      type: netDxf.Vector3
      description: First control point.
    - id: secondControlPoint
      type: netDxf.Vector3
      description: Second control point.
    - id: endPoint
      type: netDxf.Vector3
      description: End anchor point.
    content.vb: Public Sub New(startPoint As Vector3, firstControlPoint As Vector3, secondControlPoint As Vector3, endPoint As Vector3)
  overload: netDxf.BezierCurveCubic.#ctor*
  nameWithType.vb: BezierCurveCubic.New(Vector3, Vector3, Vector3, Vector3)
  fullName.vb: netDxf.BezierCurveCubic.New(netDxf.Vector3, netDxf.Vector3, netDxf.Vector3, netDxf.Vector3)
  name.vb: New(Vector3, Vector3, Vector3, Vector3)
- uid: netDxf.BezierCurveCubic.StartPoint
  commentId: P:netDxf.BezierCurveCubic.StartPoint
  id: StartPoint
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: StartPoint
  nameWithType: BezierCurveCubic.StartPoint
  fullName: netDxf.BezierCurveCubic.StartPoint
  type: Property
  source:
    id: StartPoint
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 74
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets or sets the curve start point.
  example: []
  syntax:
    content: public Vector3 StartPoint { get; set; }
    parameters: []
    return:
      type: netDxf.Vector3
    content.vb: Public Property StartPoint As Vector3
  overload: netDxf.BezierCurveCubic.StartPoint*
- uid: netDxf.BezierCurveCubic.FirstControlPoint
  commentId: P:netDxf.BezierCurveCubic.FirstControlPoint
  id: FirstControlPoint
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: FirstControlPoint
  nameWithType: BezierCurveCubic.FirstControlPoint
  fullName: netDxf.BezierCurveCubic.FirstControlPoint
  type: Property
  source:
    id: FirstControlPoint
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 83
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets or sets the first control point.
  example: []
  syntax:
    content: public Vector3 FirstControlPoint { get; set; }
    parameters: []
    return:
      type: netDxf.Vector3
    content.vb: Public Property FirstControlPoint As Vector3
  overload: netDxf.BezierCurveCubic.FirstControlPoint*
- uid: netDxf.BezierCurveCubic.SecondControlPoint
  commentId: P:netDxf.BezierCurveCubic.SecondControlPoint
  id: SecondControlPoint
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: SecondControlPoint
  nameWithType: BezierCurveCubic.SecondControlPoint
  fullName: netDxf.BezierCurveCubic.SecondControlPoint
  type: Property
  source:
    id: SecondControlPoint
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 92
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets or sets the second control point.
  example: []
  syntax:
    content: public Vector3 SecondControlPoint { get; set; }
    parameters: []
    return:
      type: netDxf.Vector3
    content.vb: Public Property SecondControlPoint As Vector3
  overload: netDxf.BezierCurveCubic.SecondControlPoint*
- uid: netDxf.BezierCurveCubic.EndPoint
  commentId: P:netDxf.BezierCurveCubic.EndPoint
  id: EndPoint
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: EndPoint
  nameWithType: BezierCurveCubic.EndPoint
  fullName: netDxf.BezierCurveCubic.EndPoint
  type: Property
  source:
    id: EndPoint
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 101
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets or sets the curve end point.
  example: []
  syntax:
    content: public Vector3 EndPoint { get; set; }
    parameters: []
    return:
      type: netDxf.Vector3
    content.vb: Public Property EndPoint As Vector3
  overload: netDxf.BezierCurveCubic.EndPoint*
- uid: netDxf.BezierCurveCubic.CalculatePoint(System.Double)
  commentId: M:netDxf.BezierCurveCubic.CalculatePoint(System.Double)
  id: CalculatePoint(System.Double)
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: CalculatePoint(double)
  nameWithType: BezierCurveCubic.CalculatePoint(double)
  fullName: netDxf.BezierCurveCubic.CalculatePoint(double)
  type: Method
  source:
    id: CalculatePoint
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 116
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Obtains a point along the curve at parameter t.
  example: []
  syntax:
    content: public override Vector3 CalculatePoint(double t)
    parameters:
    - id: t
      type: System.Double
      description: Parameter t, between 0.0 and 1.0.
    return:
      type: netDxf.Vector3
      description: A point along the curve.
    content.vb: Public Overrides Function CalculatePoint(t As Double) As Vector3
  overridden: netDxf.BezierCurve.CalculatePoint(System.Double)
  overload: netDxf.BezierCurveCubic.CalculatePoint*
  nameWithType.vb: BezierCurveCubic.CalculatePoint(Double)
  fullName.vb: netDxf.BezierCurveCubic.CalculatePoint(Double)
  name.vb: CalculatePoint(Double)
- uid: netDxf.BezierCurveCubic.CalculateTangent(System.Double)
  commentId: M:netDxf.BezierCurveCubic.CalculateTangent(System.Double)
  id: CalculateTangent(System.Double)
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: CalculateTangent(double)
  nameWithType: BezierCurveCubic.CalculateTangent(double)
  fullName: netDxf.BezierCurveCubic.CalculateTangent(double)
  type: Method
  source:
    id: CalculateTangent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 132
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Calculates the tangent vector at parameter t.
  example: []
  syntax:
    content: public override Vector3 CalculateTangent(double t)
    parameters:
    - id: t
      type: System.Double
      description: Parameter t, between 0.0 and 1.0.
    return:
      type: netDxf.Vector3
      description: A normalized tangent vector.
    content.vb: Public Overrides Function CalculateTangent(t As Double) As Vector3
  overridden: netDxf.BezierCurve.CalculateTangent(System.Double)
  overload: netDxf.BezierCurveCubic.CalculateTangent*
  nameWithType.vb: BezierCurveCubic.CalculateTangent(Double)
  fullName.vb: netDxf.BezierCurveCubic.CalculateTangent(Double)
  name.vb: CalculateTangent(Double)
- uid: netDxf.BezierCurveCubic.Split(System.Double)
  commentId: M:netDxf.BezierCurveCubic.Split(System.Double)
  id: Split(System.Double)
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: Split(double)
  nameWithType: BezierCurveCubic.Split(double)
  fullName: netDxf.BezierCurveCubic.Split(double)
  type: Method
  source:
    id: Split
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 150
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Splits the actual bezier curve in two at parameter t.
  example: []
  syntax:
    content: public BezierCurveCubic[] Split(double t)
    parameters:
    - id: t
      type: System.Double
      description: Parameter t, between 0.0 and 1.0.
    return:
      type: netDxf.BezierCurveCubic[]
      description: The two curves result of dividing the actual curve at parameter t.
    content.vb: Public Function Split(t As Double) As BezierCurveCubic()
  overload: netDxf.BezierCurveCubic.Split*
  nameWithType.vb: BezierCurveCubic.Split(Double)
  fullName.vb: netDxf.BezierCurveCubic.Split(Double)
  name.vb: Split(Double)
- uid: netDxf.BezierCurveCubic.Reverse
  commentId: M:netDxf.BezierCurveCubic.Reverse
  id: Reverse
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: BezierCurveCubic.Reverse()
  fullName: netDxf.BezierCurveCubic.Reverse()
  type: Method
  source:
    id: Reverse
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 174
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Switch the bezier curve direction.
  example: []
  syntax:
    content: public void Reverse()
    content.vb: Public Sub Reverse()
  overload: netDxf.BezierCurveCubic.Reverse*
- uid: netDxf.BezierCurveCubic.PolygonalVertexes(System.Int32)
  commentId: M:netDxf.BezierCurveCubic.PolygonalVertexes(System.Int32)
  id: PolygonalVertexes(System.Int32)
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: PolygonalVertexes(int)
  nameWithType: BezierCurveCubic.PolygonalVertexes(int)
  fullName: netDxf.BezierCurveCubic.PolygonalVertexes(int)
  type: Method
  source:
    id: PolygonalVertexes
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 184
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Converts the bezier curve in a list of vertexes.
  example: []
  syntax:
    content: public List<Vector3> PolygonalVertexes(int precision)
    parameters:
    - id: precision
      type: System.Int32
      description: Number of vertexes generated.
    return:
      type: System.Collections.Generic.List{netDxf.Vector3}
      description: A list vertexes that represents the bezier curve.
    content.vb: Public Function PolygonalVertexes(precision As Integer) As List(Of Vector3)
  overload: netDxf.BezierCurveCubic.PolygonalVertexes*
  nameWithType.vb: BezierCurveCubic.PolygonalVertexes(Integer)
  fullName.vb: netDxf.BezierCurveCubic.PolygonalVertexes(Integer)
  name.vb: PolygonalVertexes(Integer)
- uid: netDxf.BezierCurveCubic.CreateFromFitPoints(System.Collections.Generic.IEnumerable{netDxf.Vector3})
  commentId: M:netDxf.BezierCurveCubic.CreateFromFitPoints(System.Collections.Generic.IEnumerable{netDxf.Vector3})
  id: CreateFromFitPoints(System.Collections.Generic.IEnumerable{netDxf.Vector3})
  parent: netDxf.BezierCurveCubic
  langs:
  - csharp
  - vb
  name: CreateFromFitPoints(IEnumerable<Vector3>)
  nameWithType: BezierCurveCubic.CreateFromFitPoints(IEnumerable<Vector3>)
  fullName: netDxf.BezierCurveCubic.CreateFromFitPoints(System.Collections.Generic.IEnumerable<netDxf.Vector3>)
  type: Method
  source:
    id: CreateFromFitPoints
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/BezierCurveCubic.cs
    startLine: 215
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Generate a list of continuous cubic bezier curves that passes through a set of points.
  example: []
  syntax:
    content: public static List<BezierCurveCubic> CreateFromFitPoints(IEnumerable<Vector3> fitPoints)
    parameters:
    - id: fitPoints
      type: System.Collections.Generic.IEnumerable{netDxf.Vector3}
      description: List of points.
    return:
      type: System.Collections.Generic.List{netDxf.BezierCurveCubic}
      description: A list of cubic bezier curves.
    content.vb: Public Shared Function CreateFromFitPoints(fitPoints As IEnumerable(Of Vector3)) As List(Of BezierCurveCubic)
  overload: netDxf.BezierCurveCubic.CreateFromFitPoints*
  nameWithType.vb: BezierCurveCubic.CreateFromFitPoints(IEnumerable(Of Vector3))
  fullName.vb: netDxf.BezierCurveCubic.CreateFromFitPoints(System.Collections.Generic.IEnumerable(Of netDxf.Vector3))
  name.vb: CreateFromFitPoints(IEnumerable(Of Vector3))
references:
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.BezierCurve
  commentId: T:netDxf.BezierCurve
  parent: netDxf
  href: netDxf.BezierCurve.html
  name: BezierCurve
  nameWithType: BezierCurve
  fullName: netDxf.BezierCurve
- uid: netDxf.BezierCurve.controlPoints
  commentId: F:netDxf.BezierCurve.controlPoints
  parent: netDxf.BezierCurve
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_controlPoints
  name: controlPoints
  nameWithType: BezierCurve.controlPoints
  fullName: netDxf.BezierCurve.controlPoints
- uid: netDxf.BezierCurve.degree
  commentId: F:netDxf.BezierCurve.degree
  parent: netDxf.BezierCurve
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_degree
  name: degree
  nameWithType: BezierCurve.degree
  fullName: netDxf.BezierCurve.degree
- uid: netDxf.BezierCurve.ControlPoints
  commentId: P:netDxf.BezierCurve.ControlPoints
  parent: netDxf.BezierCurve
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_ControlPoints
  name: ControlPoints
  nameWithType: BezierCurve.ControlPoints
  fullName: netDxf.BezierCurve.ControlPoints
- uid: netDxf.BezierCurve.Degree
  commentId: P:netDxf.BezierCurve.Degree
  parent: netDxf.BezierCurve
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_Degree
  name: Degree
  nameWithType: BezierCurve.Degree
  fullName: netDxf.BezierCurve.Degree
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.BezierCurveCubic.#ctor*
  commentId: Overload:netDxf.BezierCurveCubic.#ctor
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic__ctor_System_Collections_Generic_IEnumerable_netDxf_Vector3__
  name: BezierCurveCubic
  nameWithType: BezierCurveCubic.BezierCurveCubic
  fullName: netDxf.BezierCurveCubic.BezierCurveCubic
  nameWithType.vb: BezierCurveCubic.New
  fullName.vb: netDxf.BezierCurveCubic.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{netDxf.Vector3}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3>
  nameWithType: IEnumerable<Vector3>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Vector3>
  nameWithType.vb: IEnumerable(Of Vector3)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Vector3)
  name.vb: IEnumerable(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  href: netDxf.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: netDxf.BezierCurveCubic.StartPoint*
  commentId: Overload:netDxf.BezierCurveCubic.StartPoint
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_StartPoint
  name: StartPoint
  nameWithType: BezierCurveCubic.StartPoint
  fullName: netDxf.BezierCurveCubic.StartPoint
- uid: netDxf.BezierCurveCubic.FirstControlPoint*
  commentId: Overload:netDxf.BezierCurveCubic.FirstControlPoint
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_FirstControlPoint
  name: FirstControlPoint
  nameWithType: BezierCurveCubic.FirstControlPoint
  fullName: netDxf.BezierCurveCubic.FirstControlPoint
- uid: netDxf.BezierCurveCubic.SecondControlPoint*
  commentId: Overload:netDxf.BezierCurveCubic.SecondControlPoint
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_SecondControlPoint
  name: SecondControlPoint
  nameWithType: BezierCurveCubic.SecondControlPoint
  fullName: netDxf.BezierCurveCubic.SecondControlPoint
- uid: netDxf.BezierCurveCubic.EndPoint*
  commentId: Overload:netDxf.BezierCurveCubic.EndPoint
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_EndPoint
  name: EndPoint
  nameWithType: BezierCurveCubic.EndPoint
  fullName: netDxf.BezierCurveCubic.EndPoint
- uid: netDxf.BezierCurve.CalculatePoint(System.Double)
  commentId: M:netDxf.BezierCurve.CalculatePoint(System.Double)
  parent: netDxf.BezierCurve
  isExternal: true
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_CalculatePoint_System_Double_
  name: CalculatePoint(double)
  nameWithType: BezierCurve.CalculatePoint(double)
  fullName: netDxf.BezierCurve.CalculatePoint(double)
  nameWithType.vb: BezierCurve.CalculatePoint(Double)
  fullName.vb: netDxf.BezierCurve.CalculatePoint(Double)
  name.vb: CalculatePoint(Double)
  spec.csharp:
  - uid: netDxf.BezierCurve.CalculatePoint(System.Double)
    name: CalculatePoint
    href: netDxf.BezierCurve.html#netDxf_BezierCurve_CalculatePoint_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: netDxf.BezierCurve.CalculatePoint(System.Double)
    name: CalculatePoint
    href: netDxf.BezierCurve.html#netDxf_BezierCurve_CalculatePoint_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: netDxf.BezierCurveCubic.CalculatePoint*
  commentId: Overload:netDxf.BezierCurveCubic.CalculatePoint
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_CalculatePoint_System_Double_
  name: CalculatePoint
  nameWithType: BezierCurveCubic.CalculatePoint
  fullName: netDxf.BezierCurveCubic.CalculatePoint
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.BezierCurve.CalculateTangent(System.Double)
  commentId: M:netDxf.BezierCurve.CalculateTangent(System.Double)
  parent: netDxf.BezierCurve
  isExternal: true
  href: netDxf.BezierCurve.html#netDxf_BezierCurve_CalculateTangent_System_Double_
  name: CalculateTangent(double)
  nameWithType: BezierCurve.CalculateTangent(double)
  fullName: netDxf.BezierCurve.CalculateTangent(double)
  nameWithType.vb: BezierCurve.CalculateTangent(Double)
  fullName.vb: netDxf.BezierCurve.CalculateTangent(Double)
  name.vb: CalculateTangent(Double)
  spec.csharp:
  - uid: netDxf.BezierCurve.CalculateTangent(System.Double)
    name: CalculateTangent
    href: netDxf.BezierCurve.html#netDxf_BezierCurve_CalculateTangent_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: netDxf.BezierCurve.CalculateTangent(System.Double)
    name: CalculateTangent
    href: netDxf.BezierCurve.html#netDxf_BezierCurve_CalculateTangent_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: netDxf.BezierCurveCubic.CalculateTangent*
  commentId: Overload:netDxf.BezierCurveCubic.CalculateTangent
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_CalculateTangent_System_Double_
  name: CalculateTangent
  nameWithType: BezierCurveCubic.CalculateTangent
  fullName: netDxf.BezierCurveCubic.CalculateTangent
- uid: netDxf.BezierCurveCubic.Split*
  commentId: Overload:netDxf.BezierCurveCubic.Split
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_Split_System_Double_
  name: Split
  nameWithType: BezierCurveCubic.Split
  fullName: netDxf.BezierCurveCubic.Split
- uid: netDxf.BezierCurveCubic[]
  isExternal: true
  href: netDxf.BezierCurveCubic.html
  name: BezierCurveCubic[]
  nameWithType: BezierCurveCubic[]
  fullName: netDxf.BezierCurveCubic[]
  nameWithType.vb: BezierCurveCubic()
  fullName.vb: netDxf.BezierCurveCubic()
  name.vb: BezierCurveCubic()
  spec.csharp:
  - uid: netDxf.BezierCurveCubic
    name: BezierCurveCubic
    href: netDxf.BezierCurveCubic.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: netDxf.BezierCurveCubic
    name: BezierCurveCubic
    href: netDxf.BezierCurveCubic.html
  - name: (
  - name: )
- uid: netDxf.BezierCurveCubic.Reverse*
  commentId: Overload:netDxf.BezierCurveCubic.Reverse
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_Reverse
  name: Reverse
  nameWithType: BezierCurveCubic.Reverse
  fullName: netDxf.BezierCurveCubic.Reverse
- uid: netDxf.BezierCurveCubic.PolygonalVertexes*
  commentId: Overload:netDxf.BezierCurveCubic.PolygonalVertexes
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_PolygonalVertexes_System_Int32_
  name: PolygonalVertexes
  nameWithType: BezierCurveCubic.PolygonalVertexes
  fullName: netDxf.BezierCurveCubic.PolygonalVertexes
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{netDxf.Vector3}
  commentId: T:System.Collections.Generic.List{netDxf.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<netDxf.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of netDxf.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.BezierCurveCubic.CreateFromFitPoints*
  commentId: Overload:netDxf.BezierCurveCubic.CreateFromFitPoints
  href: netDxf.BezierCurveCubic.html#netDxf_BezierCurveCubic_CreateFromFitPoints_System_Collections_Generic_IEnumerable_netDxf_Vector3__
  name: CreateFromFitPoints
  nameWithType: BezierCurveCubic.CreateFromFitPoints
  fullName: netDxf.BezierCurveCubic.CreateFromFitPoints
- uid: System.Collections.Generic.List{netDxf.BezierCurveCubic}
  commentId: T:System.Collections.Generic.List{netDxf.BezierCurveCubic}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<BezierCurveCubic>
  nameWithType: List<BezierCurveCubic>
  fullName: System.Collections.Generic.List<netDxf.BezierCurveCubic>
  nameWithType.vb: List(Of BezierCurveCubic)
  fullName.vb: System.Collections.Generic.List(Of netDxf.BezierCurveCubic)
  name.vb: List(Of BezierCurveCubic)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.BezierCurveCubic
    name: BezierCurveCubic
    href: netDxf.BezierCurveCubic.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.BezierCurveCubic
    name: BezierCurveCubic
    href: netDxf.BezierCurveCubic.html
  - name: )
