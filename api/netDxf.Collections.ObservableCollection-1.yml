### YamlMime:ManagedReference
items:
- uid: netDxf.Collections.ObservableCollection`1
  commentId: T:netDxf.Collections.ObservableCollection`1
  id: ObservableCollection`1
  parent: netDxf.Collections
  children:
  - netDxf.Collections.ObservableCollection`1.#ctor
  - netDxf.Collections.ObservableCollection`1.#ctor(System.Int32)
  - netDxf.Collections.ObservableCollection`1.Add(`0)
  - netDxf.Collections.ObservableCollection`1.AddItem
  - netDxf.Collections.ObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - netDxf.Collections.ObservableCollection`1.BeforeAddItem
  - netDxf.Collections.ObservableCollection`1.BeforeRemoveItem
  - netDxf.Collections.ObservableCollection`1.Clear
  - netDxf.Collections.ObservableCollection`1.Contains(`0)
  - netDxf.Collections.ObservableCollection`1.CopyTo(`0[],System.Int32)
  - netDxf.Collections.ObservableCollection`1.Count
  - netDxf.Collections.ObservableCollection`1.GetEnumerator
  - netDxf.Collections.ObservableCollection`1.IndexOf(`0)
  - netDxf.Collections.ObservableCollection`1.Insert(System.Int32,`0)
  - netDxf.Collections.ObservableCollection`1.IsReadOnly
  - netDxf.Collections.ObservableCollection`1.Item(System.Int32)
  - netDxf.Collections.ObservableCollection`1.OnAddItemEvent(`0)
  - netDxf.Collections.ObservableCollection`1.OnBeforeAddItemEvent(`0)
  - netDxf.Collections.ObservableCollection`1.OnBeforeRemoveItemEvent(`0)
  - netDxf.Collections.ObservableCollection`1.OnRemoveItemEvent(`0)
  - netDxf.Collections.ObservableCollection`1.Remove(System.Collections.Generic.IEnumerable{`0})
  - netDxf.Collections.ObservableCollection`1.Remove(`0)
  - netDxf.Collections.ObservableCollection`1.RemoveAt(System.Int32)
  - netDxf.Collections.ObservableCollection`1.RemoveItem
  - netDxf.Collections.ObservableCollection`1.Reverse
  - netDxf.Collections.ObservableCollection`1.Sort
  - netDxf.Collections.ObservableCollection`1.Sort(System.Collections.Generic.IComparer{`0})
  - netDxf.Collections.ObservableCollection`1.Sort(System.Comparison{`0})
  - netDxf.Collections.ObservableCollection`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  langs:
  - csharp
  - vb
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: netDxf.Collections.ObservableCollection<T>
  type: Class
  source:
    id: ObservableCollection
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Represent a collection of items that fire events when it is modified.
  example: []
  syntax:
    content: 'public class ObservableCollection<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
      description: Type of items.
    content.vb: Public Class ObservableCollection(Of T) Implements IList(Of T), ICollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
- uid: netDxf.Collections.ObservableCollection`1.BeforeAddItem
  commentId: E:netDxf.Collections.ObservableCollection`1.BeforeAddItem
  id: BeforeAddItem
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: BeforeAddItem
  nameWithType: ObservableCollection<T>.BeforeAddItem
  fullName: netDxf.Collections.ObservableCollection<T>.BeforeAddItem
  type: Event
  source:
    id: BeforeAddItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 48
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event ObservableCollection<T>.BeforeAddItemEventHandler BeforeAddItem
    return:
      type: netDxf.Collections.ObservableCollection`1.BeforeAddItemEventHandler
    content.vb: Public Event BeforeAddItem As ObservableCollection(Of T).BeforeAddItemEventHandler
  nameWithType.vb: ObservableCollection(Of T).BeforeAddItem
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).BeforeAddItem
- uid: netDxf.Collections.ObservableCollection`1.AddItem
  commentId: E:netDxf.Collections.ObservableCollection`1.AddItem
  id: AddItem
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: AddItem
  nameWithType: ObservableCollection<T>.AddItem
  fullName: netDxf.Collections.ObservableCollection<T>.AddItem
  type: Event
  source:
    id: AddItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 49
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event ObservableCollection<T>.AddItemEventHandler AddItem
    return:
      type: netDxf.Collections.ObservableCollection`1.AddItemEventHandler
    content.vb: Public Event AddItem As ObservableCollection(Of T).AddItemEventHandler
  nameWithType.vb: ObservableCollection(Of T).AddItem
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).AddItem
- uid: netDxf.Collections.ObservableCollection`1.BeforeRemoveItem
  commentId: E:netDxf.Collections.ObservableCollection`1.BeforeRemoveItem
  id: BeforeRemoveItem
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: BeforeRemoveItem
  nameWithType: ObservableCollection<T>.BeforeRemoveItem
  fullName: netDxf.Collections.ObservableCollection<T>.BeforeRemoveItem
  type: Event
  source:
    id: BeforeRemoveItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 50
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event ObservableCollection<T>.BeforeRemoveItemEventHandler BeforeRemoveItem
    return:
      type: netDxf.Collections.ObservableCollection`1.BeforeRemoveItemEventHandler
    content.vb: Public Event BeforeRemoveItem As ObservableCollection(Of T).BeforeRemoveItemEventHandler
  nameWithType.vb: ObservableCollection(Of T).BeforeRemoveItem
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).BeforeRemoveItem
- uid: netDxf.Collections.ObservableCollection`1.RemoveItem
  commentId: E:netDxf.Collections.ObservableCollection`1.RemoveItem
  id: RemoveItem
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: RemoveItem
  nameWithType: ObservableCollection<T>.RemoveItem
  fullName: netDxf.Collections.ObservableCollection<T>.RemoveItem
  type: Event
  source:
    id: RemoveItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 51
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event ObservableCollection<T>.RemoveItemEventHandler RemoveItem
    return:
      type: netDxf.Collections.ObservableCollection`1.RemoveItemEventHandler
    content.vb: Public Event RemoveItem As ObservableCollection(Of T).RemoveItemEventHandler
  nameWithType.vb: ObservableCollection(Of T).RemoveItem
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).RemoveItem
- uid: netDxf.Collections.ObservableCollection`1.OnAddItemEvent(`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.OnAddItemEvent(`0)
  id: OnAddItemEvent(`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: OnAddItemEvent(T)
  nameWithType: ObservableCollection<T>.OnAddItemEvent(T)
  fullName: netDxf.Collections.ObservableCollection<T>.OnAddItemEvent(T)
  type: Method
  source:
    id: OnAddItemEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 53
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: protected virtual void OnAddItemEvent(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Protected Overridable Sub OnAddItemEvent(item As T)
  overload: netDxf.Collections.ObservableCollection`1.OnAddItemEvent*
  nameWithType.vb: ObservableCollection(Of T).OnAddItemEvent(T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).OnAddItemEvent(T)
- uid: netDxf.Collections.ObservableCollection`1.OnBeforeAddItemEvent(`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.OnBeforeAddItemEvent(`0)
  id: OnBeforeAddItemEvent(`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: OnBeforeAddItemEvent(T)
  nameWithType: ObservableCollection<T>.OnBeforeAddItemEvent(T)
  fullName: netDxf.Collections.ObservableCollection<T>.OnBeforeAddItemEvent(T)
  type: Method
  source:
    id: OnBeforeAddItemEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 62
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: protected virtual bool OnBeforeAddItemEvent(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function OnBeforeAddItemEvent(item As T) As Boolean
  overload: netDxf.Collections.ObservableCollection`1.OnBeforeAddItemEvent*
  nameWithType.vb: ObservableCollection(Of T).OnBeforeAddItemEvent(T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).OnBeforeAddItemEvent(T)
- uid: netDxf.Collections.ObservableCollection`1.OnBeforeRemoveItemEvent(`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.OnBeforeRemoveItemEvent(`0)
  id: OnBeforeRemoveItemEvent(`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: OnBeforeRemoveItemEvent(T)
  nameWithType: ObservableCollection<T>.OnBeforeRemoveItemEvent(T)
  fullName: netDxf.Collections.ObservableCollection<T>.OnBeforeRemoveItemEvent(T)
  type: Method
  source:
    id: OnBeforeRemoveItemEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 74
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: protected virtual bool OnBeforeRemoveItemEvent(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function OnBeforeRemoveItemEvent(item As T) As Boolean
  overload: netDxf.Collections.ObservableCollection`1.OnBeforeRemoveItemEvent*
  nameWithType.vb: ObservableCollection(Of T).OnBeforeRemoveItemEvent(T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).OnBeforeRemoveItemEvent(T)
- uid: netDxf.Collections.ObservableCollection`1.OnRemoveItemEvent(`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.OnRemoveItemEvent(`0)
  id: OnRemoveItemEvent(`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: OnRemoveItemEvent(T)
  nameWithType: ObservableCollection<T>.OnRemoveItemEvent(T)
  fullName: netDxf.Collections.ObservableCollection<T>.OnRemoveItemEvent(T)
  type: Method
  source:
    id: OnRemoveItemEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 86
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: protected virtual void OnRemoveItemEvent(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Protected Overridable Sub OnRemoveItemEvent(item As T)
  overload: netDxf.Collections.ObservableCollection`1.OnRemoveItemEvent*
  nameWithType.vb: ObservableCollection(Of T).OnRemoveItemEvent(T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).OnRemoveItemEvent(T)
- uid: netDxf.Collections.ObservableCollection`1.#ctor
  commentId: M:netDxf.Collections.ObservableCollection`1.#ctor
  id: '#ctor'
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: ObservableCollection()
  nameWithType: ObservableCollection<T>.ObservableCollection()
  fullName: netDxf.Collections.ObservableCollection<T>.ObservableCollection()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 108
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>ObservableCollection</code>.
  example: []
  syntax:
    content: public ObservableCollection()
    content.vb: Public Sub New()
  overload: netDxf.Collections.ObservableCollection`1.#ctor*
  nameWithType.vb: ObservableCollection(Of T).New()
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).New()
  name.vb: New()
- uid: netDxf.Collections.ObservableCollection`1.#ctor(System.Int32)
  commentId: M:netDxf.Collections.ObservableCollection`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: ObservableCollection(int)
  nameWithType: ObservableCollection<T>.ObservableCollection(int)
  fullName: netDxf.Collections.ObservableCollection<T>.ObservableCollection(int)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 117
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>ObservableCollection</code> and has the specified initial capacity.
  example: []
  syntax:
    content: public ObservableCollection(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
      description: The number of items the collection can initially store.
    content.vb: Public Sub New(capacity As Integer)
  overload: netDxf.Collections.ObservableCollection`1.#ctor*
  nameWithType.vb: ObservableCollection(Of T).New(Integer)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).New(Integer)
  name.vb: New(Integer)
- uid: netDxf.Collections.ObservableCollection`1.Item(System.Int32)
  commentId: P:netDxf.Collections.ObservableCollection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: ObservableCollection<T>.this[int]
  fullName: netDxf.Collections.ObservableCollection<T>.this[int]
  type: Property
  source:
    id: this[]
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 135
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets or sets the object at the specified index.
  example: []
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: '{T}'
      description: The object at the specified index.
    content.vb: Public Default Property this[](index As Integer) As T
  overload: netDxf.Collections.ObservableCollection`1.Item*
  implements:
  - System.Collections.Generic.IList{{T}}.Item(System.Int32)
  nameWithType.vb: ObservableCollection(Of T).this[](Integer)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).this[](Integer)
  name.vb: this[](Integer)
- uid: netDxf.Collections.ObservableCollection`1.Count
  commentId: P:netDxf.Collections.ObservableCollection`1.Count
  id: Count
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ObservableCollection<T>.Count
  fullName: netDxf.Collections.ObservableCollection<T>.Count
  type: Property
  source:
    id: Count
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 162
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the number of object contained in the collection.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: netDxf.Collections.ObservableCollection`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  nameWithType.vb: ObservableCollection(Of T).Count
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Count
- uid: netDxf.Collections.ObservableCollection`1.IsReadOnly
  commentId: P:netDxf.Collections.ObservableCollection`1.IsReadOnly
  id: IsReadOnly
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ObservableCollection<T>.IsReadOnly
  fullName: netDxf.Collections.ObservableCollection<T>.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 170
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets a value indicating whether the collection is read-only.
  example: []
  syntax:
    content: public virtual bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
  overload: netDxf.Collections.ObservableCollection`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  nameWithType.vb: ObservableCollection(Of T).IsReadOnly
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).IsReadOnly
- uid: netDxf.Collections.ObservableCollection`1.Reverse
  commentId: M:netDxf.Collections.ObservableCollection`1.Reverse
  id: Reverse
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: ObservableCollection<T>.Reverse()
  fullName: netDxf.Collections.ObservableCollection<T>.Reverse()
  type: Method
  source:
    id: Reverse
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 182
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Reverses the order of the elements in the entire list.
  example: []
  syntax:
    content: public void Reverse()
    content.vb: Public Sub Reverse()
  overload: netDxf.Collections.ObservableCollection`1.Reverse*
  nameWithType.vb: ObservableCollection(Of T).Reverse()
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Reverse()
- uid: netDxf.Collections.ObservableCollection`1.Sort(System.Comparison{`0})
  commentId: M:netDxf.Collections.ObservableCollection`1.Sort(System.Comparison{`0})
  id: Sort(System.Comparison{`0})
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Sort(Comparison<T>)
  nameWithType: ObservableCollection<T>.Sort(Comparison<T>)
  fullName: netDxf.Collections.ObservableCollection<T>.Sort(System.Comparison<T>)
  type: Method
  source:
    id: Sort
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 191
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Sorts the elements in the entire System.Collections.Generic.List&lt;T&gt; using the specified System.Comparison&lt;T&gt;.
  example: []
  syntax:
    content: public void Sort(Comparison<T> comparision)
    parameters:
    - id: comparision
      type: System.Comparison{{T}}
      description: The System.Comparison&lt;T&gt; to use when comparing elements.
    content.vb: Public Sub Sort(comparision As Comparison(Of T))
  overload: netDxf.Collections.ObservableCollection`1.Sort*
  nameWithType.vb: ObservableCollection(Of T).Sort(Comparison(Of T))
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
- uid: netDxf.Collections.ObservableCollection`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:netDxf.Collections.ObservableCollection`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  id: Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Sort(int, int, IComparer<T>)
  nameWithType: ObservableCollection<T>.Sort(int, int, IComparer<T>)
  fullName: netDxf.Collections.ObservableCollection<T>.Sort(int, int, System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    id: Sort
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 202
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Sorts the elements in a range of elements in System.Collections.Generic.List&lt;T&gt; using the specified comparer.
  example: []
  syntax:
    content: public void Sort(int index, int count, IComparer<T> comparer)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based starting index of the range to sort.
    - id: count
      type: System.Int32
      description: The length of the range to sort.
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The System.Collections.Generic.IComparer&lt;T&gt; implementation to use when comparing elements, or null to use the default comparer System.Collections.Generic.Comparer&lt;T&gt;.Default.
    content.vb: Public Sub Sort(index As Integer, count As Integer, comparer As IComparer(Of T))
  overload: netDxf.Collections.ObservableCollection`1.Sort*
  nameWithType.vb: ObservableCollection(Of T).Sort(Integer, Integer, IComparer(Of T))
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Sort(Integer, Integer, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Integer, Integer, IComparer(Of T))
- uid: netDxf.Collections.ObservableCollection`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:netDxf.Collections.ObservableCollection`1.Sort(System.Collections.Generic.IComparer{`0})
  id: Sort(System.Collections.Generic.IComparer{`0})
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Sort(IComparer<T>)
  nameWithType: ObservableCollection<T>.Sort(IComparer<T>)
  fullName: netDxf.Collections.ObservableCollection<T>.Sort(System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    id: Sort
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 211
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Sorts the elements in a range of elements in System.Collections.Generic.List&lt;T&gt; using the specified comparer.
  example: []
  syntax:
    content: public void Sort(IComparer<T> comparer)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The System.Collections.Generic.IComparer&lt;T&gt; implementation to use when comparing elements, or null to use the default comparer System.Collections.Generic.Comparer&lt;T&gt;.Default.
    content.vb: Public Sub Sort(comparer As IComparer(Of T))
  overload: netDxf.Collections.ObservableCollection`1.Sort*
  nameWithType.vb: ObservableCollection(Of T).Sort(IComparer(Of T))
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
- uid: netDxf.Collections.ObservableCollection`1.Sort
  commentId: M:netDxf.Collections.ObservableCollection`1.Sort
  id: Sort
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Sort()
  nameWithType: ObservableCollection<T>.Sort()
  fullName: netDxf.Collections.ObservableCollection<T>.Sort()
  type: Method
  source:
    id: Sort
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 219
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Sorts the elements in the entire System.Collections.Generic.List&lt;T&gt; using the default comparer.
  example: []
  syntax:
    content: public void Sort()
    content.vb: Public Sub Sort()
  overload: netDxf.Collections.ObservableCollection`1.Sort*
  nameWithType.vb: ObservableCollection(Of T).Sort()
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Sort()
- uid: netDxf.Collections.ObservableCollection`1.Add(`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.Add(`0)
  id: Add(`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: ObservableCollection<T>.Add(T)
  fullName: netDxf.Collections.ObservableCollection<T>.Add(T)
  type: Method
  source:
    id: Add
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 229
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds an object to the collection.
  example: []
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to add to the collection.
    content.vb: Public Sub Add(item As T)
  overload: netDxf.Collections.ObservableCollection`1.Add*
  nameWithType.vb: ObservableCollection(Of T).Add(T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Add(T)
- uid: netDxf.Collections.ObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:netDxf.Collections.ObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<T>)
  nameWithType: ObservableCollection<T>.AddRange(IEnumerable<T>)
  fullName: netDxf.Collections.ObservableCollection<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    id: AddRange
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 243
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds an object list to the end of the collection.
  example: []
  syntax:
    content: public void AddRange(IEnumerable<T> collection)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection whose elements should be added.
    content.vb: Public Sub AddRange(collection As IEnumerable(Of T))
  overload: netDxf.Collections.ObservableCollection`1.AddRange*
  nameWithType.vb: ObservableCollection(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
- uid: netDxf.Collections.ObservableCollection`1.Insert(System.Int32,`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Insert(int, T)
  nameWithType: ObservableCollection<T>.Insert(int, T)
  fullName: netDxf.Collections.ObservableCollection<T>.Insert(int, T)
  type: Method
  source:
    id: Insert
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 262
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Inserts an object into the collection at the specified index.
  example: []
  syntax:
    content: public void Insert(int index, T item)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which item should be inserted.
    - id: item
      type: '{T}'
      description: The object to insert. The value can not be null.
    content.vb: Public Sub Insert(index As Integer, item As T)
  overload: netDxf.Collections.ObservableCollection`1.Insert*
  nameWithType.vb: ObservableCollection(Of T).Insert(Integer, T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
- uid: netDxf.Collections.ObservableCollection`1.Remove(`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.Remove(`0)
  id: Remove(`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: ObservableCollection<T>.Remove(T)
  fullName: netDxf.Collections.ObservableCollection<T>.Remove(T)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 289
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the first occurrence of a specific object from the collection
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to remove from the collection.
    return:
      type: System.Boolean
      description: True if object is successfully removed; otherwise, false.
    content.vb: Public Function Remove(item As T) As Boolean
  overload: netDxf.Collections.ObservableCollection`1.Remove*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: ObservableCollection(Of T).Remove(T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Remove(T)
- uid: netDxf.Collections.ObservableCollection`1.Remove(System.Collections.Generic.IEnumerable{`0})
  commentId: M:netDxf.Collections.ObservableCollection`1.Remove(System.Collections.Generic.IEnumerable{`0})
  id: Remove(System.Collections.Generic.IEnumerable{`0})
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Remove(IEnumerable<T>)
  nameWithType: ObservableCollection<T>.Remove(IEnumerable<T>)
  fullName: netDxf.Collections.ObservableCollection<T>.Remove(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 310
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the first occurrence of a specific object from the collection
  example: []
  syntax:
    content: public void Remove(IEnumerable<T> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The list of objects to remove from the collection.
    content.vb: Public Sub Remove(items As IEnumerable(Of T))
  overload: netDxf.Collections.ObservableCollection`1.Remove*
  nameWithType.vb: ObservableCollection(Of T).Remove(IEnumerable(Of T))
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Remove(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Remove(IEnumerable(Of T))
- uid: netDxf.Collections.ObservableCollection`1.RemoveAt(System.Int32)
  commentId: M:netDxf.Collections.ObservableCollection`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: ObservableCollection<T>.RemoveAt(int)
  fullName: netDxf.Collections.ObservableCollection<T>.RemoveAt(int)
  type: Method
  source:
    id: RemoveAt
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 327
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the object at the specified index of the collection.
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the object to remove.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: netDxf.Collections.ObservableCollection`1.RemoveAt*
  implements:
  - System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  nameWithType.vb: ObservableCollection(Of T).RemoveAt(Integer)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: netDxf.Collections.ObservableCollection`1.Clear
  commentId: M:netDxf.Collections.ObservableCollection`1.Clear
  id: Clear
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ObservableCollection<T>.Clear()
  fullName: netDxf.Collections.ObservableCollection<T>.Clear()
  type: Method
  source:
    id: Clear
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 347
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes all object from the collection.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: netDxf.Collections.ObservableCollection`1.Clear*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: ObservableCollection(Of T).Clear()
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Clear()
- uid: netDxf.Collections.ObservableCollection`1.IndexOf(`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: ObservableCollection<T>.IndexOf(T)
  fullName: netDxf.Collections.ObservableCollection<T>.IndexOf(T)
  type: Method
  source:
    id: IndexOf
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 362
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Searches for the specified object and returns the zero-based index of the first occurrence within the entire collection.
  example: []
  syntax:
    content: public int IndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the collection.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, –1.
    content.vb: Public Function IndexOf(item As T) As Integer
  overload: netDxf.Collections.ObservableCollection`1.IndexOf*
  implements:
  - System.Collections.Generic.IList{{T}}.IndexOf({T})
  nameWithType.vb: ObservableCollection(Of T).IndexOf(T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).IndexOf(T)
- uid: netDxf.Collections.ObservableCollection`1.Contains(`0)
  commentId: M:netDxf.Collections.ObservableCollection`1.Contains(`0)
  id: Contains(`0)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: ObservableCollection<T>.Contains(T)
  fullName: netDxf.Collections.ObservableCollection<T>.Contains(T)
  type: Method
  source:
    id: Contains
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 372
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Determines whether an object is in the collection.
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the collection.
    return:
      type: System.Boolean
      description: True if item is found in the collection; otherwise, false.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: netDxf.Collections.ObservableCollection`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: ObservableCollection(Of T).Contains(T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Contains(T)
- uid: netDxf.Collections.ObservableCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:netDxf.Collections.ObservableCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: ObservableCollection<T>.CopyTo(T[], int)
  fullName: netDxf.Collections.ObservableCollection<T>.CopyTo(T[], int)
  type: Method
  source:
    id: CopyTo
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 382
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
      description: The one-dimensional System.Array that is the destination of the elements copied from the collection. The System.Array must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in array at which copying begins.
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: netDxf.Collections.ObservableCollection`1.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: ObservableCollection(Of T).CopyTo(T(), Integer)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: netDxf.Collections.ObservableCollection`1.GetEnumerator
  commentId: M:netDxf.Collections.ObservableCollection`1.GetEnumerator
  id: GetEnumerator
  parent: netDxf.Collections.ObservableCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ObservableCollection<T>.GetEnumerator()
  fullName: netDxf.Collections.ObservableCollection<T>.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableCollection.cs
    startLine: 391
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: netDxf.Collections.ObservableCollection`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: ObservableCollection(Of T).GetEnumerator()
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).GetEnumerator()
references:
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: netDxf.Collections.ObservableCollection`1.BeforeAddItemEventHandler
  commentId: T:netDxf.Collections.ObservableCollection`1.BeforeAddItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableCollection-1.html
  name: ObservableCollection<T>.BeforeAddItemEventHandler
  nameWithType: ObservableCollection<T>.BeforeAddItemEventHandler
  fullName: netDxf.Collections.ObservableCollection<T>.BeforeAddItemEventHandler
  nameWithType.vb: ObservableCollection(Of T).BeforeAddItemEventHandler
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).BeforeAddItemEventHandler
  name.vb: ObservableCollection(Of T).BeforeAddItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: netDxf.Collections.ObservableCollection`1.BeforeAddItemEventHandler
    name: BeforeAddItemEventHandler
    href: netDxf.Collections.ObservableCollection-1.BeforeAddItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: netDxf.Collections.ObservableCollection`1.BeforeAddItemEventHandler
    name: BeforeAddItemEventHandler
    href: netDxf.Collections.ObservableCollection-1.BeforeAddItemEventHandler.html
- uid: netDxf.Collections.ObservableCollection`1.AddItemEventHandler
  commentId: T:netDxf.Collections.ObservableCollection`1.AddItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableCollection-1.html
  name: ObservableCollection<T>.AddItemEventHandler
  nameWithType: ObservableCollection<T>.AddItemEventHandler
  fullName: netDxf.Collections.ObservableCollection<T>.AddItemEventHandler
  nameWithType.vb: ObservableCollection(Of T).AddItemEventHandler
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).AddItemEventHandler
  name.vb: ObservableCollection(Of T).AddItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: netDxf.Collections.ObservableCollection`1.AddItemEventHandler
    name: AddItemEventHandler
    href: netDxf.Collections.ObservableCollection-1.AddItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: netDxf.Collections.ObservableCollection`1.AddItemEventHandler
    name: AddItemEventHandler
    href: netDxf.Collections.ObservableCollection-1.AddItemEventHandler.html
- uid: netDxf.Collections.ObservableCollection`1.BeforeRemoveItemEventHandler
  commentId: T:netDxf.Collections.ObservableCollection`1.BeforeRemoveItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableCollection-1.html
  name: ObservableCollection<T>.BeforeRemoveItemEventHandler
  nameWithType: ObservableCollection<T>.BeforeRemoveItemEventHandler
  fullName: netDxf.Collections.ObservableCollection<T>.BeforeRemoveItemEventHandler
  nameWithType.vb: ObservableCollection(Of T).BeforeRemoveItemEventHandler
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).BeforeRemoveItemEventHandler
  name.vb: ObservableCollection(Of T).BeforeRemoveItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: netDxf.Collections.ObservableCollection`1.BeforeRemoveItemEventHandler
    name: BeforeRemoveItemEventHandler
    href: netDxf.Collections.ObservableCollection-1.BeforeRemoveItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: netDxf.Collections.ObservableCollection`1.BeforeRemoveItemEventHandler
    name: BeforeRemoveItemEventHandler
    href: netDxf.Collections.ObservableCollection-1.BeforeRemoveItemEventHandler.html
- uid: netDxf.Collections.ObservableCollection`1.RemoveItemEventHandler
  commentId: T:netDxf.Collections.ObservableCollection`1.RemoveItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableCollection-1.html
  name: ObservableCollection<T>.RemoveItemEventHandler
  nameWithType: ObservableCollection<T>.RemoveItemEventHandler
  fullName: netDxf.Collections.ObservableCollection<T>.RemoveItemEventHandler
  nameWithType.vb: ObservableCollection(Of T).RemoveItemEventHandler
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).RemoveItemEventHandler
  name.vb: ObservableCollection(Of T).RemoveItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: netDxf.Collections.ObservableCollection`1.RemoveItemEventHandler
    name: RemoveItemEventHandler
    href: netDxf.Collections.ObservableCollection-1.RemoveItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: netDxf.Collections.ObservableCollection`1.RemoveItemEventHandler
    name: RemoveItemEventHandler
    href: netDxf.Collections.ObservableCollection-1.RemoveItemEventHandler.html
- uid: netDxf.Collections.ObservableCollection`1.OnAddItemEvent*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.OnAddItemEvent
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_OnAddItemEvent__0_
  name: OnAddItemEvent
  nameWithType: ObservableCollection<T>.OnAddItemEvent
  fullName: netDxf.Collections.ObservableCollection<T>.OnAddItemEvent
  nameWithType.vb: ObservableCollection(Of T).OnAddItemEvent
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).OnAddItemEvent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: netDxf.Collections.ObservableCollection`1.OnBeforeAddItemEvent*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.OnBeforeAddItemEvent
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_OnBeforeAddItemEvent__0_
  name: OnBeforeAddItemEvent
  nameWithType: ObservableCollection<T>.OnBeforeAddItemEvent
  fullName: netDxf.Collections.ObservableCollection<T>.OnBeforeAddItemEvent
  nameWithType.vb: ObservableCollection(Of T).OnBeforeAddItemEvent
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).OnBeforeAddItemEvent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Collections.ObservableCollection`1.OnBeforeRemoveItemEvent*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.OnBeforeRemoveItemEvent
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_OnBeforeRemoveItemEvent__0_
  name: OnBeforeRemoveItemEvent
  nameWithType: ObservableCollection<T>.OnBeforeRemoveItemEvent
  fullName: netDxf.Collections.ObservableCollection<T>.OnBeforeRemoveItemEvent
  nameWithType.vb: ObservableCollection(Of T).OnBeforeRemoveItemEvent
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).OnBeforeRemoveItemEvent
- uid: netDxf.Collections.ObservableCollection`1.OnRemoveItemEvent*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.OnRemoveItemEvent
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_OnRemoveItemEvent__0_
  name: OnRemoveItemEvent
  nameWithType: ObservableCollection<T>.OnRemoveItemEvent
  fullName: netDxf.Collections.ObservableCollection<T>.OnRemoveItemEvent
  nameWithType.vb: ObservableCollection(Of T).OnRemoveItemEvent
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).OnRemoveItemEvent
- uid: netDxf.Collections.ObservableCollection`1.#ctor*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.#ctor
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1__ctor
  name: ObservableCollection
  nameWithType: ObservableCollection<T>.ObservableCollection
  fullName: netDxf.Collections.ObservableCollection<T>.ObservableCollection
  nameWithType.vb: ObservableCollection(Of T).New
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.Collections.ObservableCollection`1.Item*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Item
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Item_System_Int32_
  name: this
  nameWithType: ObservableCollection<T>.this
  fullName: netDxf.Collections.ObservableCollection<T>.this
  nameWithType.vb: ObservableCollection(Of T).this[]
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.ObservableCollection`1.Count*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Count
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Count
  name: Count
  nameWithType: ObservableCollection<T>.Count
  fullName: netDxf.Collections.ObservableCollection<T>.Count
  nameWithType.vb: ObservableCollection(Of T).Count
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: netDxf.Collections.ObservableCollection`1.IsReadOnly*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.IsReadOnly
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_IsReadOnly
  name: IsReadOnly
  nameWithType: ObservableCollection<T>.IsReadOnly
  fullName: netDxf.Collections.ObservableCollection<T>.IsReadOnly
  nameWithType.vb: ObservableCollection(Of T).IsReadOnly
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: netDxf.Collections.ObservableCollection`1.Reverse*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Reverse
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Reverse
  name: Reverse
  nameWithType: ObservableCollection<T>.Reverse
  fullName: netDxf.Collections.ObservableCollection<T>.Reverse
  nameWithType.vb: ObservableCollection(Of T).Reverse
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Reverse
- uid: netDxf.Collections.ObservableCollection`1.Sort*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Sort
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Sort_System_Comparison__0__
  name: Sort
  nameWithType: ObservableCollection<T>.Sort
  fullName: netDxf.Collections.ObservableCollection<T>.Sort
  nameWithType.vb: ObservableCollection(Of T).Sort
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Sort
- uid: System.Comparison{{T}}
  commentId: T:System.Comparison{`0}
  parent: System
  definition: System.Comparison`1
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Comparison`1
  commentId: T:System.Comparison`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IComparer{{T}}
  commentId: T:System.Collections.Generic.IComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Collections.ObservableCollection`1.Add*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Add
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Add__0_
  name: Add
  nameWithType: ObservableCollection<T>.Add
  fullName: netDxf.Collections.ObservableCollection<T>.Add
  nameWithType.vb: ObservableCollection(Of T).Add
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Add
- uid: netDxf.Collections.ObservableCollection`1.AddRange*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.AddRange
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_AddRange_System_Collections_Generic_IEnumerable__0__
  name: AddRange
  nameWithType: ObservableCollection<T>.AddRange
  fullName: netDxf.Collections.ObservableCollection<T>.AddRange
  nameWithType.vb: ObservableCollection(Of T).AddRange
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).AddRange
- uid: netDxf.Collections.ObservableCollection`1.Insert*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Insert
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Insert_System_Int32__0_
  name: Insert
  nameWithType: ObservableCollection<T>.Insert
  fullName: netDxf.Collections.ObservableCollection<T>.Insert
  nameWithType.vb: ObservableCollection(Of T).Insert
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Insert
- uid: netDxf.Collections.ObservableCollection`1.Remove*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Remove
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Remove__0_
  name: Remove
  nameWithType: ObservableCollection<T>.Remove
  fullName: netDxf.Collections.ObservableCollection<T>.Remove
  nameWithType.vb: ObservableCollection(Of T).Remove
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.ObservableCollection`1.RemoveAt*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.RemoveAt
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: ObservableCollection<T>.RemoveAt
  fullName: netDxf.Collections.ObservableCollection<T>.RemoveAt
  nameWithType.vb: ObservableCollection(Of T).RemoveAt
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).RemoveAt
- uid: System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.ObservableCollection`1.Clear*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Clear
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Clear
  name: Clear
  nameWithType: ObservableCollection<T>.Clear
  fullName: netDxf.Collections.ObservableCollection<T>.Clear
  nameWithType.vb: ObservableCollection(Of T).Clear
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: netDxf.Collections.ObservableCollection`1.IndexOf*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.IndexOf
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_IndexOf__0_
  name: IndexOf
  nameWithType: ObservableCollection<T>.IndexOf
  fullName: netDxf.Collections.ObservableCollection<T>.IndexOf
  nameWithType.vb: ObservableCollection(Of T).IndexOf
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).IndexOf
- uid: System.Collections.Generic.IList{{T}}.IndexOf({T})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.ObservableCollection`1.Contains*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.Contains
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_Contains__0_
  name: Contains
  nameWithType: ObservableCollection<T>.Contains
  fullName: netDxf.Collections.ObservableCollection<T>.Contains
  nameWithType.vb: ObservableCollection(Of T).Contains
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.ObservableCollection`1.CopyTo*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.CopyTo
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: ObservableCollection<T>.CopyTo
  fullName: netDxf.Collections.ObservableCollection<T>.CopyTo
  nameWithType.vb: ObservableCollection(Of T).CopyTo
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.ObservableCollection`1.GetEnumerator*
  commentId: Overload:netDxf.Collections.ObservableCollection`1.GetEnumerator
  href: netDxf.Collections.ObservableCollection-1.html#netDxf_Collections_ObservableCollection_1_GetEnumerator
  name: GetEnumerator
  nameWithType: ObservableCollection<T>.GetEnumerator
  fullName: netDxf.Collections.ObservableCollection<T>.GetEnumerator
  nameWithType.vb: ObservableCollection(Of T).GetEnumerator
  fullName.vb: netDxf.Collections.ObservableCollection(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
