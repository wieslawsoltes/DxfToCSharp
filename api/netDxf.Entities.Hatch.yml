### YamlMime:ManagedReference
items:
- uid: netDxf.Entities.Hatch
  commentId: T:netDxf.Entities.Hatch
  id: Hatch
  parent: netDxf.Entities
  children:
  - netDxf.Entities.Hatch.#ctor(netDxf.Entities.HatchPattern,System.Boolean)
  - netDxf.Entities.Hatch.#ctor(netDxf.Entities.HatchPattern,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchBoundaryPath},System.Boolean)
  - netDxf.Entities.Hatch.Associative
  - netDxf.Entities.Hatch.BoundaryPaths
  - netDxf.Entities.Hatch.Clone
  - netDxf.Entities.Hatch.CreateBoundary(System.Boolean)
  - netDxf.Entities.Hatch.Elevation
  - netDxf.Entities.Hatch.HatchBoundaryPathAdded
  - netDxf.Entities.Hatch.HatchBoundaryPathRemoved
  - netDxf.Entities.Hatch.OnHatchBoundaryPathAddedEvent(netDxf.Entities.HatchBoundaryPath)
  - netDxf.Entities.Hatch.OnHatchBoundaryPathRemovedEvent(netDxf.Entities.HatchBoundaryPath)
  - netDxf.Entities.Hatch.Pattern
  - netDxf.Entities.Hatch.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  - netDxf.Entities.Hatch.UnLinkBoundary
  langs:
  - csharp
  - vb
  name: Hatch
  nameWithType: Hatch
  fullName: netDxf.Entities.Hatch
  type: Class
  source:
    id: Hatch
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Represents a hatch <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class Hatch : EntityObject, ICloneable'
    content.vb: Public Class Hatch Inherits EntityObject Implements ICloneable
  inheritance:
  - System.Object
  - netDxf.DxfObject
  - netDxf.Entities.EntityObject
  implements:
  - System.ICloneable
  inheritedMembers:
  - netDxf.Entities.EntityObject.LayerChanged
  - netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  - netDxf.Entities.EntityObject.LinetypeChanged
  - netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  - netDxf.Entities.EntityObject.Reactors
  - netDxf.Entities.EntityObject.Type
  - netDxf.Entities.EntityObject.Color
  - netDxf.Entities.EntityObject.Layer
  - netDxf.Entities.EntityObject.Linetype
  - netDxf.Entities.EntityObject.Lineweight
  - netDxf.Entities.EntityObject.Transparency
  - netDxf.Entities.EntityObject.LinetypeScale
  - netDxf.Entities.EntityObject.IsVisible
  - netDxf.Entities.EntityObject.Normal
  - netDxf.Entities.EntityObject.Owner
  - netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  - netDxf.Entities.EntityObject.ToString
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.XData
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Entities.Hatch.HatchBoundaryPathAdded
  commentId: E:netDxf.Entities.Hatch.HatchBoundaryPathAdded
  id: HatchBoundaryPathAdded
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: HatchBoundaryPathAdded
  nameWithType: Hatch.HatchBoundaryPathAdded
  fullName: netDxf.Entities.Hatch.HatchBoundaryPathAdded
  type: Event
  source:
    id: HatchBoundaryPathAdded
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 41
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  syntax:
    content: public event Hatch.HatchBoundaryPathAddedEventHandler HatchBoundaryPathAdded
    return:
      type: netDxf.Entities.Hatch.HatchBoundaryPathAddedEventHandler
    content.vb: Public Event HatchBoundaryPathAdded As Hatch.HatchBoundaryPathAddedEventHandler
- uid: netDxf.Entities.Hatch.OnHatchBoundaryPathAddedEvent(netDxf.Entities.HatchBoundaryPath)
  commentId: M:netDxf.Entities.Hatch.OnHatchBoundaryPathAddedEvent(netDxf.Entities.HatchBoundaryPath)
  id: OnHatchBoundaryPathAddedEvent(netDxf.Entities.HatchBoundaryPath)
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: OnHatchBoundaryPathAddedEvent(HatchBoundaryPath)
  nameWithType: Hatch.OnHatchBoundaryPathAddedEvent(HatchBoundaryPath)
  fullName: netDxf.Entities.Hatch.OnHatchBoundaryPathAddedEvent(netDxf.Entities.HatchBoundaryPath)
  type: Method
  source:
    id: OnHatchBoundaryPathAddedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 42
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  syntax:
    content: protected virtual void OnHatchBoundaryPathAddedEvent(HatchBoundaryPath item)
    parameters:
    - id: item
      type: netDxf.Entities.HatchBoundaryPath
    content.vb: Protected Overridable Sub OnHatchBoundaryPathAddedEvent(item As HatchBoundaryPath)
  overload: netDxf.Entities.Hatch.OnHatchBoundaryPathAddedEvent*
- uid: netDxf.Entities.Hatch.HatchBoundaryPathRemoved
  commentId: E:netDxf.Entities.Hatch.HatchBoundaryPathRemoved
  id: HatchBoundaryPathRemoved
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: HatchBoundaryPathRemoved
  nameWithType: Hatch.HatchBoundaryPathRemoved
  fullName: netDxf.Entities.Hatch.HatchBoundaryPathRemoved
  type: Event
  source:
    id: HatchBoundaryPathRemoved
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 52
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  syntax:
    content: public event Hatch.HatchBoundaryPathRemovedEventHandler HatchBoundaryPathRemoved
    return:
      type: netDxf.Entities.Hatch.HatchBoundaryPathRemovedEventHandler
    content.vb: Public Event HatchBoundaryPathRemoved As Hatch.HatchBoundaryPathRemovedEventHandler
- uid: netDxf.Entities.Hatch.OnHatchBoundaryPathRemovedEvent(netDxf.Entities.HatchBoundaryPath)
  commentId: M:netDxf.Entities.Hatch.OnHatchBoundaryPathRemovedEvent(netDxf.Entities.HatchBoundaryPath)
  id: OnHatchBoundaryPathRemovedEvent(netDxf.Entities.HatchBoundaryPath)
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: OnHatchBoundaryPathRemovedEvent(HatchBoundaryPath)
  nameWithType: Hatch.OnHatchBoundaryPathRemovedEvent(HatchBoundaryPath)
  fullName: netDxf.Entities.Hatch.OnHatchBoundaryPathRemovedEvent(netDxf.Entities.HatchBoundaryPath)
  type: Method
  source:
    id: OnHatchBoundaryPathRemovedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 53
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  syntax:
    content: protected virtual void OnHatchBoundaryPathRemovedEvent(HatchBoundaryPath item)
    parameters:
    - id: item
      type: netDxf.Entities.HatchBoundaryPath
    content.vb: Protected Overridable Sub OnHatchBoundaryPathRemovedEvent(item As HatchBoundaryPath)
  overload: netDxf.Entities.Hatch.OnHatchBoundaryPathRemovedEvent*
- uid: netDxf.Entities.Hatch.#ctor(netDxf.Entities.HatchPattern,System.Boolean)
  commentId: M:netDxf.Entities.Hatch.#ctor(netDxf.Entities.HatchPattern,System.Boolean)
  id: '#ctor(netDxf.Entities.HatchPattern,System.Boolean)'
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: Hatch(HatchPattern, bool)
  nameWithType: Hatch.Hatch(HatchPattern, bool)
  fullName: netDxf.Entities.Hatch.Hatch(netDxf.Entities.HatchPattern, bool)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 87
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>Hatch</code> class.
  remarks: >-
    This constructor is initialized with an empty list of boundary paths, remember a hatch without boundaries will be discarded when saving the file.<br />

    When creating an associative hatch do not add the entities that make the boundary to the document, it will be done automatically. Doing so will throw an exception.<br />

    The hatch boundary paths must be on the same plane as the hatch.

    The normal and the elevation of the boundary paths will be omitted (the hatch elevation and normal will be used instead).

    Only the x and y coordinates for the center of the line, ellipse, circle and arc will be used.
  example: []
  syntax:
    content: public Hatch(HatchPattern pattern, bool associative)
    parameters:
    - id: pattern
      type: netDxf.Entities.HatchPattern
      description: <xref href="netDxf.Entities.HatchPattern?text=Hatch+pattern" data-throw-if-not-resolved="false"></xref>.
    - id: associative
      type: System.Boolean
      description: Defines if the hatch is associative or not.
    content.vb: Public Sub New(pattern As HatchPattern, associative As Boolean)
  overload: netDxf.Entities.Hatch.#ctor*
  nameWithType.vb: Hatch.New(HatchPattern, Boolean)
  fullName.vb: netDxf.Entities.Hatch.New(netDxf.Entities.HatchPattern, Boolean)
  name.vb: New(HatchPattern, Boolean)
- uid: netDxf.Entities.Hatch.#ctor(netDxf.Entities.HatchPattern,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchBoundaryPath},System.Boolean)
  commentId: M:netDxf.Entities.Hatch.#ctor(netDxf.Entities.HatchPattern,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchBoundaryPath},System.Boolean)
  id: '#ctor(netDxf.Entities.HatchPattern,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchBoundaryPath},System.Boolean)'
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: Hatch(HatchPattern, IEnumerable<HatchBoundaryPath>, bool)
  nameWithType: Hatch.Hatch(HatchPattern, IEnumerable<HatchBoundaryPath>, bool)
  fullName: netDxf.Entities.Hatch.Hatch(netDxf.Entities.HatchPattern, System.Collections.Generic.IEnumerable<netDxf.Entities.HatchBoundaryPath>, bool)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 110
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>Hatch</code> class.
  remarks: >-
    The hatch boundary paths must be on the same plane as the hatch.

    The normal and the elevation of the boundary paths will be omitted (the hatch elevation and normal will be used instead).

    Only the x and y coordinates for the center of the line, ellipse, circle and arc will be used.
  example: []
  syntax:
    content: public Hatch(HatchPattern pattern, IEnumerable<HatchBoundaryPath> paths, bool associative)
    parameters:
    - id: pattern
      type: netDxf.Entities.HatchPattern
      description: <xref href="netDxf.Entities.HatchPattern?text=Hatch+pattern" data-throw-if-not-resolved="false"></xref>.
    - id: paths
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.HatchBoundaryPath}
      description: A list of <xref href="netDxf.Entities.HatchBoundaryPath?text=boundary+paths" data-throw-if-not-resolved="false"></xref>.
    - id: associative
      type: System.Boolean
      description: Defines if the hatch is associative or not.
    content.vb: Public Sub New(pattern As HatchPattern, paths As IEnumerable(Of HatchBoundaryPath), associative As Boolean)
  overload: netDxf.Entities.Hatch.#ctor*
  nameWithType.vb: Hatch.New(HatchPattern, IEnumerable(Of HatchBoundaryPath), Boolean)
  fullName.vb: netDxf.Entities.Hatch.New(netDxf.Entities.HatchPattern, System.Collections.Generic.IEnumerable(Of netDxf.Entities.HatchBoundaryPath), Boolean)
  name.vb: New(HatchPattern, IEnumerable(Of HatchBoundaryPath), Boolean)
- uid: netDxf.Entities.Hatch.Pattern
  commentId: P:netDxf.Entities.Hatch.Pattern
  id: Pattern
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: Pattern
  nameWithType: Hatch.Pattern
  fullName: netDxf.Entities.Hatch.Pattern
  type: Property
  source:
    id: Pattern
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 155
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the hatch pattern.
  example: []
  syntax:
    content: public HatchPattern Pattern { get; set; }
    parameters: []
    return:
      type: netDxf.Entities.HatchPattern
    content.vb: Public Property Pattern As HatchPattern
  overload: netDxf.Entities.Hatch.Pattern*
- uid: netDxf.Entities.Hatch.BoundaryPaths
  commentId: P:netDxf.Entities.Hatch.BoundaryPaths
  id: BoundaryPaths
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: BoundaryPaths
  nameWithType: Hatch.BoundaryPaths
  fullName: netDxf.Entities.Hatch.BoundaryPaths
  type: Property
  source:
    id: BoundaryPaths
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 170
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the hatch boundary paths.
  remarks: The hatch must contain at least on valid boundary path to be able to add it to the DxfDocument, otherwise it will be rejected.
  example: []
  syntax:
    content: public ObservableCollection<HatchBoundaryPath> BoundaryPaths { get; }
    parameters: []
    return:
      type: netDxf.Collections.ObservableCollection{netDxf.Entities.HatchBoundaryPath}
    content.vb: Public ReadOnly Property BoundaryPaths As ObservableCollection(Of HatchBoundaryPath)
  overload: netDxf.Entities.Hatch.BoundaryPaths*
- uid: netDxf.Entities.Hatch.Associative
  commentId: P:netDxf.Entities.Hatch.Associative
  id: Associative
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: Associative
  nameWithType: Hatch.Associative
  fullName: netDxf.Entities.Hatch.Associative
  type: Property
  source:
    id: Associative
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 178
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets if the hatch is associative or not, which means if the hatch object is associated with the hatch boundary entities.
  example: []
  syntax:
    content: public bool Associative { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Associative As Boolean
  overload: netDxf.Entities.Hatch.Associative*
- uid: netDxf.Entities.Hatch.Elevation
  commentId: P:netDxf.Entities.Hatch.Elevation
  id: Elevation
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: Elevation
  nameWithType: Hatch.Elevation
  fullName: netDxf.Entities.Hatch.Elevation
  type: Property
  source:
    id: Elevation
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 186
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the hatch elevation, its position along its normal.
  example: []
  syntax:
    content: public double Elevation { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Elevation As Double
  overload: netDxf.Entities.Hatch.Elevation*
- uid: netDxf.Entities.Hatch.UnLinkBoundary
  commentId: M:netDxf.Entities.Hatch.UnLinkBoundary
  id: UnLinkBoundary
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: UnLinkBoundary()
  nameWithType: Hatch.UnLinkBoundary()
  fullName: netDxf.Entities.Hatch.UnLinkBoundary()
  type: Method
  source:
    id: UnLinkBoundary
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 201
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Unlinks the boundary from the hatch, turning the associative property to false.
  remarks: The entities that make the hatch boundaries will not be deleted from the document if they already belong to one.
  example: []
  syntax:
    content: public List<EntityObject> UnLinkBoundary()
    return:
      type: System.Collections.Generic.List{netDxf.Entities.EntityObject}
      description: The list of unlinked entities from the boundary of the hatch.
    content.vb: Public Function UnLinkBoundary() As List(Of EntityObject)
  overload: netDxf.Entities.Hatch.UnLinkBoundary*
- uid: netDxf.Entities.Hatch.CreateBoundary(System.Boolean)
  commentId: M:netDxf.Entities.Hatch.CreateBoundary(System.Boolean)
  id: CreateBoundary(System.Boolean)
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: CreateBoundary(bool)
  nameWithType: Hatch.CreateBoundary(bool)
  fullName: netDxf.Entities.Hatch.CreateBoundary(bool)
  type: Method
  source:
    id: CreateBoundary
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 228
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a list of entities that represents the boundary of the hatch and optionally associates to it.
  remarks: >-
    If the actual hatch is already associative, the old boundary entities will be unlinked, but not deleted from the hatch document.

    If linkBoundary is true, the new boundary entities will be added to the same layout and document as the hatch, in case it belongs to one,

    so, in this case, if you also try to add the return list to the document it will cause an error.<br />

    All entities are in world coordinates except the Polyline2D boundary path since by definition its vertexes are expressed in object coordinates.
  example: []
  syntax:
    content: public List<EntityObject> CreateBoundary(bool linkBoundary)
    parameters:
    - id: linkBoundary
      type: System.Boolean
      description: Indicates if the new boundary will be associated with the hatch, turning the associative property to true.
    return:
      type: System.Collections.Generic.List{netDxf.Entities.EntityObject}
      description: A list of entities that makes the boundary of the hatch.
    content.vb: Public Function CreateBoundary(linkBoundary As Boolean) As List(Of EntityObject)
  overload: netDxf.Entities.Hatch.CreateBoundary*
  nameWithType.vb: Hatch.CreateBoundary(Boolean)
  fullName.vb: netDxf.Entities.Hatch.CreateBoundary(Boolean)
  name.vb: CreateBoundary(Boolean)
- uid: netDxf.Entities.Hatch.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  commentId: M:netDxf.Entities.Hatch.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  id: TransformBy(netDxf.Matrix3,netDxf.Vector3)
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: TransformBy(Matrix3, Vector3)
  nameWithType: Hatch.TransformBy(Matrix3, Vector3)
  fullName: netDxf.Entities.Hatch.TransformBy(netDxf.Matrix3, netDxf.Vector3)
  type: Method
  source:
    id: TransformBy
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 418
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Moves, scales, and/or rotates the current entity given a 3x3 transformation matrix and a translation vector.
  remarks: Matrix3 adopts the convention of using column vectors to represent a transformation matrix.
  example: []
  syntax:
    content: public override void TransformBy(Matrix3 transformation, Vector3 translation)
    parameters:
    - id: transformation
      type: netDxf.Matrix3
      description: Transformation matrix.
    - id: translation
      type: netDxf.Vector3
      description: Translation vector.
    content.vb: Public Overrides Sub TransformBy(transformation As Matrix3, translation As Vector3)
  overridden: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  overload: netDxf.Entities.Hatch.TransformBy*
- uid: netDxf.Entities.Hatch.Clone
  commentId: M:netDxf.Entities.Hatch.Clone
  id: Clone
  parent: netDxf.Entities.Hatch
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Hatch.Clone()
  fullName: netDxf.Entities.Hatch.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Hatch.cs
    startLine: 504
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a new Hatch that is a copy of the current instance.
  remarks: >-
    If the hatch is associative the referenced boundary entities will not be automatically cloned, its associative property will be set to false.

    Use CreateBoundary if required after cloning.
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: A new Hatch that is a copy of this instance.
    content.vb: Public Overrides Function Clone() As Object
  overridden: netDxf.Entities.EntityObject.Clone
  overload: netDxf.Entities.Hatch.Clone*
references:
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  href: netDxf.Entities.EntityObject.html
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: netDxf.Entities.EntityObject.LayerChanged
  commentId: E:netDxf.Entities.EntityObject.LayerChanged
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LayerChanged
  name: LayerChanged
  nameWithType: EntityObject.LayerChanged
  fullName: netDxf.Entities.EntityObject.LayerChanged
- uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  commentId: M:netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  name: OnLayerChangedEvent(Layer, Layer)
  nameWithType: EntityObject.OnLayerChangedEvent(Layer, Layer)
  fullName: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer, netDxf.Tables.Layer)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
    name: OnLayerChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  - name: (
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
    name: OnLayerChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  - name: (
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: )
- uid: netDxf.Entities.EntityObject.LinetypeChanged
  commentId: E:netDxf.Entities.EntityObject.LinetypeChanged
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LinetypeChanged
  name: LinetypeChanged
  nameWithType: EntityObject.LinetypeChanged
  fullName: netDxf.Entities.EntityObject.LinetypeChanged
- uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  commentId: M:netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  name: OnLinetypeChangedEvent(Linetype, Linetype)
  nameWithType: EntityObject.OnLinetypeChangedEvent(Linetype, Linetype)
  fullName: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype, netDxf.Tables.Linetype)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
    name: OnLinetypeChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  - name: (
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
    name: OnLinetypeChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  - name: (
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: )
- uid: netDxf.Entities.EntityObject.Reactors
  commentId: P:netDxf.Entities.EntityObject.Reactors
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Reactors
  name: Reactors
  nameWithType: EntityObject.Reactors
  fullName: netDxf.Entities.EntityObject.Reactors
- uid: netDxf.Entities.EntityObject.Type
  commentId: P:netDxf.Entities.EntityObject.Type
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Type
  name: Type
  nameWithType: EntityObject.Type
  fullName: netDxf.Entities.EntityObject.Type
- uid: netDxf.Entities.EntityObject.Color
  commentId: P:netDxf.Entities.EntityObject.Color
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Color
  name: Color
  nameWithType: EntityObject.Color
  fullName: netDxf.Entities.EntityObject.Color
- uid: netDxf.Entities.EntityObject.Layer
  commentId: P:netDxf.Entities.EntityObject.Layer
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Layer
  name: Layer
  nameWithType: EntityObject.Layer
  fullName: netDxf.Entities.EntityObject.Layer
- uid: netDxf.Entities.EntityObject.Linetype
  commentId: P:netDxf.Entities.EntityObject.Linetype
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Linetype
  name: Linetype
  nameWithType: EntityObject.Linetype
  fullName: netDxf.Entities.EntityObject.Linetype
- uid: netDxf.Entities.EntityObject.Lineweight
  commentId: P:netDxf.Entities.EntityObject.Lineweight
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Lineweight
  name: Lineweight
  nameWithType: EntityObject.Lineweight
  fullName: netDxf.Entities.EntityObject.Lineweight
- uid: netDxf.Entities.EntityObject.Transparency
  commentId: P:netDxf.Entities.EntityObject.Transparency
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Transparency
  name: Transparency
  nameWithType: EntityObject.Transparency
  fullName: netDxf.Entities.EntityObject.Transparency
- uid: netDxf.Entities.EntityObject.LinetypeScale
  commentId: P:netDxf.Entities.EntityObject.LinetypeScale
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LinetypeScale
  name: LinetypeScale
  nameWithType: EntityObject.LinetypeScale
  fullName: netDxf.Entities.EntityObject.LinetypeScale
- uid: netDxf.Entities.EntityObject.IsVisible
  commentId: P:netDxf.Entities.EntityObject.IsVisible
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_IsVisible
  name: IsVisible
  nameWithType: EntityObject.IsVisible
  fullName: netDxf.Entities.EntityObject.IsVisible
- uid: netDxf.Entities.EntityObject.Normal
  commentId: P:netDxf.Entities.EntityObject.Normal
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Normal
  name: Normal
  nameWithType: EntityObject.Normal
  fullName: netDxf.Entities.EntityObject.Normal
- uid: netDxf.Entities.EntityObject.Owner
  commentId: P:netDxf.Entities.EntityObject.Owner
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Owner
  name: Owner
  nameWithType: EntityObject.Owner
  fullName: netDxf.Entities.EntityObject.Owner
- uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  commentId: M:netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  name: TransformBy(Matrix4)
  nameWithType: EntityObject.TransformBy(Matrix4)
  fullName: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  - name: (
  - uid: netDxf.Matrix4
    name: Matrix4
    href: netDxf.Matrix4.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  - name: (
  - uid: netDxf.Matrix4
    name: Matrix4
    href: netDxf.Matrix4.html
  - name: )
- uid: netDxf.Entities.EntityObject.ToString
  commentId: M:netDxf.Entities.EntityObject.ToString
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  name: ToString()
  nameWithType: EntityObject.ToString()
  fullName: netDxf.Entities.EntityObject.ToString()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.ToString
    name: ToString
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.ToString
    name: ToString
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  - name: (
  - name: )
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataAddAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataAddAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataRemoveAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataRemoveAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.Entities.Hatch.HatchBoundaryPathAddedEventHandler
  commentId: T:netDxf.Entities.Hatch.HatchBoundaryPathAddedEventHandler
  parent: netDxf.Entities
  href: netDxf.Entities.Hatch.html
  name: Hatch.HatchBoundaryPathAddedEventHandler
  nameWithType: Hatch.HatchBoundaryPathAddedEventHandler
  fullName: netDxf.Entities.Hatch.HatchBoundaryPathAddedEventHandler
  spec.csharp:
  - uid: netDxf.Entities.Hatch
    name: Hatch
    href: netDxf.Entities.Hatch.html
  - name: .
  - uid: netDxf.Entities.Hatch.HatchBoundaryPathAddedEventHandler
    name: HatchBoundaryPathAddedEventHandler
    href: netDxf.Entities.Hatch.HatchBoundaryPathAddedEventHandler.html
  spec.vb:
  - uid: netDxf.Entities.Hatch
    name: Hatch
    href: netDxf.Entities.Hatch.html
  - name: .
  - uid: netDxf.Entities.Hatch.HatchBoundaryPathAddedEventHandler
    name: HatchBoundaryPathAddedEventHandler
    href: netDxf.Entities.Hatch.HatchBoundaryPathAddedEventHandler.html
- uid: netDxf.Entities.Hatch.OnHatchBoundaryPathAddedEvent*
  commentId: Overload:netDxf.Entities.Hatch.OnHatchBoundaryPathAddedEvent
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_OnHatchBoundaryPathAddedEvent_netDxf_Entities_HatchBoundaryPath_
  name: OnHatchBoundaryPathAddedEvent
  nameWithType: Hatch.OnHatchBoundaryPathAddedEvent
  fullName: netDxf.Entities.Hatch.OnHatchBoundaryPathAddedEvent
- uid: netDxf.Entities.HatchBoundaryPath
  commentId: T:netDxf.Entities.HatchBoundaryPath
  parent: netDxf.Entities
  href: netDxf.Entities.HatchBoundaryPath.html
  name: HatchBoundaryPath
  nameWithType: HatchBoundaryPath
  fullName: netDxf.Entities.HatchBoundaryPath
- uid: netDxf.Entities.Hatch.HatchBoundaryPathRemovedEventHandler
  commentId: T:netDxf.Entities.Hatch.HatchBoundaryPathRemovedEventHandler
  parent: netDxf.Entities
  href: netDxf.Entities.Hatch.html
  name: Hatch.HatchBoundaryPathRemovedEventHandler
  nameWithType: Hatch.HatchBoundaryPathRemovedEventHandler
  fullName: netDxf.Entities.Hatch.HatchBoundaryPathRemovedEventHandler
  spec.csharp:
  - uid: netDxf.Entities.Hatch
    name: Hatch
    href: netDxf.Entities.Hatch.html
  - name: .
  - uid: netDxf.Entities.Hatch.HatchBoundaryPathRemovedEventHandler
    name: HatchBoundaryPathRemovedEventHandler
    href: netDxf.Entities.Hatch.HatchBoundaryPathRemovedEventHandler.html
  spec.vb:
  - uid: netDxf.Entities.Hatch
    name: Hatch
    href: netDxf.Entities.Hatch.html
  - name: .
  - uid: netDxf.Entities.Hatch.HatchBoundaryPathRemovedEventHandler
    name: HatchBoundaryPathRemovedEventHandler
    href: netDxf.Entities.Hatch.HatchBoundaryPathRemovedEventHandler.html
- uid: netDxf.Entities.Hatch.OnHatchBoundaryPathRemovedEvent*
  commentId: Overload:netDxf.Entities.Hatch.OnHatchBoundaryPathRemovedEvent
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_OnHatchBoundaryPathRemovedEvent_netDxf_Entities_HatchBoundaryPath_
  name: OnHatchBoundaryPathRemovedEvent
  nameWithType: Hatch.OnHatchBoundaryPathRemovedEvent
  fullName: netDxf.Entities.Hatch.OnHatchBoundaryPathRemovedEvent
- uid: netDxf.Entities.HatchPattern
  commentId: T:netDxf.Entities.HatchPattern
  parent: netDxf.Entities
  href: netDxf.Entities.HatchPattern.html
  name: HatchPattern
  nameWithType: HatchPattern
  fullName: netDxf.Entities.HatchPattern
- uid: netDxf.Entities.Hatch.#ctor*
  commentId: Overload:netDxf.Entities.Hatch.#ctor
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch__ctor_netDxf_Entities_HatchPattern_System_Boolean_
  name: Hatch
  nameWithType: Hatch.Hatch
  fullName: netDxf.Entities.Hatch.Hatch
  nameWithType.vb: Hatch.New
  fullName.vb: netDxf.Entities.Hatch.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.HatchBoundaryPath}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.HatchBoundaryPath}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<HatchBoundaryPath>
  nameWithType: IEnumerable<HatchBoundaryPath>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.HatchBoundaryPath>
  nameWithType.vb: IEnumerable(Of HatchBoundaryPath)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.HatchBoundaryPath)
  name.vb: IEnumerable(Of HatchBoundaryPath)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.HatchBoundaryPath
    name: HatchBoundaryPath
    href: netDxf.Entities.HatchBoundaryPath.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.HatchBoundaryPath
    name: HatchBoundaryPath
    href: netDxf.Entities.HatchBoundaryPath.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.Entities.Hatch.Pattern*
  commentId: Overload:netDxf.Entities.Hatch.Pattern
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_Pattern
  name: Pattern
  nameWithType: Hatch.Pattern
  fullName: netDxf.Entities.Hatch.Pattern
- uid: netDxf.Entities.Hatch.BoundaryPaths*
  commentId: Overload:netDxf.Entities.Hatch.BoundaryPaths
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_BoundaryPaths
  name: BoundaryPaths
  nameWithType: Hatch.BoundaryPaths
  fullName: netDxf.Entities.Hatch.BoundaryPaths
- uid: netDxf.Collections.ObservableCollection{netDxf.Entities.HatchBoundaryPath}
  commentId: T:netDxf.Collections.ObservableCollection{netDxf.Entities.HatchBoundaryPath}
  parent: netDxf.Collections
  definition: netDxf.Collections.ObservableCollection`1
  href: netDxf.Collections.ObservableCollection-1.html
  name: ObservableCollection<HatchBoundaryPath>
  nameWithType: ObservableCollection<HatchBoundaryPath>
  fullName: netDxf.Collections.ObservableCollection<netDxf.Entities.HatchBoundaryPath>
  nameWithType.vb: ObservableCollection(Of HatchBoundaryPath)
  fullName.vb: netDxf.Collections.ObservableCollection(Of netDxf.Entities.HatchBoundaryPath)
  name.vb: ObservableCollection(Of HatchBoundaryPath)
  spec.csharp:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: <
  - uid: netDxf.Entities.HatchBoundaryPath
    name: HatchBoundaryPath
    href: netDxf.Entities.HatchBoundaryPath.html
  - name: '>'
  spec.vb:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.HatchBoundaryPath
    name: HatchBoundaryPath
    href: netDxf.Entities.HatchBoundaryPath.html
  - name: )
- uid: netDxf.Collections.ObservableCollection`1
  commentId: T:netDxf.Collections.ObservableCollection`1
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableCollection-1.html
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: netDxf.Collections.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: netDxf.Collections.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: netDxf.Collections.ObservableCollection`1
    name: ObservableCollection
    href: netDxf.Collections.ObservableCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: netDxf.Entities.Hatch.Associative*
  commentId: Overload:netDxf.Entities.Hatch.Associative
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_Associative
  name: Associative
  nameWithType: Hatch.Associative
  fullName: netDxf.Entities.Hatch.Associative
- uid: netDxf.Entities.Hatch.Elevation*
  commentId: Overload:netDxf.Entities.Hatch.Elevation
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_Elevation
  name: Elevation
  nameWithType: Hatch.Elevation
  fullName: netDxf.Entities.Hatch.Elevation
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Entities.Hatch.UnLinkBoundary*
  commentId: Overload:netDxf.Entities.Hatch.UnLinkBoundary
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_UnLinkBoundary
  name: UnLinkBoundary
  nameWithType: Hatch.UnLinkBoundary
  fullName: netDxf.Entities.Hatch.UnLinkBoundary
- uid: System.Collections.Generic.List{netDxf.Entities.EntityObject}
  commentId: T:System.Collections.Generic.List{netDxf.Entities.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EntityObject>
  nameWithType: List<EntityObject>
  fullName: System.Collections.Generic.List<netDxf.Entities.EntityObject>
  nameWithType.vb: List(Of EntityObject)
  fullName.vb: System.Collections.Generic.List(Of netDxf.Entities.EntityObject)
  name.vb: List(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Entities.Hatch.CreateBoundary*
  commentId: Overload:netDxf.Entities.Hatch.CreateBoundary
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_CreateBoundary_System_Boolean_
  name: CreateBoundary
  nameWithType: Hatch.CreateBoundary
  fullName: netDxf.Entities.Hatch.CreateBoundary
- uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  commentId: M:netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  name: TransformBy(Matrix3, Vector3)
  nameWithType: EntityObject.TransformBy(Matrix3, Vector3)
  fullName: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3, netDxf.Vector3)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  - name: (
  - uid: netDxf.Matrix3
    name: Matrix3
    href: netDxf.Matrix3.html
  - name: ','
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  - name: (
  - uid: netDxf.Matrix3
    name: Matrix3
    href: netDxf.Matrix3.html
  - name: ','
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: netDxf.Entities.Hatch.TransformBy*
  commentId: Overload:netDxf.Entities.Hatch.TransformBy
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  name: TransformBy
  nameWithType: Hatch.TransformBy
  fullName: netDxf.Entities.Hatch.TransformBy
- uid: netDxf.Matrix3
  commentId: T:netDxf.Matrix3
  parent: netDxf
  href: netDxf.Matrix3.html
  name: Matrix3
  nameWithType: Matrix3
  fullName: netDxf.Matrix3
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  href: netDxf.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: netDxf.Entities.EntityObject.Clone
  commentId: M:netDxf.Entities.EntityObject.Clone
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  name: Clone()
  nameWithType: EntityObject.Clone()
  fullName: netDxf.Entities.EntityObject.Clone()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.Clone
    name: Clone
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.Clone
    name: Clone
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  - name: (
  - name: )
- uid: netDxf.Entities.Hatch.Clone*
  commentId: Overload:netDxf.Entities.Hatch.Clone
  href: netDxf.Entities.Hatch.html#netDxf_Entities_Hatch_Clone
  name: Clone
  nameWithType: Hatch.Clone
  fullName: netDxf.Entities.Hatch.Clone
