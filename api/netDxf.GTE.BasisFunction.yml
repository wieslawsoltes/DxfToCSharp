### YamlMime:ManagedReference
items:
- uid: netDxf.GTE.BasisFunction
  commentId: T:netDxf.GTE.BasisFunction
  id: BasisFunction
  parent: netDxf.GTE
  children:
  - netDxf.GTE.BasisFunction.#ctor(netDxf.GTE.BasisFunctionInput)
  - netDxf.GTE.BasisFunction.Create(netDxf.GTE.BasisFunctionInput)
  - netDxf.GTE.BasisFunction.Degree
  - netDxf.GTE.BasisFunction.Evaluate(System.Double,System.Int32,System.Int32@,System.Int32@)
  - netDxf.GTE.BasisFunction.GetValue(System.Int32,System.Int32)
  - netDxf.GTE.BasisFunction.IsOpen
  - netDxf.GTE.BasisFunction.IsPeriodic
  - netDxf.GTE.BasisFunction.IsUniform
  - netDxf.GTE.BasisFunction.Knots
  - netDxf.GTE.BasisFunction.MaxDomain
  - netDxf.GTE.BasisFunction.MinDomain
  - netDxf.GTE.BasisFunction.NumControls
  - netDxf.GTE.BasisFunction.NumKnots
  - netDxf.GTE.BasisFunction.NumUniqueKnots
  - netDxf.GTE.BasisFunction.UniqueKnots
  langs:
  - csharp
  - vb
  name: BasisFunction
  nameWithType: BasisFunction
  fullName: netDxf.GTE.BasisFunction
  type: Class
  source:
    id: BasisFunction
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 166
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public class BasisFunction
    content.vb: Public Class BasisFunction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.GTE.BasisFunction.#ctor(netDxf.GTE.BasisFunctionInput)
  commentId: M:netDxf.GTE.BasisFunction.#ctor(netDxf.GTE.BasisFunctionInput)
  id: '#ctor(netDxf.GTE.BasisFunctionInput)'
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: BasisFunction(BasisFunctionInput)
  nameWithType: BasisFunction.BasisFunction(BasisFunctionInput)
  fullName: netDxf.GTE.BasisFunction.BasisFunction(netDxf.GTE.BasisFunctionInput)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 219
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public BasisFunction(BasisFunctionInput input)
    parameters:
    - id: input
      type: netDxf.GTE.BasisFunctionInput
    content.vb: Public Sub New(input As BasisFunctionInput)
  overload: netDxf.GTE.BasisFunction.#ctor*
  nameWithType.vb: BasisFunction.New(BasisFunctionInput)
  fullName.vb: netDxf.GTE.BasisFunction.New(netDxf.GTE.BasisFunctionInput)
  name.vb: New(BasisFunctionInput)
- uid: netDxf.GTE.BasisFunction.Create(netDxf.GTE.BasisFunctionInput)
  commentId: M:netDxf.GTE.BasisFunction.Create(netDxf.GTE.BasisFunctionInput)
  id: Create(netDxf.GTE.BasisFunctionInput)
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: Create(BasisFunctionInput)
  nameWithType: BasisFunction.Create(BasisFunctionInput)
  fullName: netDxf.GTE.BasisFunction.Create(netDxf.GTE.BasisFunctionInput)
  type: Method
  source:
    id: Create
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 226
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public void Create(BasisFunctionInput input)
    parameters:
    - id: input
      type: netDxf.GTE.BasisFunctionInput
    content.vb: Public Sub Create(input As BasisFunctionInput)
  overload: netDxf.GTE.BasisFunction.Create*
- uid: netDxf.GTE.BasisFunction.NumControls
  commentId: P:netDxf.GTE.BasisFunction.NumControls
  id: NumControls
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: NumControls
  nameWithType: BasisFunction.NumControls
  fullName: netDxf.GTE.BasisFunction.NumControls
  type: Property
  source:
    id: NumControls
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 300
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public int NumControls { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumControls As Integer
  overload: netDxf.GTE.BasisFunction.NumControls*
- uid: netDxf.GTE.BasisFunction.Degree
  commentId: P:netDxf.GTE.BasisFunction.Degree
  id: Degree
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: Degree
  nameWithType: BasisFunction.Degree
  fullName: netDxf.GTE.BasisFunction.Degree
  type: Property
  source:
    id: Degree
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 305
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public int Degree { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Degree As Integer
  overload: netDxf.GTE.BasisFunction.Degree*
- uid: netDxf.GTE.BasisFunction.NumUniqueKnots
  commentId: P:netDxf.GTE.BasisFunction.NumUniqueKnots
  id: NumUniqueKnots
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: NumUniqueKnots
  nameWithType: BasisFunction.NumUniqueKnots
  fullName: netDxf.GTE.BasisFunction.NumUniqueKnots
  type: Property
  source:
    id: NumUniqueKnots
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 310
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public int NumUniqueKnots { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumUniqueKnots As Integer
  overload: netDxf.GTE.BasisFunction.NumUniqueKnots*
- uid: netDxf.GTE.BasisFunction.NumKnots
  commentId: P:netDxf.GTE.BasisFunction.NumKnots
  id: NumKnots
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: NumKnots
  nameWithType: BasisFunction.NumKnots
  fullName: netDxf.GTE.BasisFunction.NumKnots
  type: Property
  source:
    id: NumKnots
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 315
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public int NumKnots { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumKnots As Integer
  overload: netDxf.GTE.BasisFunction.NumKnots*
- uid: netDxf.GTE.BasisFunction.MinDomain
  commentId: P:netDxf.GTE.BasisFunction.MinDomain
  id: MinDomain
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: MinDomain
  nameWithType: BasisFunction.MinDomain
  fullName: netDxf.GTE.BasisFunction.MinDomain
  type: Property
  source:
    id: MinDomain
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 320
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public double MinDomain { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MinDomain As Double
  overload: netDxf.GTE.BasisFunction.MinDomain*
- uid: netDxf.GTE.BasisFunction.MaxDomain
  commentId: P:netDxf.GTE.BasisFunction.MaxDomain
  id: MaxDomain
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: MaxDomain
  nameWithType: BasisFunction.MaxDomain
  fullName: netDxf.GTE.BasisFunction.MaxDomain
  type: Property
  source:
    id: MaxDomain
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 325
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public double MaxDomain { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MaxDomain As Double
  overload: netDxf.GTE.BasisFunction.MaxDomain*
- uid: netDxf.GTE.BasisFunction.IsOpen
  commentId: P:netDxf.GTE.BasisFunction.IsOpen
  id: IsOpen
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: IsOpen
  nameWithType: BasisFunction.IsOpen
  fullName: netDxf.GTE.BasisFunction.IsOpen
  type: Property
  source:
    id: IsOpen
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 330
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public bool IsOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOpen As Boolean
  overload: netDxf.GTE.BasisFunction.IsOpen*
- uid: netDxf.GTE.BasisFunction.IsUniform
  commentId: P:netDxf.GTE.BasisFunction.IsUniform
  id: IsUniform
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: IsUniform
  nameWithType: BasisFunction.IsUniform
  fullName: netDxf.GTE.BasisFunction.IsUniform
  type: Property
  source:
    id: IsUniform
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 335
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public bool IsUniform { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUniform As Boolean
  overload: netDxf.GTE.BasisFunction.IsUniform*
- uid: netDxf.GTE.BasisFunction.IsPeriodic
  commentId: P:netDxf.GTE.BasisFunction.IsPeriodic
  id: IsPeriodic
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: IsPeriodic
  nameWithType: BasisFunction.IsPeriodic
  fullName: netDxf.GTE.BasisFunction.IsPeriodic
  type: Property
  source:
    id: IsPeriodic
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 340
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public bool IsPeriodic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPeriodic As Boolean
  overload: netDxf.GTE.BasisFunction.IsPeriodic*
- uid: netDxf.GTE.BasisFunction.UniqueKnots
  commentId: P:netDxf.GTE.BasisFunction.UniqueKnots
  id: UniqueKnots
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: UniqueKnots
  nameWithType: BasisFunction.UniqueKnots
  fullName: netDxf.GTE.BasisFunction.UniqueKnots
  type: Property
  source:
    id: UniqueKnots
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 345
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public UniqueKnot[] UniqueKnots { get; }
    parameters: []
    return:
      type: netDxf.GTE.UniqueKnot[]
    content.vb: Public ReadOnly Property UniqueKnots As UniqueKnot()
  overload: netDxf.GTE.BasisFunction.UniqueKnots*
- uid: netDxf.GTE.BasisFunction.Knots
  commentId: P:netDxf.GTE.BasisFunction.Knots
  id: Knots
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: Knots
  nameWithType: BasisFunction.Knots
  fullName: netDxf.GTE.BasisFunction.Knots
  type: Property
  source:
    id: Knots
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 350
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public double[] Knots { get; }
    parameters: []
    return:
      type: System.Double[]
    content.vb: Public ReadOnly Property Knots As Double()
  overload: netDxf.GTE.BasisFunction.Knots*
- uid: netDxf.GTE.BasisFunction.Evaluate(System.Double,System.Int32,System.Int32@,System.Int32@)
  commentId: M:netDxf.GTE.BasisFunction.Evaluate(System.Double,System.Int32,System.Int32@,System.Int32@)
  id: Evaluate(System.Double,System.Int32,System.Int32@,System.Int32@)
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: Evaluate(double, int, out int, out int)
  nameWithType: BasisFunction.Evaluate(double, int, out int, out int)
  fullName: netDxf.GTE.BasisFunction.Evaluate(double, int, out int, out int)
  type: Method
  source:
    id: Evaluate
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 358
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public void Evaluate(double t, int order, out int minIndex, out int maxIndex)
    parameters:
    - id: t
      type: System.Double
    - id: order
      type: System.Int32
    - id: minIndex
      type: System.Int32
    - id: maxIndex
      type: System.Int32
    content.vb: Public Sub Evaluate(t As Double, order As Integer, minIndex As Integer, maxIndex As Integer)
  overload: netDxf.GTE.BasisFunction.Evaluate*
  nameWithType.vb: BasisFunction.Evaluate(Double, Integer, Integer, Integer)
  fullName.vb: netDxf.GTE.BasisFunction.Evaluate(Double, Integer, Integer, Integer)
  name.vb: Evaluate(Double, Integer, Integer, Integer)
- uid: netDxf.GTE.BasisFunction.GetValue(System.Int32,System.Int32)
  commentId: M:netDxf.GTE.BasisFunction.GetValue(System.Int32,System.Int32)
  id: GetValue(System.Int32,System.Int32)
  parent: netDxf.GTE.BasisFunction
  langs:
  - csharp
  - vb
  name: GetValue(int, int)
  nameWithType: BasisFunction.GetValue(int, int)
  fullName: netDxf.GTE.BasisFunction.GetValue(int, int)
  type: Method
  source:
    id: GetValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BasisFunction.cs
    startLine: 465
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public double GetValue(int order, int i)
    parameters:
    - id: order
      type: System.Int32
    - id: i
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function GetValue(order As Integer, i As Integer) As Double
  overload: netDxf.GTE.BasisFunction.GetValue*
  nameWithType.vb: BasisFunction.GetValue(Integer, Integer)
  fullName.vb: netDxf.GTE.BasisFunction.GetValue(Integer, Integer)
  name.vb: GetValue(Integer, Integer)
references:
- uid: netDxf.GTE
  commentId: N:netDxf.GTE
  href: netDxf.html
  name: netDxf.GTE
  nameWithType: netDxf.GTE
  fullName: netDxf.GTE
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.GTE
    name: GTE
    href: netDxf.GTE.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.GTE
    name: GTE
    href: netDxf.GTE.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.GTE.BasisFunction.#ctor*
  commentId: Overload:netDxf.GTE.BasisFunction.#ctor
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction__ctor_netDxf_GTE_BasisFunctionInput_
  name: BasisFunction
  nameWithType: BasisFunction.BasisFunction
  fullName: netDxf.GTE.BasisFunction.BasisFunction
  nameWithType.vb: BasisFunction.New
  fullName.vb: netDxf.GTE.BasisFunction.New
  name.vb: New
- uid: netDxf.GTE.BasisFunctionInput
  commentId: T:netDxf.GTE.BasisFunctionInput
  parent: netDxf.GTE
  href: netDxf.GTE.BasisFunctionInput.html
  name: BasisFunctionInput
  nameWithType: BasisFunctionInput
  fullName: netDxf.GTE.BasisFunctionInput
- uid: netDxf.GTE.BasisFunction.Create*
  commentId: Overload:netDxf.GTE.BasisFunction.Create
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_Create_netDxf_GTE_BasisFunctionInput_
  name: Create
  nameWithType: BasisFunction.Create
  fullName: netDxf.GTE.BasisFunction.Create
- uid: netDxf.GTE.BasisFunction.NumControls*
  commentId: Overload:netDxf.GTE.BasisFunction.NumControls
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_NumControls
  name: NumControls
  nameWithType: BasisFunction.NumControls
  fullName: netDxf.GTE.BasisFunction.NumControls
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.GTE.BasisFunction.Degree*
  commentId: Overload:netDxf.GTE.BasisFunction.Degree
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_Degree
  name: Degree
  nameWithType: BasisFunction.Degree
  fullName: netDxf.GTE.BasisFunction.Degree
- uid: netDxf.GTE.BasisFunction.NumUniqueKnots*
  commentId: Overload:netDxf.GTE.BasisFunction.NumUniqueKnots
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_NumUniqueKnots
  name: NumUniqueKnots
  nameWithType: BasisFunction.NumUniqueKnots
  fullName: netDxf.GTE.BasisFunction.NumUniqueKnots
- uid: netDxf.GTE.BasisFunction.NumKnots*
  commentId: Overload:netDxf.GTE.BasisFunction.NumKnots
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_NumKnots
  name: NumKnots
  nameWithType: BasisFunction.NumKnots
  fullName: netDxf.GTE.BasisFunction.NumKnots
- uid: netDxf.GTE.BasisFunction.MinDomain*
  commentId: Overload:netDxf.GTE.BasisFunction.MinDomain
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_MinDomain
  name: MinDomain
  nameWithType: BasisFunction.MinDomain
  fullName: netDxf.GTE.BasisFunction.MinDomain
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.GTE.BasisFunction.MaxDomain*
  commentId: Overload:netDxf.GTE.BasisFunction.MaxDomain
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_MaxDomain
  name: MaxDomain
  nameWithType: BasisFunction.MaxDomain
  fullName: netDxf.GTE.BasisFunction.MaxDomain
- uid: netDxf.GTE.BasisFunction.IsOpen*
  commentId: Overload:netDxf.GTE.BasisFunction.IsOpen
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_IsOpen
  name: IsOpen
  nameWithType: BasisFunction.IsOpen
  fullName: netDxf.GTE.BasisFunction.IsOpen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.GTE.BasisFunction.IsUniform*
  commentId: Overload:netDxf.GTE.BasisFunction.IsUniform
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_IsUniform
  name: IsUniform
  nameWithType: BasisFunction.IsUniform
  fullName: netDxf.GTE.BasisFunction.IsUniform
- uid: netDxf.GTE.BasisFunction.IsPeriodic*
  commentId: Overload:netDxf.GTE.BasisFunction.IsPeriodic
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_IsPeriodic
  name: IsPeriodic
  nameWithType: BasisFunction.IsPeriodic
  fullName: netDxf.GTE.BasisFunction.IsPeriodic
- uid: netDxf.GTE.BasisFunction.UniqueKnots*
  commentId: Overload:netDxf.GTE.BasisFunction.UniqueKnots
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_UniqueKnots
  name: UniqueKnots
  nameWithType: BasisFunction.UniqueKnots
  fullName: netDxf.GTE.BasisFunction.UniqueKnots
- uid: netDxf.GTE.UniqueKnot[]
  isExternal: true
  href: netDxf.GTE.UniqueKnot.html
  name: UniqueKnot[]
  nameWithType: UniqueKnot[]
  fullName: netDxf.GTE.UniqueKnot[]
  nameWithType.vb: UniqueKnot()
  fullName.vb: netDxf.GTE.UniqueKnot()
  name.vb: UniqueKnot()
  spec.csharp:
  - uid: netDxf.GTE.UniqueKnot
    name: UniqueKnot
    href: netDxf.GTE.UniqueKnot.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: netDxf.GTE.UniqueKnot
    name: UniqueKnot
    href: netDxf.GTE.UniqueKnot.html
  - name: (
  - name: )
- uid: netDxf.GTE.BasisFunction.Knots*
  commentId: Overload:netDxf.GTE.BasisFunction.Knots
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_Knots
  name: Knots
  nameWithType: BasisFunction.Knots
  fullName: netDxf.GTE.BasisFunction.Knots
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: netDxf.GTE.BasisFunction.Evaluate*
  commentId: Overload:netDxf.GTE.BasisFunction.Evaluate
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_Evaluate_System_Double_System_Int32_System_Int32__System_Int32__
  name: Evaluate
  nameWithType: BasisFunction.Evaluate
  fullName: netDxf.GTE.BasisFunction.Evaluate
- uid: netDxf.GTE.BasisFunction.GetValue*
  commentId: Overload:netDxf.GTE.BasisFunction.GetValue
  href: netDxf.GTE.BasisFunction.html#netDxf_GTE_BasisFunction_GetValue_System_Int32_System_Int32_
  name: GetValue
  nameWithType: BasisFunction.GetValue
  fullName: netDxf.GTE.BasisFunction.GetValue
