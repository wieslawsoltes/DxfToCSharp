### YamlMime:ManagedReference
items:
- uid: netDxf.Blocks.Block
  commentId: T:netDxf.Blocks.Block
  id: Block
  parent: netDxf.Blocks
  children:
  - netDxf.Blocks.Block.#ctor(System.String)
  - netDxf.Blocks.Block.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  - netDxf.Blocks.Block.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject},System.Collections.Generic.IEnumerable{netDxf.Entities.AttributeDefinition})
  - netDxf.Blocks.Block.#ctor(System.String,System.String)
  - netDxf.Blocks.Block.#ctor(System.String,System.String,System.Boolean)
  - netDxf.Blocks.Block.AttributeDefinitionAdded
  - netDxf.Blocks.Block.AttributeDefinitionRemoved
  - netDxf.Blocks.Block.AttributeDefinitions
  - netDxf.Blocks.Block.Clone
  - netDxf.Blocks.Block.Clone(System.String)
  - netDxf.Blocks.Block.Create(netDxf.DxfDocument,System.String)
  - netDxf.Blocks.Block.DefaultModelSpaceName
  - netDxf.Blocks.Block.DefaultPaperSpaceName
  - netDxf.Blocks.Block.Description
  - netDxf.Blocks.Block.Entities
  - netDxf.Blocks.Block.EntityAdded
  - netDxf.Blocks.Block.EntityRemoved
  - netDxf.Blocks.Block.Flags
  - netDxf.Blocks.Block.GetReferences
  - netDxf.Blocks.Block.HasReferences
  - netDxf.Blocks.Block.IsForInternalUseOnly
  - netDxf.Blocks.Block.IsXRef
  - netDxf.Blocks.Block.Layer
  - netDxf.Blocks.Block.LayerChanged
  - netDxf.Blocks.Block.Load(System.String)
  - netDxf.Blocks.Block.Load(System.String,System.Collections.Generic.IEnumerable{System.String})
  - netDxf.Blocks.Block.Load(System.String,System.String)
  - netDxf.Blocks.Block.Load(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  - netDxf.Blocks.Block.ModelSpace
  - netDxf.Blocks.Block.Name
  - netDxf.Blocks.Block.OnAttributeDefinitionAddedEvent(netDxf.Entities.AttributeDefinition)
  - netDxf.Blocks.Block.OnAttributeDefinitionRemovedEvent(netDxf.Entities.AttributeDefinition)
  - netDxf.Blocks.Block.OnEntityAddedEvent(netDxf.Entities.EntityObject)
  - netDxf.Blocks.Block.OnEntityRemovedEvent(netDxf.Entities.EntityObject)
  - netDxf.Blocks.Block.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  - netDxf.Blocks.Block.Origin
  - netDxf.Blocks.Block.Owner
  - netDxf.Blocks.Block.PaperSpace
  - netDxf.Blocks.Block.Record
  - netDxf.Blocks.Block.Save(System.String,netDxf.Header.DxfVersion)
  - netDxf.Blocks.Block.Save(System.String,netDxf.Header.DxfVersion,System.Boolean)
  - netDxf.Blocks.Block.XrefFile
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Block
  fullName: netDxf.Blocks.Block
  type: Class
  source:
    id: Block
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 39
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Represents a block definition.
  example: []
  syntax:
    content: 'public class Block : TableObject, ICloneable, IComparable, IComparable<TableObject>, IEquatable<TableObject>'
    content.vb: Public Class Block Inherits TableObject Implements ICloneable, IComparable, IComparable(Of TableObject), IEquatable(Of TableObject)
  inheritance:
  - System.Object
  - netDxf.DxfObject
  - netDxf.Tables.TableObject
  implements:
  - System.ICloneable
  - System.IComparable
  - System.IComparable{netDxf.Tables.TableObject}
  - System.IEquatable{netDxf.Tables.TableObject}
  inheritedMembers:
  - netDxf.Tables.TableObject.NameChanged
  - netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  - netDxf.Tables.TableObject.IsReserved
  - netDxf.Tables.TableObject.InvalidCharacters
  - netDxf.Tables.TableObject.IsValidName(System.String)
  - netDxf.Tables.TableObject.ToString
  - netDxf.Tables.TableObject.CompareTo(System.Object)
  - netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  - netDxf.Tables.TableObject.GetHashCode
  - netDxf.Tables.TableObject.Equals(System.Object)
  - netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.XData
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Blocks.Block.LayerChanged
  commentId: E:netDxf.Blocks.Block.LayerChanged
  id: LayerChanged
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: LayerChanged
  nameWithType: Block.LayerChanged
  fullName: netDxf.Blocks.Block.LayerChanged
  type: Event
  source:
    id: LayerChanged
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 45
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: public event Block.LayerChangedEventHandler LayerChanged
    return:
      type: netDxf.Blocks.Block.LayerChangedEventHandler
    content.vb: Public Event LayerChanged As Block.LayerChangedEventHandler
- uid: netDxf.Blocks.Block.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  commentId: M:netDxf.Blocks.Block.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  id: OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: OnLayerChangedEvent(Layer, Layer)
  nameWithType: Block.OnLayerChangedEvent(Layer, Layer)
  fullName: netDxf.Blocks.Block.OnLayerChangedEvent(netDxf.Tables.Layer, netDxf.Tables.Layer)
  type: Method
  source:
    id: OnLayerChangedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 46
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: protected virtual Layer OnLayerChangedEvent(Layer oldLayer, Layer newLayer)
    parameters:
    - id: oldLayer
      type: netDxf.Tables.Layer
    - id: newLayer
      type: netDxf.Tables.Layer
    return:
      type: netDxf.Tables.Layer
    content.vb: Protected Overridable Function OnLayerChangedEvent(oldLayer As Layer, newLayer As Layer) As Layer
  overload: netDxf.Blocks.Block.OnLayerChangedEvent*
- uid: netDxf.Blocks.Block.EntityAdded
  commentId: E:netDxf.Blocks.Block.EntityAdded
  id: EntityAdded
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: EntityAdded
  nameWithType: Block.EntityAdded
  fullName: netDxf.Blocks.Block.EntityAdded
  type: Event
  source:
    id: EntityAdded
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 59
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: public event Block.EntityAddedEventHandler EntityAdded
    return:
      type: netDxf.Blocks.Block.EntityAddedEventHandler
    content.vb: Public Event EntityAdded As Block.EntityAddedEventHandler
- uid: netDxf.Blocks.Block.OnEntityAddedEvent(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Blocks.Block.OnEntityAddedEvent(netDxf.Entities.EntityObject)
  id: OnEntityAddedEvent(netDxf.Entities.EntityObject)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: OnEntityAddedEvent(EntityObject)
  nameWithType: Block.OnEntityAddedEvent(EntityObject)
  fullName: netDxf.Blocks.Block.OnEntityAddedEvent(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: OnEntityAddedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 60
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: protected virtual void OnEntityAddedEvent(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
    content.vb: Protected Overridable Sub OnEntityAddedEvent(item As EntityObject)
  overload: netDxf.Blocks.Block.OnEntityAddedEvent*
- uid: netDxf.Blocks.Block.EntityRemoved
  commentId: E:netDxf.Blocks.Block.EntityRemoved
  id: EntityRemoved
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: EntityRemoved
  nameWithType: Block.EntityRemoved
  fullName: netDxf.Blocks.Block.EntityRemoved
  type: Event
  source:
    id: EntityRemoved
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 70
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: public event Block.EntityRemovedEventHandler EntityRemoved
    return:
      type: netDxf.Blocks.Block.EntityRemovedEventHandler
    content.vb: Public Event EntityRemoved As Block.EntityRemovedEventHandler
- uid: netDxf.Blocks.Block.OnEntityRemovedEvent(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Blocks.Block.OnEntityRemovedEvent(netDxf.Entities.EntityObject)
  id: OnEntityRemovedEvent(netDxf.Entities.EntityObject)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: OnEntityRemovedEvent(EntityObject)
  nameWithType: Block.OnEntityRemovedEvent(EntityObject)
  fullName: netDxf.Blocks.Block.OnEntityRemovedEvent(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: OnEntityRemovedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 71
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: protected virtual void OnEntityRemovedEvent(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
    content.vb: Protected Overridable Sub OnEntityRemovedEvent(item As EntityObject)
  overload: netDxf.Blocks.Block.OnEntityRemovedEvent*
- uid: netDxf.Blocks.Block.AttributeDefinitionAdded
  commentId: E:netDxf.Blocks.Block.AttributeDefinitionAdded
  id: AttributeDefinitionAdded
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: AttributeDefinitionAdded
  nameWithType: Block.AttributeDefinitionAdded
  fullName: netDxf.Blocks.Block.AttributeDefinitionAdded
  type: Event
  source:
    id: AttributeDefinitionAdded
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 81
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: public event Block.AttributeDefinitionAddedEventHandler AttributeDefinitionAdded
    return:
      type: netDxf.Blocks.Block.AttributeDefinitionAddedEventHandler
    content.vb: Public Event AttributeDefinitionAdded As Block.AttributeDefinitionAddedEventHandler
- uid: netDxf.Blocks.Block.OnAttributeDefinitionAddedEvent(netDxf.Entities.AttributeDefinition)
  commentId: M:netDxf.Blocks.Block.OnAttributeDefinitionAddedEvent(netDxf.Entities.AttributeDefinition)
  id: OnAttributeDefinitionAddedEvent(netDxf.Entities.AttributeDefinition)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: OnAttributeDefinitionAddedEvent(AttributeDefinition)
  nameWithType: Block.OnAttributeDefinitionAddedEvent(AttributeDefinition)
  fullName: netDxf.Blocks.Block.OnAttributeDefinitionAddedEvent(netDxf.Entities.AttributeDefinition)
  type: Method
  source:
    id: OnAttributeDefinitionAddedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 82
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: protected virtual void OnAttributeDefinitionAddedEvent(AttributeDefinition item)
    parameters:
    - id: item
      type: netDxf.Entities.AttributeDefinition
    content.vb: Protected Overridable Sub OnAttributeDefinitionAddedEvent(item As AttributeDefinition)
  overload: netDxf.Blocks.Block.OnAttributeDefinitionAddedEvent*
- uid: netDxf.Blocks.Block.AttributeDefinitionRemoved
  commentId: E:netDxf.Blocks.Block.AttributeDefinitionRemoved
  id: AttributeDefinitionRemoved
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: AttributeDefinitionRemoved
  nameWithType: Block.AttributeDefinitionRemoved
  fullName: netDxf.Blocks.Block.AttributeDefinitionRemoved
  type: Event
  source:
    id: AttributeDefinitionRemoved
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 92
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: public event Block.AttributeDefinitionRemovedEventHandler AttributeDefinitionRemoved
    return:
      type: netDxf.Blocks.Block.AttributeDefinitionRemovedEventHandler
    content.vb: Public Event AttributeDefinitionRemoved As Block.AttributeDefinitionRemovedEventHandler
- uid: netDxf.Blocks.Block.OnAttributeDefinitionRemovedEvent(netDxf.Entities.AttributeDefinition)
  commentId: M:netDxf.Blocks.Block.OnAttributeDefinitionRemovedEvent(netDxf.Entities.AttributeDefinition)
  id: OnAttributeDefinitionRemovedEvent(netDxf.Entities.AttributeDefinition)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: OnAttributeDefinitionRemovedEvent(AttributeDefinition)
  nameWithType: Block.OnAttributeDefinitionRemovedEvent(AttributeDefinition)
  fullName: netDxf.Blocks.Block.OnAttributeDefinitionRemovedEvent(netDxf.Entities.AttributeDefinition)
  type: Method
  source:
    id: OnAttributeDefinitionRemovedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 93
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  syntax:
    content: protected virtual void OnAttributeDefinitionRemovedEvent(AttributeDefinition item)
    parameters:
    - id: item
      type: netDxf.Entities.AttributeDefinition
    content.vb: Protected Overridable Sub OnAttributeDefinitionRemovedEvent(item As AttributeDefinition)
  overload: netDxf.Blocks.Block.OnAttributeDefinitionRemovedEvent*
- uid: netDxf.Blocks.Block.DefaultModelSpaceName
  commentId: F:netDxf.Blocks.Block.DefaultModelSpaceName
  id: DefaultModelSpaceName
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: DefaultModelSpaceName
  nameWithType: Block.DefaultModelSpaceName
  fullName: netDxf.Blocks.Block.DefaultModelSpaceName
  type: Field
  source:
    id: DefaultModelSpaceName
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 123
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Default ModelSpace block name.
  example: []
  syntax:
    content: public const string DefaultModelSpaceName = "*Model_Space"
    return:
      type: System.String
    content.vb: Public Const DefaultModelSpaceName As String = "*Model_Space"
- uid: netDxf.Blocks.Block.DefaultPaperSpaceName
  commentId: F:netDxf.Blocks.Block.DefaultPaperSpaceName
  id: DefaultPaperSpaceName
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: DefaultPaperSpaceName
  nameWithType: Block.DefaultPaperSpaceName
  fullName: netDxf.Blocks.Block.DefaultPaperSpaceName
  type: Field
  source:
    id: DefaultPaperSpaceName
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 128
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Default PaperSpace block name.
  example: []
  syntax:
    content: public const string DefaultPaperSpaceName = "*Paper_Space"
    return:
      type: System.String
    content.vb: Public Const DefaultPaperSpaceName As String = "*Paper_Space"
- uid: netDxf.Blocks.Block.ModelSpace
  commentId: P:netDxf.Blocks.Block.ModelSpace
  id: ModelSpace
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: ModelSpace
  nameWithType: Block.ModelSpace
  fullName: netDxf.Blocks.Block.ModelSpace
  type: Property
  source:
    id: ModelSpace
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 133
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the default *Model_Space block.
  example: []
  syntax:
    content: public static Block ModelSpace { get; }
    parameters: []
    return:
      type: netDxf.Blocks.Block
    content.vb: Public Shared ReadOnly Property ModelSpace As Block
  overload: netDxf.Blocks.Block.ModelSpace*
- uid: netDxf.Blocks.Block.PaperSpace
  commentId: P:netDxf.Blocks.Block.PaperSpace
  id: PaperSpace
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: PaperSpace
  nameWithType: Block.PaperSpace
  fullName: netDxf.Blocks.Block.PaperSpace
  type: Property
  source:
    id: PaperSpace
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 141
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the default *Paper_Space block.
  example: []
  syntax:
    content: public static Block PaperSpace { get; }
    parameters: []
    return:
      type: netDxf.Blocks.Block
    content.vb: Public Shared ReadOnly Property PaperSpace As Block
  overload: netDxf.Blocks.Block.PaperSpace*
- uid: netDxf.Blocks.Block.#ctor(System.String,System.String)
  commentId: M:netDxf.Blocks.Block.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Block(string, string)
  nameWithType: Block.Block(string, string)
  fullName: netDxf.Blocks.Block.Block(string, string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 156
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Initializes a new instance of the <code>Block</code> class as an external reference drawing.
  remarks: Only DWG files can be used as externally referenced blocks.
  example: []
  syntax:
    content: public Block(string name, string xrefFile)
    parameters:
    - id: name
      type: System.String
      description: Block name.
    - id: xrefFile
      type: System.String
      description: External reference path name.
    content.vb: Public Sub New(name As String, xrefFile As String)
  overload: netDxf.Blocks.Block.#ctor*
  nameWithType.vb: Block.New(String, String)
  fullName.vb: netDxf.Blocks.Block.New(String, String)
  name.vb: New(String, String)
- uid: netDxf.Blocks.Block.#ctor(System.String,System.String,System.Boolean)
  commentId: M:netDxf.Blocks.Block.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Block(string, string, bool)
  nameWithType: Block.Block(string, string, bool)
  fullName: netDxf.Blocks.Block.Block(string, string, bool)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 168
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Initializes a new instance of the <code>Block</code> class as an external reference drawing.
  remarks: Only DWG files can be used as externally referenced blocks.
  example: []
  syntax:
    content: public Block(string name, string xrefFile, bool overlay)
    parameters:
    - id: name
      type: System.String
      description: Block name.
    - id: xrefFile
      type: System.String
      description: External reference path name.
    - id: overlay
      type: System.Boolean
      description: Specifies if the external reference is an overlay, by default it is set to false.
    content.vb: Public Sub New(name As String, xrefFile As String, overlay As Boolean)
  overload: netDxf.Blocks.Block.#ctor*
  nameWithType.vb: Block.New(String, String, Boolean)
  fullName.vb: netDxf.Blocks.Block.New(String, String, Boolean)
  name.vb: New(String, String, Boolean)
- uid: netDxf.Blocks.Block.#ctor(System.String)
  commentId: M:netDxf.Blocks.Block.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Block(string)
  nameWithType: Block.Block(string)
  fullName: netDxf.Blocks.Block.Block(string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 193
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Initializes a new instance of the <code>Block</code> class.
  example: []
  syntax:
    content: public Block(string name)
    parameters:
    - id: name
      type: System.String
      description: Block name.
    content.vb: Public Sub New(name As String)
  overload: netDxf.Blocks.Block.#ctor*
  nameWithType.vb: Block.New(String)
  fullName.vb: netDxf.Blocks.Block.New(String)
  name.vb: New(String)
- uid: netDxf.Blocks.Block.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  commentId: M:netDxf.Blocks.Block.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})'
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Block(string, IEnumerable<EntityObject>)
  nameWithType: Block.Block(string, IEnumerable<EntityObject>)
  fullName: netDxf.Blocks.Block.Block(string, System.Collections.Generic.IEnumerable<netDxf.Entities.EntityObject>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 203
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Initializes a new instance of the <code>Block</code> class.
  example: []
  syntax:
    content: public Block(string name, IEnumerable<EntityObject> entities)
    parameters:
    - id: name
      type: System.String
      description: Block name.
    - id: entities
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
      description: The list of entities that make the block.
    content.vb: Public Sub New(name As String, entities As IEnumerable(Of EntityObject))
  overload: netDxf.Blocks.Block.#ctor*
  nameWithType.vb: Block.New(String, IEnumerable(Of EntityObject))
  fullName.vb: netDxf.Blocks.Block.New(String, System.Collections.Generic.IEnumerable(Of netDxf.Entities.EntityObject))
  name.vb: New(String, IEnumerable(Of EntityObject))
- uid: netDxf.Blocks.Block.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject},System.Collections.Generic.IEnumerable{netDxf.Entities.AttributeDefinition})
  commentId: M:netDxf.Blocks.Block.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject},System.Collections.Generic.IEnumerable{netDxf.Entities.AttributeDefinition})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject},System.Collections.Generic.IEnumerable{netDxf.Entities.AttributeDefinition})'
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Block(string, IEnumerable<EntityObject>, IEnumerable<AttributeDefinition>)
  nameWithType: Block.Block(string, IEnumerable<EntityObject>, IEnumerable<AttributeDefinition>)
  fullName: netDxf.Blocks.Block.Block(string, System.Collections.Generic.IEnumerable<netDxf.Entities.EntityObject>, System.Collections.Generic.IEnumerable<netDxf.Entities.AttributeDefinition>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 214
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Initializes a new instance of the <code>Block</code> class.
  example: []
  syntax:
    content: public Block(string name, IEnumerable<EntityObject> entities, IEnumerable<AttributeDefinition> attributes)
    parameters:
    - id: name
      type: System.String
      description: Block name.
    - id: entities
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
      description: The list of entities that make the block.
    - id: attributes
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.AttributeDefinition}
      description: The list of attribute definitions that make the block.
    content.vb: Public Sub New(name As String, entities As IEnumerable(Of EntityObject), attributes As IEnumerable(Of AttributeDefinition))
  overload: netDxf.Blocks.Block.#ctor*
  nameWithType.vb: Block.New(String, IEnumerable(Of EntityObject), IEnumerable(Of AttributeDefinition))
  fullName.vb: netDxf.Blocks.Block.New(String, System.Collections.Generic.IEnumerable(Of netDxf.Entities.EntityObject), System.Collections.Generic.IEnumerable(Of netDxf.Entities.AttributeDefinition))
  name.vb: New(String, IEnumerable(Of EntityObject), IEnumerable(Of AttributeDefinition))
- uid: netDxf.Blocks.Block.Name
  commentId: P:netDxf.Blocks.Block.Name
  id: Name
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Block.Name
  fullName: netDxf.Blocks.Block.Name
  type: Property
  source:
    id: Name
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 272
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the name of the table object.
  remarks: >-
    Table object names are case insensitive.<br />

    The internal blocks that start with "*U" or "*T" can be safely renamed.

    They are internally created to represent dynamic blocks, arrays, and tables;

    although the information of those objects is lost when importing the DXF,

    the block that represent its graphical appearance is imported.
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: netDxf.Blocks.Block.Name*
- uid: netDxf.Blocks.Block.Description
  commentId: P:netDxf.Blocks.Block.Description
  id: Description
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Block.Description
  fullName: netDxf.Blocks.Block.Description
  type: Property
  source:
    id: Description
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 307
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets or sets the block description.
  remarks: >-
    AutoCAD has an unknown limit on the number of characters for the description when loading an external DXF,

    while, on the other hand is perfectly capable of saving a Block description that surpasses such limit.<br />

    Keep in mind that when saving a DXF prior to the AutoCad2007 version, non-ASCII characters will be encoded,

    therefore a single letter might consume more characters when saved into the DXF.<br />

    New line characters are not allowed.
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: netDxf.Blocks.Block.Description*
- uid: netDxf.Blocks.Block.Origin
  commentId: P:netDxf.Blocks.Block.Origin
  id: Origin
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: Block.Origin
  fullName: netDxf.Blocks.Block.Origin
  type: Property
  source:
    id: Origin
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 316
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets or sets the block origin in world coordinates, it is recommended to always keep this value to the default Vector3.Zero.
  example: []
  syntax:
    content: public Vector3 Origin { get; set; }
    parameters: []
    return:
      type: netDxf.Vector3
    content.vb: Public Property Origin As Vector3
  overload: netDxf.Blocks.Block.Origin*
- uid: netDxf.Blocks.Block.Layer
  commentId: P:netDxf.Blocks.Block.Layer
  id: Layer
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Layer
  nameWithType: Block.Layer
  fullName: netDxf.Blocks.Block.Layer
  type: Property
  source:
    id: Layer
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 326
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets or sets the block <xref href="netDxf.Blocks.Block.Layer?text=layer" data-throw-if-not-resolved="false"></xref>.
  remarks: It seems that the block layer is always the default "0" regardless of what is defined here, so it is pointless to change this value.
  example: []
  syntax:
    content: public Layer Layer { get; set; }
    parameters: []
    return:
      type: netDxf.Tables.Layer
    content.vb: Public Property Layer As Layer
  overload: netDxf.Blocks.Block.Layer*
- uid: netDxf.Blocks.Block.Entities
  commentId: P:netDxf.Blocks.Block.Entities
  id: Entities
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Entities
  nameWithType: Block.Entities
  fullName: netDxf.Blocks.Block.Entities
  type: Property
  source:
    id: Entities
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 343
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> list of the block.
  remarks: Null entities, attribute definitions or entities already owned by another block or document cannot be added to the list.
  example: []
  syntax:
    content: public EntityCollection Entities { get; }
    parameters: []
    return:
      type: netDxf.Collections.EntityCollection
    content.vb: Public ReadOnly Property Entities As EntityCollection
  overload: netDxf.Blocks.Block.Entities*
- uid: netDxf.Blocks.Block.AttributeDefinitions
  commentId: P:netDxf.Blocks.Block.AttributeDefinitions
  id: AttributeDefinitions
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: AttributeDefinitions
  nameWithType: Block.AttributeDefinitions
  fullName: netDxf.Blocks.Block.AttributeDefinitions
  type: Property
  source:
    id: AttributeDefinitions
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 355
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the <xref href="netDxf.Entities.AttributeDefinition?text=entity" data-throw-if-not-resolved="false"></xref> list of the block.
  remarks: >-
    Null or attribute definitions already owned by another block or document cannot be added to the list.

    Additionally Paper Space blocks do not contain attribute definitions.
  example: []
  syntax:
    content: public AttributeDefinitionDictionary AttributeDefinitions { get; }
    parameters: []
    return:
      type: netDxf.Collections.AttributeDefinitionDictionary
    content.vb: Public ReadOnly Property AttributeDefinitions As AttributeDefinitionDictionary
  overload: netDxf.Blocks.Block.AttributeDefinitions*
- uid: netDxf.Blocks.Block.Owner
  commentId: P:netDxf.Blocks.Block.Owner
  id: Owner
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: Block.Owner
  fullName: netDxf.Blocks.Block.Owner
  type: Property
  source:
    id: Owner
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 363
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the owner of the actual DXF object.
  example: []
  syntax:
    content: public BlockRecord Owner { get; }
    parameters: []
    return:
      type: netDxf.Blocks.BlockRecord
    content.vb: Public Property Owner As BlockRecord
  overload: netDxf.Blocks.Block.Owner*
- uid: netDxf.Blocks.Block.Record
  commentId: P:netDxf.Blocks.Block.Record
  id: Record
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Record
  nameWithType: Block.Record
  fullName: netDxf.Blocks.Block.Record
  type: Property
  source:
    id: Record
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 373
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the block record associated with this block.
  remarks: It returns the same object as the owner property.
  example: []
  syntax:
    content: public BlockRecord Record { get; }
    parameters: []
    return:
      type: netDxf.Blocks.BlockRecord
    content.vb: Public ReadOnly Property Record As BlockRecord
  overload: netDxf.Blocks.Block.Record*
- uid: netDxf.Blocks.Block.Flags
  commentId: P:netDxf.Blocks.Block.Flags
  id: Flags
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: Block.Flags
  fullName: netDxf.Blocks.Block.Flags
  type: Property
  source:
    id: Flags
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 381
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the block-type flags (bit-coded values, may be combined).
  example: []
  syntax:
    content: public BlockTypeFlags Flags { get; }
    parameters: []
    return:
      type: netDxf.Blocks.BlockTypeFlags
    content.vb: Public Property Flags As BlockTypeFlags
  overload: netDxf.Blocks.Block.Flags*
- uid: netDxf.Blocks.Block.XrefFile
  commentId: P:netDxf.Blocks.Block.XrefFile
  id: XrefFile
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: XrefFile
  nameWithType: Block.XrefFile
  fullName: netDxf.Blocks.Block.XrefFile
  type: Property
  source:
    id: XrefFile
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 393
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the external reference path name.
  remarks: This property is only applicable to externally referenced blocks.
  example: []
  syntax:
    content: public string XrefFile { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property XrefFile As String
  overload: netDxf.Blocks.Block.XrefFile*
- uid: netDxf.Blocks.Block.IsXRef
  commentId: P:netDxf.Blocks.Block.IsXRef
  id: IsXRef
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: IsXRef
  nameWithType: Block.IsXRef
  fullName: netDxf.Blocks.Block.IsXRef
  type: Property
  source:
    id: IsXRef
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 401
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets if the block is an external reference.
  example: []
  syntax:
    content: public bool IsXRef { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsXRef As Boolean
  overload: netDxf.Blocks.Block.IsXRef*
- uid: netDxf.Blocks.Block.IsForInternalUseOnly
  commentId: P:netDxf.Blocks.Block.IsForInternalUseOnly
  id: IsForInternalUseOnly
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: IsForInternalUseOnly
  nameWithType: Block.IsForInternalUseOnly
  fullName: netDxf.Blocks.Block.IsForInternalUseOnly
  type: Property
  source:
    id: IsForInternalUseOnly
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 409
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: All blocks that starts with "*" are for internal use only.
  example: []
  syntax:
    content: public bool IsForInternalUseOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsForInternalUseOnly As Boolean
  overload: netDxf.Blocks.Block.IsForInternalUseOnly*
- uid: netDxf.Blocks.Block.Create(netDxf.DxfDocument,System.String)
  commentId: M:netDxf.Blocks.Block.Create(netDxf.DxfDocument,System.String)
  id: Create(netDxf.DxfDocument,System.String)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Create(DxfDocument, string)
  nameWithType: Block.Create(DxfDocument, string)
  fullName: netDxf.Blocks.Block.Create(netDxf.DxfDocument, string)
  type: Method
  source:
    id: Create
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 437
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Creates a block from the content of a <xref href="netDxf.DxfDocument?text=document" data-throw-if-not-resolved="false"></xref>.
  remarks: Only the entities contained in ModelSpace will make part of the block.
  example: []
  syntax:
    content: public static Block Create(DxfDocument doc, string name)
    parameters:
    - id: doc
      type: netDxf.DxfDocument
      description: A <xref href="netDxf.DxfDocument?text=DxfDocument" data-throw-if-not-resolved="false"></xref> instance.
    - id: name
      type: System.String
      description: Name of the new block.
    return:
      type: netDxf.Blocks.Block
      description: The block build from the <xref href="netDxf.DxfDocument?text=document" data-throw-if-not-resolved="false"></xref> content.
    content.vb: Public Shared Function Create(doc As DxfDocument, name As String) As Block
  overload: netDxf.Blocks.Block.Create*
  nameWithType.vb: Block.Create(DxfDocument, String)
  fullName.vb: netDxf.Blocks.Block.Create(netDxf.DxfDocument, String)
  name.vb: Create(DxfDocument, String)
- uid: netDxf.Blocks.Block.Load(System.String)
  commentId: M:netDxf.Blocks.Block.Load(System.String)
  id: Load(System.String)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Load(string)
  nameWithType: Block.Load(string)
  fullName: netDxf.Blocks.Block.Load(string)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 483
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Creates a block from an external DXF file.
  remarks: >-
    The name of the block will be the file name without extension, and

    only the entities contained in ModelSpace will make part of the block.
  example: []
  syntax:
    content: public static Block Load(string file)
    parameters:
    - id: file
      type: System.String
      description: DXF file name.
    return:
      type: netDxf.Blocks.Block
      description: The block build from the DXF file content. It will return null if the file has not been able to load.
    content.vb: Public Shared Function Load(file As String) As Block
  overload: netDxf.Blocks.Block.Load*
  nameWithType.vb: Block.Load(String)
  fullName.vb: netDxf.Blocks.Block.Load(String)
  name.vb: Load(String)
- uid: netDxf.Blocks.Block.Load(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.Blocks.Block.Load(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Load(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Load(string, IEnumerable<string>)
  nameWithType: Block.Load(string, IEnumerable<string>)
  fullName: netDxf.Blocks.Block.Load(string, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 498
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Creates a block from an external DXF file.
  remarks: >-
    The name of the block will be the file name without extension, and

    only the entities contained in ModelSpace will make part of the block.
  example: []
  syntax:
    content: public static Block Load(string file, IEnumerable<string> supportFolders)
    parameters:
    - id: file
      type: System.String
      description: DXF file name.
    - id: supportFolders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of the document support folders.
    return:
      type: netDxf.Blocks.Block
      description: The block build from the DXF file content. It will return null if the file has not been able to load.
    content.vb: Public Shared Function Load(file As String, supportFolders As IEnumerable(Of String)) As Block
  overload: netDxf.Blocks.Block.Load*
  nameWithType.vb: Block.Load(String, IEnumerable(Of String))
  fullName.vb: netDxf.Blocks.Block.Load(String, System.Collections.Generic.IEnumerable(Of String))
  name.vb: Load(String, IEnumerable(Of String))
- uid: netDxf.Blocks.Block.Load(System.String,System.String)
  commentId: M:netDxf.Blocks.Block.Load(System.String,System.String)
  id: Load(System.String,System.String)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Load(string, string)
  nameWithType: Block.Load(string, string)
  fullName: netDxf.Blocks.Block.Load(string, string)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 510
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Creates a block from an external DXF file.
  remarks: Only the entities contained in ModelSpace will make part of the block.
  example: []
  syntax:
    content: public static Block Load(string file, string name)
    parameters:
    - id: file
      type: System.String
      description: DXF file name.
    - id: name
      type: System.String
      description: Name of the new block.
    return:
      type: netDxf.Blocks.Block
      description: The block build from the DXF file content. It will return null if the file has not been able to load.
    content.vb: Public Shared Function Load(file As String, name As String) As Block
  overload: netDxf.Blocks.Block.Load*
  nameWithType.vb: Block.Load(String, String)
  fullName.vb: netDxf.Blocks.Block.Load(String, String)
  name.vb: Load(String, String)
- uid: netDxf.Blocks.Block.Load(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.Blocks.Block.Load(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Load(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Load(string, string, IEnumerable<string>)
  nameWithType: Block.Load(string, string, IEnumerable<string>)
  fullName: netDxf.Blocks.Block.Load(string, string, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 523
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Creates a block from an external DXF file.
  remarks: Only the entities contained in ModelSpace will make part of the block.
  example: []
  syntax:
    content: public static Block Load(string file, string name, IEnumerable<string> supportFolders)
    parameters:
    - id: file
      type: System.String
      description: DXF file name.
    - id: name
      type: System.String
      description: Name of the new block.
    - id: supportFolders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of the document support folders.
    return:
      type: netDxf.Blocks.Block
      description: The block build from the DXF file content. It will return null if the file has not been able to load.
    content.vb: Public Shared Function Load(file As String, name As String, supportFolders As IEnumerable(Of String)) As Block
  overload: netDxf.Blocks.Block.Load*
  nameWithType.vb: Block.Load(String, String, IEnumerable(Of String))
  fullName.vb: netDxf.Blocks.Block.Load(String, String, System.Collections.Generic.IEnumerable(Of String))
  name.vb: Load(String, String, IEnumerable(Of String))
- uid: netDxf.Blocks.Block.Save(System.String,netDxf.Header.DxfVersion)
  commentId: M:netDxf.Blocks.Block.Save(System.String,netDxf.Header.DxfVersion)
  id: Save(System.String,netDxf.Header.DxfVersion)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Save(string, DxfVersion)
  nameWithType: Block.Save(string, DxfVersion)
  fullName: netDxf.Blocks.Block.Save(string, netDxf.Header.DxfVersion)
  type: Method
  source:
    id: Save
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 549
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Saves a block to a text DXF file.
  example: []
  syntax:
    content: public bool Save(string file, DxfVersion version)
    parameters:
    - id: file
      type: System.String
      description: DXF file name.
    - id: version
      type: netDxf.Header.DxfVersion
      description: Version of the DXF database version.
    return:
      type: System.Boolean
      description: Return true if the file has been successfully save, false otherwise.
    content.vb: Public Function Save(file As String, version As DxfVersion) As Boolean
  overload: netDxf.Blocks.Block.Save*
  nameWithType.vb: Block.Save(String, DxfVersion)
  fullName.vb: netDxf.Blocks.Block.Save(String, netDxf.Header.DxfVersion)
  name.vb: Save(String, DxfVersion)
- uid: netDxf.Blocks.Block.Save(System.String,netDxf.Header.DxfVersion,System.Boolean)
  commentId: M:netDxf.Blocks.Block.Save(System.String,netDxf.Header.DxfVersion,System.Boolean)
  id: Save(System.String,netDxf.Header.DxfVersion,System.Boolean)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Save(string, DxfVersion, bool)
  nameWithType: Block.Save(string, DxfVersion, bool)
  fullName: netDxf.Blocks.Block.Save(string, netDxf.Header.DxfVersion, bool)
  type: Method
  source:
    id: Save
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 561
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Saves a block to a DXF file.
  example: []
  syntax:
    content: public bool Save(string file, DxfVersion version, bool isBinary)
    parameters:
    - id: file
      type: System.String
      description: DXF file name.
    - id: version
      type: netDxf.Header.DxfVersion
      description: Version of the DXF database version.
    - id: isBinary
      type: System.Boolean
      description: Defines if the file will be saved as binary.
    return:
      type: System.Boolean
      description: Return true if the file has been successfully save, false otherwise.
    content.vb: Public Function Save(file As String, version As DxfVersion, isBinary As Boolean) As Boolean
  overload: netDxf.Blocks.Block.Save*
  nameWithType.vb: Block.Save(String, DxfVersion, Boolean)
  fullName.vb: netDxf.Blocks.Block.Save(String, netDxf.Header.DxfVersion, Boolean)
  name.vb: Save(String, DxfVersion, Boolean)
- uid: netDxf.Blocks.Block.HasReferences
  commentId: M:netDxf.Blocks.Block.HasReferences
  id: HasReferences
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: HasReferences()
  nameWithType: Block.HasReferences()
  fullName: netDxf.Blocks.Block.HasReferences()
  type: Method
  source:
    id: HasReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 610
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Checks if this instance has been referenced by other DxfObjects.
  remarks: This method returns the same value as the HasReferences method that can be found in the TableObjects class.
  example: []
  syntax:
    content: public override bool HasReferences()
    return:
      type: System.Boolean
      description: >-
        Returns true if this instance has been referenced by other DxfObjects, false otherwise.

        It will always return false if this instance does not belong to a document.
    content.vb: Public Overrides Function HasReferences() As Boolean
  overridden: netDxf.Tables.TableObject.HasReferences
  overload: netDxf.Blocks.Block.HasReferences*
- uid: netDxf.Blocks.Block.GetReferences
  commentId: M:netDxf.Blocks.Block.GetReferences
  id: GetReferences
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: GetReferences()
  nameWithType: Block.GetReferences()
  fullName: netDxf.Blocks.Block.GetReferences()
  type: Method
  source:
    id: GetReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 625
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Gets the list of DxfObjects referenced by this instance.
  remarks: This method returns the same list as the GetReferences method that can be found in the TableObjects class.
  example: []
  syntax:
    content: public override List<DxfObjectReference> GetReferences()
    return:
      type: System.Collections.Generic.List{netDxf.DxfObjectReference}
      description: >-
        A list of DxfObjectReference that contains the DxfObject referenced by this instance and the number of times it does.

        It will return null if this instance does not belong to a document.
    content.vb: Public Overrides Function GetReferences() As List(Of DxfObjectReference)
  overridden: netDxf.Tables.TableObject.GetReferences
  overload: netDxf.Blocks.Block.GetReferences*
- uid: netDxf.Blocks.Block.Clone(System.String)
  commentId: M:netDxf.Blocks.Block.Clone(System.String)
  id: Clone(System.String)
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Clone(string)
  nameWithType: Block.Clone(string)
  fullName: netDxf.Blocks.Block.Clone(string)
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 684
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Creates a new Block that is a copy of the current instance.
  example: []
  syntax:
    content: public override TableObject Clone(string newName)
    parameters:
    - id: newName
      type: System.String
      description: Block name of the copy.
    return:
      type: netDxf.Tables.TableObject
      description: A new Block that is a copy of this instance.
    content.vb: Public Overrides Function Clone(newName As String) As TableObject
  overridden: netDxf.Tables.TableObject.Clone(System.String)
  overload: netDxf.Blocks.Block.Clone*
  nameWithType.vb: Block.Clone(String)
  fullName.vb: netDxf.Blocks.Block.Clone(String)
  name.vb: Clone(String)
- uid: netDxf.Blocks.Block.Clone
  commentId: M:netDxf.Blocks.Block.Clone
  id: Clone
  parent: netDxf.Blocks.Block
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Block.Clone()
  fullName: netDxf.Blocks.Block.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Blocks/Block.cs
    startLine: 693
  assemblies:
  - netDxf
  namespace: netDxf.Blocks
  summary: Creates a new Block that is a copy of the current instance.
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: A new Block that is a copy of this instance.
    content.vb: Public Overrides Function Clone() As Object
  overridden: netDxf.Tables.TableObject.Clone
  overload: netDxf.Blocks.Block.Clone*
references:
- uid: netDxf.Blocks
  commentId: N:netDxf.Blocks
  href: netDxf.html
  name: netDxf.Blocks
  nameWithType: netDxf.Blocks
  fullName: netDxf.Blocks
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Blocks
    name: Blocks
    href: netDxf.Blocks.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Blocks
    name: Blocks
    href: netDxf.Blocks.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: netDxf.Tables.TableObject
  commentId: T:netDxf.Tables.TableObject
  parent: netDxf.Tables
  href: netDxf.Tables.TableObject.html
  name: TableObject
  nameWithType: TableObject
  fullName: netDxf.Tables.TableObject
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{netDxf.Tables.TableObject}
  commentId: T:System.IComparable{netDxf.Tables.TableObject}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<TableObject>
  nameWithType: IComparable<TableObject>
  fullName: System.IComparable<netDxf.Tables.TableObject>
  nameWithType.vb: IComparable(Of TableObject)
  fullName.vb: System.IComparable(Of netDxf.Tables.TableObject)
  name.vb: IComparable(Of TableObject)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: System.IEquatable{netDxf.Tables.TableObject}
  commentId: T:System.IEquatable{netDxf.Tables.TableObject}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TableObject>
  nameWithType: IEquatable<TableObject>
  fullName: System.IEquatable<netDxf.Tables.TableObject>
  nameWithType.vb: IEquatable(Of TableObject)
  fullName.vb: System.IEquatable(Of netDxf.Tables.TableObject)
  name.vb: IEquatable(Of TableObject)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: netDxf.Tables.TableObject.NameChanged
  commentId: E:netDxf.Tables.TableObject.NameChanged
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_NameChanged
  name: NameChanged
  nameWithType: TableObject.NameChanged
  fullName: netDxf.Tables.TableObject.NameChanged
- uid: netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  commentId: M:netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_OnNameChangedEvent_System_String_System_String_
  name: OnNameChangedEvent(string, string)
  nameWithType: TableObject.OnNameChangedEvent(string, string)
  fullName: netDxf.Tables.TableObject.OnNameChangedEvent(string, string)
  nameWithType.vb: TableObject.OnNameChangedEvent(String, String)
  fullName.vb: netDxf.Tables.TableObject.OnNameChangedEvent(String, String)
  name.vb: OnNameChangedEvent(String, String)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
    name: OnNameChangedEvent
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_OnNameChangedEvent_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
    name: OnNameChangedEvent
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_OnNameChangedEvent_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Tables.TableObject.IsReserved
  commentId: P:netDxf.Tables.TableObject.IsReserved
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsReserved
  name: IsReserved
  nameWithType: TableObject.IsReserved
  fullName: netDxf.Tables.TableObject.IsReserved
- uid: netDxf.Tables.TableObject.InvalidCharacters
  commentId: P:netDxf.Tables.TableObject.InvalidCharacters
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_InvalidCharacters
  name: InvalidCharacters
  nameWithType: TableObject.InvalidCharacters
  fullName: netDxf.Tables.TableObject.InvalidCharacters
- uid: netDxf.Tables.TableObject.IsValidName(System.String)
  commentId: M:netDxf.Tables.TableObject.IsValidName(System.String)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsValidName_System_String_
  name: IsValidName(string)
  nameWithType: TableObject.IsValidName(string)
  fullName: netDxf.Tables.TableObject.IsValidName(string)
  nameWithType.vb: TableObject.IsValidName(String)
  fullName.vb: netDxf.Tables.TableObject.IsValidName(String)
  name.vb: IsValidName(String)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.IsValidName(System.String)
    name: IsValidName
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsValidName_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.IsValidName(System.String)
    name: IsValidName
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsValidName_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Tables.TableObject.ToString
  commentId: M:netDxf.Tables.TableObject.ToString
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_ToString
  name: ToString()
  nameWithType: TableObject.ToString()
  fullName: netDxf.Tables.TableObject.ToString()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.ToString
    name: ToString
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.ToString
    name: ToString
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_ToString
  - name: (
  - name: )
- uid: netDxf.Tables.TableObject.CompareTo(System.Object)
  commentId: M:netDxf.Tables.TableObject.CompareTo(System.Object)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_System_Object_
  name: CompareTo(object)
  nameWithType: TableObject.CompareTo(object)
  fullName: netDxf.Tables.TableObject.CompareTo(object)
  nameWithType.vb: TableObject.CompareTo(Object)
  fullName.vb: netDxf.Tables.TableObject.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.CompareTo(System.Object)
    name: CompareTo
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.CompareTo(System.Object)
    name: CompareTo
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  commentId: M:netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_netDxf_Tables_TableObject_
  name: CompareTo(TableObject)
  nameWithType: TableObject.CompareTo(TableObject)
  fullName: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
    name: CompareTo
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_netDxf_Tables_TableObject_
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
    name: CompareTo
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_netDxf_Tables_TableObject_
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: netDxf.Tables.TableObject.GetHashCode
  commentId: M:netDxf.Tables.TableObject.GetHashCode
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetHashCode
  name: GetHashCode()
  nameWithType: TableObject.GetHashCode()
  fullName: netDxf.Tables.TableObject.GetHashCode()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.GetHashCode
    name: GetHashCode
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.GetHashCode
    name: GetHashCode
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetHashCode
  - name: (
  - name: )
- uid: netDxf.Tables.TableObject.Equals(System.Object)
  commentId: M:netDxf.Tables.TableObject.Equals(System.Object)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_System_Object_
  name: Equals(object)
  nameWithType: TableObject.Equals(object)
  fullName: netDxf.Tables.TableObject.Equals(object)
  nameWithType.vb: TableObject.Equals(Object)
  fullName.vb: netDxf.Tables.TableObject.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.Equals(System.Object)
    name: Equals
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.Equals(System.Object)
    name: Equals
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  commentId: M:netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_netDxf_Tables_TableObject_
  name: Equals(TableObject)
  nameWithType: TableObject.Equals(TableObject)
  fullName: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
    name: Equals
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_netDxf_Tables_TableObject_
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
    name: Equals
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_netDxf_Tables_TableObject_
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataAddAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataAddAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataRemoveAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataRemoveAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  href: netDxf.html
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Blocks.Block.LayerChangedEventHandler
  commentId: T:netDxf.Blocks.Block.LayerChangedEventHandler
  parent: netDxf.Blocks
  href: netDxf.Blocks.Block.html
  name: Block.LayerChangedEventHandler
  nameWithType: Block.LayerChangedEventHandler
  fullName: netDxf.Blocks.Block.LayerChangedEventHandler
  spec.csharp:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.LayerChangedEventHandler
    name: LayerChangedEventHandler
    href: netDxf.Blocks.Block.LayerChangedEventHandler.html
  spec.vb:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.LayerChangedEventHandler
    name: LayerChangedEventHandler
    href: netDxf.Blocks.Block.LayerChangedEventHandler.html
- uid: netDxf.Blocks.Block.OnLayerChangedEvent*
  commentId: Overload:netDxf.Blocks.Block.OnLayerChangedEvent
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  name: OnLayerChangedEvent
  nameWithType: Block.OnLayerChangedEvent
  fullName: netDxf.Blocks.Block.OnLayerChangedEvent
- uid: netDxf.Tables.Layer
  commentId: T:netDxf.Tables.Layer
  parent: netDxf.Tables
  href: netDxf.Tables.Layer.html
  name: Layer
  nameWithType: Layer
  fullName: netDxf.Tables.Layer
- uid: netDxf.Blocks.Block.EntityAddedEventHandler
  commentId: T:netDxf.Blocks.Block.EntityAddedEventHandler
  parent: netDxf.Blocks
  href: netDxf.Blocks.Block.html
  name: Block.EntityAddedEventHandler
  nameWithType: Block.EntityAddedEventHandler
  fullName: netDxf.Blocks.Block.EntityAddedEventHandler
  spec.csharp:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.EntityAddedEventHandler
    name: EntityAddedEventHandler
    href: netDxf.Blocks.Block.EntityAddedEventHandler.html
  spec.vb:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.EntityAddedEventHandler
    name: EntityAddedEventHandler
    href: netDxf.Blocks.Block.EntityAddedEventHandler.html
- uid: netDxf.Blocks.Block.OnEntityAddedEvent*
  commentId: Overload:netDxf.Blocks.Block.OnEntityAddedEvent
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_OnEntityAddedEvent_netDxf_Entities_EntityObject_
  name: OnEntityAddedEvent
  nameWithType: Block.OnEntityAddedEvent
  fullName: netDxf.Blocks.Block.OnEntityAddedEvent
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  href: netDxf.Entities.EntityObject.html
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: netDxf.Blocks.Block.EntityRemovedEventHandler
  commentId: T:netDxf.Blocks.Block.EntityRemovedEventHandler
  parent: netDxf.Blocks
  href: netDxf.Blocks.Block.html
  name: Block.EntityRemovedEventHandler
  nameWithType: Block.EntityRemovedEventHandler
  fullName: netDxf.Blocks.Block.EntityRemovedEventHandler
  spec.csharp:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.EntityRemovedEventHandler
    name: EntityRemovedEventHandler
    href: netDxf.Blocks.Block.EntityRemovedEventHandler.html
  spec.vb:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.EntityRemovedEventHandler
    name: EntityRemovedEventHandler
    href: netDxf.Blocks.Block.EntityRemovedEventHandler.html
- uid: netDxf.Blocks.Block.OnEntityRemovedEvent*
  commentId: Overload:netDxf.Blocks.Block.OnEntityRemovedEvent
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_OnEntityRemovedEvent_netDxf_Entities_EntityObject_
  name: OnEntityRemovedEvent
  nameWithType: Block.OnEntityRemovedEvent
  fullName: netDxf.Blocks.Block.OnEntityRemovedEvent
- uid: netDxf.Blocks.Block.AttributeDefinitionAddedEventHandler
  commentId: T:netDxf.Blocks.Block.AttributeDefinitionAddedEventHandler
  parent: netDxf.Blocks
  href: netDxf.Blocks.Block.html
  name: Block.AttributeDefinitionAddedEventHandler
  nameWithType: Block.AttributeDefinitionAddedEventHandler
  fullName: netDxf.Blocks.Block.AttributeDefinitionAddedEventHandler
  spec.csharp:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.AttributeDefinitionAddedEventHandler
    name: AttributeDefinitionAddedEventHandler
    href: netDxf.Blocks.Block.AttributeDefinitionAddedEventHandler.html
  spec.vb:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.AttributeDefinitionAddedEventHandler
    name: AttributeDefinitionAddedEventHandler
    href: netDxf.Blocks.Block.AttributeDefinitionAddedEventHandler.html
- uid: netDxf.Blocks.Block.OnAttributeDefinitionAddedEvent*
  commentId: Overload:netDxf.Blocks.Block.OnAttributeDefinitionAddedEvent
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_OnAttributeDefinitionAddedEvent_netDxf_Entities_AttributeDefinition_
  name: OnAttributeDefinitionAddedEvent
  nameWithType: Block.OnAttributeDefinitionAddedEvent
  fullName: netDxf.Blocks.Block.OnAttributeDefinitionAddedEvent
- uid: netDxf.Entities.AttributeDefinition
  commentId: T:netDxf.Entities.AttributeDefinition
  parent: netDxf.Entities
  href: netDxf.Entities.AttributeDefinition.html
  name: AttributeDefinition
  nameWithType: AttributeDefinition
  fullName: netDxf.Entities.AttributeDefinition
- uid: netDxf.Blocks.Block.AttributeDefinitionRemovedEventHandler
  commentId: T:netDxf.Blocks.Block.AttributeDefinitionRemovedEventHandler
  parent: netDxf.Blocks
  href: netDxf.Blocks.Block.html
  name: Block.AttributeDefinitionRemovedEventHandler
  nameWithType: Block.AttributeDefinitionRemovedEventHandler
  fullName: netDxf.Blocks.Block.AttributeDefinitionRemovedEventHandler
  spec.csharp:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.AttributeDefinitionRemovedEventHandler
    name: AttributeDefinitionRemovedEventHandler
    href: netDxf.Blocks.Block.AttributeDefinitionRemovedEventHandler.html
  spec.vb:
  - uid: netDxf.Blocks.Block
    name: Block
    href: netDxf.Blocks.Block.html
  - name: .
  - uid: netDxf.Blocks.Block.AttributeDefinitionRemovedEventHandler
    name: AttributeDefinitionRemovedEventHandler
    href: netDxf.Blocks.Block.AttributeDefinitionRemovedEventHandler.html
- uid: netDxf.Blocks.Block.OnAttributeDefinitionRemovedEvent*
  commentId: Overload:netDxf.Blocks.Block.OnAttributeDefinitionRemovedEvent
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_OnAttributeDefinitionRemovedEvent_netDxf_Entities_AttributeDefinition_
  name: OnAttributeDefinitionRemovedEvent
  nameWithType: Block.OnAttributeDefinitionRemovedEvent
  fullName: netDxf.Blocks.Block.OnAttributeDefinitionRemovedEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Blocks.Block.ModelSpace*
  commentId: Overload:netDxf.Blocks.Block.ModelSpace
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_ModelSpace
  name: ModelSpace
  nameWithType: Block.ModelSpace
  fullName: netDxf.Blocks.Block.ModelSpace
- uid: netDxf.Blocks.Block
  commentId: T:netDxf.Blocks.Block
  parent: netDxf.Blocks
  href: netDxf.Blocks.Block.html
  name: Block
  nameWithType: Block
  fullName: netDxf.Blocks.Block
- uid: netDxf.Blocks.Block.PaperSpace*
  commentId: Overload:netDxf.Blocks.Block.PaperSpace
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_PaperSpace
  name: PaperSpace
  nameWithType: Block.PaperSpace
  fullName: netDxf.Blocks.Block.PaperSpace
- uid: netDxf.Blocks.Block.#ctor*
  commentId: Overload:netDxf.Blocks.Block.#ctor
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block__ctor_System_String_System_String_
  name: Block
  nameWithType: Block.Block
  fullName: netDxf.Blocks.Block.Block
  nameWithType.vb: Block.New
  fullName.vb: netDxf.Blocks.Block.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.AttributeDefinition}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.AttributeDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<AttributeDefinition>
  nameWithType: IEnumerable<AttributeDefinition>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.AttributeDefinition>
  nameWithType.vb: IEnumerable(Of AttributeDefinition)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.AttributeDefinition)
  name.vb: IEnumerable(Of AttributeDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.AttributeDefinition
    name: AttributeDefinition
    href: netDxf.Entities.AttributeDefinition.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.AttributeDefinition
    name: AttributeDefinition
    href: netDxf.Entities.AttributeDefinition.html
  - name: )
- uid: netDxf.Blocks.Block.Name*
  commentId: Overload:netDxf.Blocks.Block.Name
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Name
  name: Name
  nameWithType: Block.Name
  fullName: netDxf.Blocks.Block.Name
- uid: netDxf.Blocks.Block.Description*
  commentId: Overload:netDxf.Blocks.Block.Description
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Description
  name: Description
  nameWithType: Block.Description
  fullName: netDxf.Blocks.Block.Description
- uid: netDxf.Blocks.Block.Origin*
  commentId: Overload:netDxf.Blocks.Block.Origin
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Origin
  name: Origin
  nameWithType: Block.Origin
  fullName: netDxf.Blocks.Block.Origin
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  href: netDxf.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: netDxf.Blocks.Block.Layer
  commentId: P:netDxf.Blocks.Block.Layer
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Layer
  name: Layer
  nameWithType: Block.Layer
  fullName: netDxf.Blocks.Block.Layer
- uid: netDxf.Blocks.Block.Layer*
  commentId: Overload:netDxf.Blocks.Block.Layer
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Layer
  name: Layer
  nameWithType: Block.Layer
  fullName: netDxf.Blocks.Block.Layer
- uid: netDxf.Blocks.Block.Entities*
  commentId: Overload:netDxf.Blocks.Block.Entities
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Entities
  name: Entities
  nameWithType: Block.Entities
  fullName: netDxf.Blocks.Block.Entities
- uid: netDxf.Collections.EntityCollection
  commentId: T:netDxf.Collections.EntityCollection
  parent: netDxf.Collections
  href: netDxf.Collections.EntityCollection.html
  name: EntityCollection
  nameWithType: EntityCollection
  fullName: netDxf.Collections.EntityCollection
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: netDxf.Blocks.Block.AttributeDefinitions*
  commentId: Overload:netDxf.Blocks.Block.AttributeDefinitions
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_AttributeDefinitions
  name: AttributeDefinitions
  nameWithType: Block.AttributeDefinitions
  fullName: netDxf.Blocks.Block.AttributeDefinitions
- uid: netDxf.Collections.AttributeDefinitionDictionary
  commentId: T:netDxf.Collections.AttributeDefinitionDictionary
  parent: netDxf.Collections
  href: netDxf.Collections.AttributeDefinitionDictionary.html
  name: AttributeDefinitionDictionary
  nameWithType: AttributeDefinitionDictionary
  fullName: netDxf.Collections.AttributeDefinitionDictionary
- uid: netDxf.Blocks.Block.Owner*
  commentId: Overload:netDxf.Blocks.Block.Owner
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Owner
  name: Owner
  nameWithType: Block.Owner
  fullName: netDxf.Blocks.Block.Owner
- uid: netDxf.Blocks.BlockRecord
  commentId: T:netDxf.Blocks.BlockRecord
  parent: netDxf.Blocks
  href: netDxf.Blocks.BlockRecord.html
  name: BlockRecord
  nameWithType: BlockRecord
  fullName: netDxf.Blocks.BlockRecord
- uid: netDxf.Blocks.Block.Record*
  commentId: Overload:netDxf.Blocks.Block.Record
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Record
  name: Record
  nameWithType: Block.Record
  fullName: netDxf.Blocks.Block.Record
- uid: netDxf.Blocks.Block.Flags*
  commentId: Overload:netDxf.Blocks.Block.Flags
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Flags
  name: Flags
  nameWithType: Block.Flags
  fullName: netDxf.Blocks.Block.Flags
- uid: netDxf.Blocks.BlockTypeFlags
  commentId: T:netDxf.Blocks.BlockTypeFlags
  parent: netDxf.Blocks
  href: netDxf.Blocks.BlockTypeFlags.html
  name: BlockTypeFlags
  nameWithType: BlockTypeFlags
  fullName: netDxf.Blocks.BlockTypeFlags
- uid: netDxf.Blocks.Block.XrefFile*
  commentId: Overload:netDxf.Blocks.Block.XrefFile
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_XrefFile
  name: XrefFile
  nameWithType: Block.XrefFile
  fullName: netDxf.Blocks.Block.XrefFile
- uid: netDxf.Blocks.Block.IsXRef*
  commentId: Overload:netDxf.Blocks.Block.IsXRef
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_IsXRef
  name: IsXRef
  nameWithType: Block.IsXRef
  fullName: netDxf.Blocks.Block.IsXRef
- uid: netDxf.Blocks.Block.IsForInternalUseOnly*
  commentId: Overload:netDxf.Blocks.Block.IsForInternalUseOnly
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_IsForInternalUseOnly
  name: IsForInternalUseOnly
  nameWithType: Block.IsForInternalUseOnly
  fullName: netDxf.Blocks.Block.IsForInternalUseOnly
- uid: netDxf.DxfDocument
  commentId: T:netDxf.DxfDocument
  parent: netDxf
  href: netDxf.DxfDocument.html
  name: DxfDocument
  nameWithType: DxfDocument
  fullName: netDxf.DxfDocument
- uid: netDxf.Blocks.Block.Create*
  commentId: Overload:netDxf.Blocks.Block.Create
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Create_netDxf_DxfDocument_System_String_
  name: Create
  nameWithType: Block.Create
  fullName: netDxf.Blocks.Block.Create
- uid: netDxf.Blocks.Block.Load*
  commentId: Overload:netDxf.Blocks.Block.Load
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Load_System_String_
  name: Load
  nameWithType: Block.Load
  fullName: netDxf.Blocks.Block.Load
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Blocks.Block.Save*
  commentId: Overload:netDxf.Blocks.Block.Save
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Save_System_String_netDxf_Header_DxfVersion_
  name: Save
  nameWithType: Block.Save
  fullName: netDxf.Blocks.Block.Save
- uid: netDxf.Header.DxfVersion
  commentId: T:netDxf.Header.DxfVersion
  parent: netDxf.Header
  href: netDxf.Header.DxfVersion.html
  name: DxfVersion
  nameWithType: DxfVersion
  fullName: netDxf.Header.DxfVersion
- uid: netDxf.Header
  commentId: N:netDxf.Header
  href: netDxf.html
  name: netDxf.Header
  nameWithType: netDxf.Header
  fullName: netDxf.Header
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Header
    name: Header
    href: netDxf.Header.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Header
    name: Header
    href: netDxf.Header.html
- uid: netDxf.Tables.TableObject.HasReferences
  commentId: M:netDxf.Tables.TableObject.HasReferences
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_HasReferences
  name: HasReferences()
  nameWithType: TableObject.HasReferences()
  fullName: netDxf.Tables.TableObject.HasReferences()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.HasReferences
    name: HasReferences
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_HasReferences
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.HasReferences
    name: HasReferences
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_HasReferences
  - name: (
  - name: )
- uid: netDxf.Blocks.Block.HasReferences*
  commentId: Overload:netDxf.Blocks.Block.HasReferences
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_HasReferences
  name: HasReferences
  nameWithType: Block.HasReferences
  fullName: netDxf.Blocks.Block.HasReferences
- uid: netDxf.Tables.TableObject.GetReferences
  commentId: M:netDxf.Tables.TableObject.GetReferences
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetReferences
  name: GetReferences()
  nameWithType: TableObject.GetReferences()
  fullName: netDxf.Tables.TableObject.GetReferences()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.GetReferences
    name: GetReferences
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetReferences
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.GetReferences
    name: GetReferences
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetReferences
  - name: (
  - name: )
- uid: netDxf.Blocks.Block.GetReferences*
  commentId: Overload:netDxf.Blocks.Block.GetReferences
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_GetReferences
  name: GetReferences
  nameWithType: Block.GetReferences
  fullName: netDxf.Blocks.Block.GetReferences
- uid: System.Collections.Generic.List{netDxf.DxfObjectReference}
  commentId: T:System.Collections.Generic.List{netDxf.DxfObjectReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<DxfObjectReference>
  nameWithType: List<DxfObjectReference>
  fullName: System.Collections.Generic.List<netDxf.DxfObjectReference>
  nameWithType.vb: List(Of DxfObjectReference)
  fullName.vb: System.Collections.Generic.List(Of netDxf.DxfObjectReference)
  name.vb: List(Of DxfObjectReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.DxfObjectReference
    name: DxfObjectReference
    href: netDxf.DxfObjectReference.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.DxfObjectReference
    name: DxfObjectReference
    href: netDxf.DxfObjectReference.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Tables.TableObject.Clone(System.String)
  commentId: M:netDxf.Tables.TableObject.Clone(System.String)
  parent: netDxf.Tables.TableObject
  isExternal: true
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone_System_String_
  name: Clone(string)
  nameWithType: TableObject.Clone(string)
  fullName: netDxf.Tables.TableObject.Clone(string)
  nameWithType.vb: TableObject.Clone(String)
  fullName.vb: netDxf.Tables.TableObject.Clone(String)
  name.vb: Clone(String)
  spec.csharp:
  - uid: netDxf.Tables.TableObject.Clone(System.String)
    name: Clone
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.Clone(System.String)
    name: Clone
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Blocks.Block.Clone*
  commentId: Overload:netDxf.Blocks.Block.Clone
  href: netDxf.Blocks.Block.html#netDxf_Blocks_Block_Clone_System_String_
  name: Clone
  nameWithType: Block.Clone
  fullName: netDxf.Blocks.Block.Clone
- uid: netDxf.Tables.TableObject.Clone
  commentId: M:netDxf.Tables.TableObject.Clone
  parent: netDxf.Tables.TableObject
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone
  name: Clone()
  nameWithType: TableObject.Clone()
  fullName: netDxf.Tables.TableObject.Clone()
  spec.csharp:
  - uid: netDxf.Tables.TableObject.Clone
    name: Clone
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Tables.TableObject.Clone
    name: Clone
    href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone
  - name: (
  - name: )
