### YamlMime:ManagedReference
items:
- uid: netDxf.Entities.Text
  commentId: T:netDxf.Entities.Text
  id: Text
  parent: netDxf.Entities
  children:
  - netDxf.Entities.Text.#ctor
  - netDxf.Entities.Text.#ctor(System.String)
  - netDxf.Entities.Text.#ctor(System.String,netDxf.Vector2,System.Double)
  - netDxf.Entities.Text.#ctor(System.String,netDxf.Vector2,System.Double,netDxf.Tables.TextStyle)
  - netDxf.Entities.Text.#ctor(System.String,netDxf.Vector3,System.Double)
  - netDxf.Entities.Text.#ctor(System.String,netDxf.Vector3,System.Double,netDxf.Tables.TextStyle)
  - netDxf.Entities.Text.Alignment
  - netDxf.Entities.Text.Clone
  - netDxf.Entities.Text.DefaultMirrText
  - netDxf.Entities.Text.Height
  - netDxf.Entities.Text.IsBackward
  - netDxf.Entities.Text.IsUpsideDown
  - netDxf.Entities.Text.ObliqueAngle
  - netDxf.Entities.Text.OnTextStyleChangedEvent(netDxf.Tables.TextStyle,netDxf.Tables.TextStyle)
  - netDxf.Entities.Text.Position
  - netDxf.Entities.Text.Rotation
  - netDxf.Entities.Text.Style
  - netDxf.Entities.Text.TextStyleChanged
  - netDxf.Entities.Text.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  - netDxf.Entities.Text.Value
  - netDxf.Entities.Text.Width
  - netDxf.Entities.Text.WidthFactor
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: Text
  fullName: netDxf.Entities.Text
  type: Class
  source:
    id: Text
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 34
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Represents a Text <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class Text : EntityObject, ICloneable'
    content.vb: Public Class Text Inherits EntityObject Implements ICloneable
  inheritance:
  - System.Object
  - netDxf.DxfObject
  - netDxf.Entities.EntityObject
  implements:
  - System.ICloneable
  inheritedMembers:
  - netDxf.Entities.EntityObject.LayerChanged
  - netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  - netDxf.Entities.EntityObject.LinetypeChanged
  - netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  - netDxf.Entities.EntityObject.Reactors
  - netDxf.Entities.EntityObject.Type
  - netDxf.Entities.EntityObject.Color
  - netDxf.Entities.EntityObject.Layer
  - netDxf.Entities.EntityObject.Linetype
  - netDxf.Entities.EntityObject.Lineweight
  - netDxf.Entities.EntityObject.Transparency
  - netDxf.Entities.EntityObject.LinetypeScale
  - netDxf.Entities.EntityObject.IsVisible
  - netDxf.Entities.EntityObject.Normal
  - netDxf.Entities.EntityObject.Owner
  - netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  - netDxf.Entities.EntityObject.ToString
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.XData
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Entities.Text.TextStyleChanged
  commentId: E:netDxf.Entities.Text.TextStyleChanged
  id: TextStyleChanged
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: TextStyleChanged
  nameWithType: Text.TextStyleChanged
  fullName: netDxf.Entities.Text.TextStyleChanged
  type: Event
  source:
    id: TextStyleChanged
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 40
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  syntax:
    content: public event Text.TextStyleChangedEventHandler TextStyleChanged
    return:
      type: netDxf.Entities.Text.TextStyleChangedEventHandler
    content.vb: Public Event TextStyleChanged As Text.TextStyleChangedEventHandler
- uid: netDxf.Entities.Text.OnTextStyleChangedEvent(netDxf.Tables.TextStyle,netDxf.Tables.TextStyle)
  commentId: M:netDxf.Entities.Text.OnTextStyleChangedEvent(netDxf.Tables.TextStyle,netDxf.Tables.TextStyle)
  id: OnTextStyleChangedEvent(netDxf.Tables.TextStyle,netDxf.Tables.TextStyle)
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: OnTextStyleChangedEvent(TextStyle, TextStyle)
  nameWithType: Text.OnTextStyleChangedEvent(TextStyle, TextStyle)
  fullName: netDxf.Entities.Text.OnTextStyleChangedEvent(netDxf.Tables.TextStyle, netDxf.Tables.TextStyle)
  type: Method
  source:
    id: OnTextStyleChangedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 41
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  syntax:
    content: protected virtual TextStyle OnTextStyleChangedEvent(TextStyle oldTextStyle, TextStyle newTextStyle)
    parameters:
    - id: oldTextStyle
      type: netDxf.Tables.TextStyle
    - id: newTextStyle
      type: netDxf.Tables.TextStyle
    return:
      type: netDxf.Tables.TextStyle
    content.vb: Protected Overridable Function OnTextStyleChangedEvent(oldTextStyle As TextStyle, newTextStyle As TextStyle) As TextStyle
  overload: netDxf.Entities.Text.OnTextStyleChangedEvent*
- uid: netDxf.Entities.Text.#ctor
  commentId: M:netDxf.Entities.Text.#ctor
  id: '#ctor'
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Text()
  nameWithType: Text.Text()
  fullName: netDxf.Entities.Text.Text()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 76
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>Text</code> class.
  example: []
  syntax:
    content: public Text()
    content.vb: Public Sub New()
  overload: netDxf.Entities.Text.#ctor*
  nameWithType.vb: Text.New()
  fullName.vb: netDxf.Entities.Text.New()
  name.vb: New()
- uid: netDxf.Entities.Text.#ctor(System.String)
  commentId: M:netDxf.Entities.Text.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Text(string)
  nameWithType: Text.Text(string)
  fullName: netDxf.Entities.Text.Text(string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 85
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>Text</code> class.
  example: []
  syntax:
    content: public Text(string text)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    content.vb: Public Sub New(text As String)
  overload: netDxf.Entities.Text.#ctor*
  nameWithType.vb: Text.New(String)
  fullName.vb: netDxf.Entities.Text.New(String)
  name.vb: New(String)
- uid: netDxf.Entities.Text.#ctor(System.String,netDxf.Vector2,System.Double)
  commentId: M:netDxf.Entities.Text.#ctor(System.String,netDxf.Vector2,System.Double)
  id: '#ctor(System.String,netDxf.Vector2,System.Double)'
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Text(string, Vector2, double)
  nameWithType: Text.Text(string, Vector2, double)
  fullName: netDxf.Entities.Text.Text(string, netDxf.Vector2, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 96
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>Text</code> class.
  example: []
  syntax:
    content: public Text(string text, Vector2 position, double height)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector2
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    content.vb: Public Sub New(text As String, position As Vector2, height As Double)
  overload: netDxf.Entities.Text.#ctor*
  nameWithType.vb: Text.New(String, Vector2, Double)
  fullName.vb: netDxf.Entities.Text.New(String, netDxf.Vector2, Double)
  name.vb: New(String, Vector2, Double)
- uid: netDxf.Entities.Text.#ctor(System.String,netDxf.Vector3,System.Double)
  commentId: M:netDxf.Entities.Text.#ctor(System.String,netDxf.Vector3,System.Double)
  id: '#ctor(System.String,netDxf.Vector3,System.Double)'
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Text(string, Vector3, double)
  nameWithType: Text.Text(string, Vector3, double)
  fullName: netDxf.Entities.Text.Text(string, netDxf.Vector3, double)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 107
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>Text</code> class.
  example: []
  syntax:
    content: public Text(string text, Vector3 position, double height)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector3
      description: Text <xref href="netDxf.Vector3?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    content.vb: Public Sub New(text As String, position As Vector3, height As Double)
  overload: netDxf.Entities.Text.#ctor*
  nameWithType.vb: Text.New(String, Vector3, Double)
  fullName.vb: netDxf.Entities.Text.New(String, netDxf.Vector3, Double)
  name.vb: New(String, Vector3, Double)
- uid: netDxf.Entities.Text.#ctor(System.String,netDxf.Vector2,System.Double,netDxf.Tables.TextStyle)
  commentId: M:netDxf.Entities.Text.#ctor(System.String,netDxf.Vector2,System.Double,netDxf.Tables.TextStyle)
  id: '#ctor(System.String,netDxf.Vector2,System.Double,netDxf.Tables.TextStyle)'
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Text(string, Vector2, double, TextStyle)
  nameWithType: Text.Text(string, Vector2, double, TextStyle)
  fullName: netDxf.Entities.Text.Text(string, netDxf.Vector2, double, netDxf.Tables.TextStyle)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 120
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>Text</code> class.
  example: []
  syntax:
    content: public Text(string text, Vector2 position, double height, TextStyle style)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector2
      description: Text <xref href="netDxf.Vector2?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: style
      type: netDxf.Tables.TextStyle
      description: Text <xref href="netDxf.Tables.TextStyle?text=style" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(text As String, position As Vector2, height As Double, style As TextStyle)
  overload: netDxf.Entities.Text.#ctor*
  nameWithType.vb: Text.New(String, Vector2, Double, TextStyle)
  fullName.vb: netDxf.Entities.Text.New(String, netDxf.Vector2, Double, netDxf.Tables.TextStyle)
  name.vb: New(String, Vector2, Double, TextStyle)
- uid: netDxf.Entities.Text.#ctor(System.String,netDxf.Vector3,System.Double,netDxf.Tables.TextStyle)
  commentId: M:netDxf.Entities.Text.#ctor(System.String,netDxf.Vector3,System.Double,netDxf.Tables.TextStyle)
  id: '#ctor(System.String,netDxf.Vector3,System.Double,netDxf.Tables.TextStyle)'
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Text(string, Vector3, double, TextStyle)
  nameWithType: Text.Text(string, Vector3, double, TextStyle)
  fullName: netDxf.Entities.Text.Text(string, netDxf.Vector3, double, netDxf.Tables.TextStyle)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 132
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>Text</code> class.
  example: []
  syntax:
    content: public Text(string text, Vector3 position, double height, TextStyle style)
    parameters:
    - id: text
      type: System.String
      description: Text string.
    - id: position
      type: netDxf.Vector3
      description: Text <xref href="netDxf.Vector3?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
    - id: height
      type: System.Double
      description: Text height.
    - id: style
      type: netDxf.Tables.TextStyle
      description: Text <xref href="netDxf.Tables.TextStyle?text=style" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(text As String, position As Vector3, height As Double, style As TextStyle)
  overload: netDxf.Entities.Text.#ctor*
  nameWithType.vb: Text.New(String, Vector3, Double, TextStyle)
  fullName.vb: netDxf.Entities.Text.New(String, netDxf.Vector3, Double, netDxf.Tables.TextStyle)
  name.vb: New(String, Vector3, Double, TextStyle)
- uid: netDxf.Entities.Text.DefaultMirrText
  commentId: P:netDxf.Entities.Text.DefaultMirrText
  id: DefaultMirrText
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: DefaultMirrText
  nameWithType: Text.DefaultMirrText
  fullName: netDxf.Entities.Text.DefaultMirrText
  type: Property
  source:
    id: DefaultMirrText
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 160
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the text will be mirrored when a symmetry is performed, when the current Text entity does not belong to a DXF document.
  example: []
  syntax:
    content: public static bool DefaultMirrText { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property DefaultMirrText As Boolean
  overload: netDxf.Entities.Text.DefaultMirrText*
- uid: netDxf.Entities.Text.Position
  commentId: P:netDxf.Entities.Text.Position
  id: Position
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Text.Position
  fullName: netDxf.Entities.Text.Position
  type: Property
  source:
    id: Position
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 169
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets Text <xref href="netDxf.Vector3?text=position" data-throw-if-not-resolved="false"></xref> in world coordinates.
  example: []
  syntax:
    content: public Vector3 Position { get; set; }
    parameters: []
    return:
      type: netDxf.Vector3
    content.vb: Public Property Position As Vector3
  overload: netDxf.Entities.Text.Position*
- uid: netDxf.Entities.Text.Rotation
  commentId: P:netDxf.Entities.Text.Rotation
  id: Rotation
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Text.Rotation
  fullName: netDxf.Entities.Text.Rotation
  type: Property
  source:
    id: Rotation
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 178
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text rotation in degrees.
  example: []
  syntax:
    content: public double Rotation { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Rotation As Double
  overload: netDxf.Entities.Text.Rotation*
- uid: netDxf.Entities.Text.Height
  commentId: P:netDxf.Entities.Text.Height
  id: Height
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Text.Height
  fullName: netDxf.Entities.Text.Height
  type: Property
  source:
    id: Height
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 191
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text height.
  remarks: >-
    Valid values must be greater than zero. Default: 1.0.<br />

    When Alignment.Aligned is used this value is not applicable, it will be automatically adjusted so the text will fit in the specified width.
  example: []
  syntax:
    content: public double Height { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Height As Double
  overload: netDxf.Entities.Text.Height*
- uid: netDxf.Entities.Text.Width
  commentId: P:netDxf.Entities.Text.Width
  id: Width
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Text.Width
  fullName: netDxf.Entities.Text.Width
  type: Property
  source:
    id: Width
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 208
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text width, only applicable for text Alignment.Fit and Alignment.Align.
  remarks: 'Valid values must be greater than zero. Default: 1.0.'
  example: []
  syntax:
    content: public double Width { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Width As Double
  overload: netDxf.Entities.Text.Width*
- uid: netDxf.Entities.Text.WidthFactor
  commentId: P:netDxf.Entities.Text.WidthFactor
  id: WidthFactor
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: WidthFactor
  nameWithType: Text.WidthFactor
  fullName: netDxf.Entities.Text.WidthFactor
  type: Property
  source:
    id: WidthFactor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 228
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the width factor.
  remarks: >-
    Valid values range from 0.01 to 100. Default: 1.0.<br />

    When Alignment.Fit is used this value is not applicable, it will be automatically adjusted so the text will fit in the specified width.
  example: []
  syntax:
    content: public double WidthFactor { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property WidthFactor As Double
  overload: netDxf.Entities.Text.WidthFactor*
- uid: netDxf.Entities.Text.ObliqueAngle
  commentId: P:netDxf.Entities.Text.ObliqueAngle
  id: ObliqueAngle
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: ObliqueAngle
  nameWithType: Text.ObliqueAngle
  fullName: netDxf.Entities.Text.ObliqueAngle
  type: Property
  source:
    id: ObliqueAngle
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 245
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the font oblique angle.
  remarks: 'Valid values range from -85 to 85. Default: 0.0.'
  example: []
  syntax:
    content: public double ObliqueAngle { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ObliqueAngle As Double
  overload: netDxf.Entities.Text.ObliqueAngle*
- uid: netDxf.Entities.Text.Alignment
  commentId: P:netDxf.Entities.Text.Alignment
  id: Alignment
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Alignment
  nameWithType: Text.Alignment
  fullName: netDxf.Entities.Text.Alignment
  type: Property
  source:
    id: Alignment
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 261
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text alignment.
  example: []
  syntax:
    content: public TextAlignment Alignment { get; set; }
    parameters: []
    return:
      type: netDxf.Entities.TextAlignment
    content.vb: Public Property Alignment As TextAlignment
  overload: netDxf.Entities.Text.Alignment*
- uid: netDxf.Entities.Text.Style
  commentId: P:netDxf.Entities.Text.Style
  id: Style
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: Text.Style
  fullName: netDxf.Entities.Text.Style
  type: Property
  source:
    id: Style
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 270
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the <xref href="netDxf.Tables.TextStyle?text=text+style" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TextStyle Style { get; set; }
    parameters: []
    return:
      type: netDxf.Tables.TextStyle
    content.vb: Public Property Style As TextStyle
  overload: netDxf.Entities.Text.Style*
- uid: netDxf.Entities.Text.Value
  commentId: P:netDxf.Entities.Text.Value
  id: Value
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Text.Value
  fullName: netDxf.Entities.Text.Value
  type: Property
  source:
    id: Value
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 286
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the text string.
  example: []
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: netDxf.Entities.Text.Value*
- uid: netDxf.Entities.Text.IsBackward
  commentId: P:netDxf.Entities.Text.IsBackward
  id: IsBackward
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: IsBackward
  nameWithType: Text.IsBackward
  fullName: netDxf.Entities.Text.IsBackward
  type: Property
  source:
    id: IsBackward
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 295
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the text is backward (mirrored in X).
  example: []
  syntax:
    content: public bool IsBackward { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsBackward As Boolean
  overload: netDxf.Entities.Text.IsBackward*
- uid: netDxf.Entities.Text.IsUpsideDown
  commentId: P:netDxf.Entities.Text.IsUpsideDown
  id: IsUpsideDown
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: IsUpsideDown
  nameWithType: Text.IsUpsideDown
  fullName: netDxf.Entities.Text.IsUpsideDown
  type: Property
  source:
    id: IsUpsideDown
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 304
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets if the text is upside down (mirrored in Y).
  example: []
  syntax:
    content: public bool IsUpsideDown { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsUpsideDown As Boolean
  overload: netDxf.Entities.Text.IsUpsideDown*
- uid: netDxf.Entities.Text.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  commentId: M:netDxf.Entities.Text.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  id: TransformBy(netDxf.Matrix3,netDxf.Vector3)
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: TransformBy(Matrix3, Vector3)
  nameWithType: Text.TransformBy(Matrix3, Vector3)
  fullName: netDxf.Entities.Text.TransformBy(netDxf.Matrix3, netDxf.Vector3)
  type: Method
  source:
    id: TransformBy
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 326
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Moves, scales, and/or rotates the current entity given a 3x3 transformation matrix and a translation vector.
  remarks: >-
    When the current Text entity does not belong to a DXF document, the text will use the DefaultMirrText when a symmetry is performed;

    otherwise, the drawing variable MirrText will be used.<br />

    A symmetry around the X axis when the text uses an Alignment.BaseLineLeft, Alignment.BaseLineCenter, Alignment.BaseLineRight, Alignment.Fit or an Alignment.Aligned.

    A symmetry around the Y axis when the text uses an Alignment.Fit or an Alignment.Aligned.<br />

    Matrix3 adopts the convention of using column vectors to represent a transformation matrix.
  example: []
  syntax:
    content: public override void TransformBy(Matrix3 transformation, Vector3 translation)
    parameters:
    - id: transformation
      type: netDxf.Matrix3
      description: Transformation matrix.
    - id: translation
      type: netDxf.Vector3
      description: Translation vector.
    content.vb: Public Overrides Sub TransformBy(transformation As Matrix3, translation As Vector3)
  overridden: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  overload: netDxf.Entities.Text.TransformBy*
- uid: netDxf.Entities.Text.Clone
  commentId: M:netDxf.Entities.Text.Clone
  id: Clone
  parent: netDxf.Entities.Text
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Text.Clone()
  fullName: netDxf.Entities.Text.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/Text.cs
    startLine: 491
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a new Text that is a copy of the current instance.
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: A new Text that is a copy of this instance.
    content.vb: Public Overrides Function Clone() As Object
  overridden: netDxf.Entities.EntityObject.Clone
  overload: netDxf.Entities.Text.Clone*
references:
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  href: netDxf.Entities.EntityObject.html
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: netDxf.Entities.EntityObject.LayerChanged
  commentId: E:netDxf.Entities.EntityObject.LayerChanged
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LayerChanged
  name: LayerChanged
  nameWithType: EntityObject.LayerChanged
  fullName: netDxf.Entities.EntityObject.LayerChanged
- uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  commentId: M:netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  name: OnLayerChangedEvent(Layer, Layer)
  nameWithType: EntityObject.OnLayerChangedEvent(Layer, Layer)
  fullName: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer, netDxf.Tables.Layer)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
    name: OnLayerChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  - name: (
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.OnLayerChangedEvent(netDxf.Tables.Layer,netDxf.Tables.Layer)
    name: OnLayerChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLayerChangedEvent_netDxf_Tables_Layer_netDxf_Tables_Layer_
  - name: (
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Layer
    name: Layer
    href: netDxf.Tables.Layer.html
  - name: )
- uid: netDxf.Entities.EntityObject.LinetypeChanged
  commentId: E:netDxf.Entities.EntityObject.LinetypeChanged
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LinetypeChanged
  name: LinetypeChanged
  nameWithType: EntityObject.LinetypeChanged
  fullName: netDxf.Entities.EntityObject.LinetypeChanged
- uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  commentId: M:netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  name: OnLinetypeChangedEvent(Linetype, Linetype)
  nameWithType: EntityObject.OnLinetypeChangedEvent(Linetype, Linetype)
  fullName: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype, netDxf.Tables.Linetype)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
    name: OnLinetypeChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  - name: (
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.OnLinetypeChangedEvent(netDxf.Tables.Linetype,netDxf.Tables.Linetype)
    name: OnLinetypeChangedEvent
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_OnLinetypeChangedEvent_netDxf_Tables_Linetype_netDxf_Tables_Linetype_
  - name: (
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: ','
  - name: " "
  - uid: netDxf.Tables.Linetype
    name: Linetype
    href: netDxf.Tables.Linetype.html
  - name: )
- uid: netDxf.Entities.EntityObject.Reactors
  commentId: P:netDxf.Entities.EntityObject.Reactors
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Reactors
  name: Reactors
  nameWithType: EntityObject.Reactors
  fullName: netDxf.Entities.EntityObject.Reactors
- uid: netDxf.Entities.EntityObject.Type
  commentId: P:netDxf.Entities.EntityObject.Type
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Type
  name: Type
  nameWithType: EntityObject.Type
  fullName: netDxf.Entities.EntityObject.Type
- uid: netDxf.Entities.EntityObject.Color
  commentId: P:netDxf.Entities.EntityObject.Color
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Color
  name: Color
  nameWithType: EntityObject.Color
  fullName: netDxf.Entities.EntityObject.Color
- uid: netDxf.Entities.EntityObject.Layer
  commentId: P:netDxf.Entities.EntityObject.Layer
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Layer
  name: Layer
  nameWithType: EntityObject.Layer
  fullName: netDxf.Entities.EntityObject.Layer
- uid: netDxf.Entities.EntityObject.Linetype
  commentId: P:netDxf.Entities.EntityObject.Linetype
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Linetype
  name: Linetype
  nameWithType: EntityObject.Linetype
  fullName: netDxf.Entities.EntityObject.Linetype
- uid: netDxf.Entities.EntityObject.Lineweight
  commentId: P:netDxf.Entities.EntityObject.Lineweight
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Lineweight
  name: Lineweight
  nameWithType: EntityObject.Lineweight
  fullName: netDxf.Entities.EntityObject.Lineweight
- uid: netDxf.Entities.EntityObject.Transparency
  commentId: P:netDxf.Entities.EntityObject.Transparency
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Transparency
  name: Transparency
  nameWithType: EntityObject.Transparency
  fullName: netDxf.Entities.EntityObject.Transparency
- uid: netDxf.Entities.EntityObject.LinetypeScale
  commentId: P:netDxf.Entities.EntityObject.LinetypeScale
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_LinetypeScale
  name: LinetypeScale
  nameWithType: EntityObject.LinetypeScale
  fullName: netDxf.Entities.EntityObject.LinetypeScale
- uid: netDxf.Entities.EntityObject.IsVisible
  commentId: P:netDxf.Entities.EntityObject.IsVisible
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_IsVisible
  name: IsVisible
  nameWithType: EntityObject.IsVisible
  fullName: netDxf.Entities.EntityObject.IsVisible
- uid: netDxf.Entities.EntityObject.Normal
  commentId: P:netDxf.Entities.EntityObject.Normal
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Normal
  name: Normal
  nameWithType: EntityObject.Normal
  fullName: netDxf.Entities.EntityObject.Normal
- uid: netDxf.Entities.EntityObject.Owner
  commentId: P:netDxf.Entities.EntityObject.Owner
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Owner
  name: Owner
  nameWithType: EntityObject.Owner
  fullName: netDxf.Entities.EntityObject.Owner
- uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  commentId: M:netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  name: TransformBy(Matrix4)
  nameWithType: EntityObject.TransformBy(Matrix4)
  fullName: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  - name: (
  - uid: netDxf.Matrix4
    name: Matrix4
    href: netDxf.Matrix4.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix4)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix4_
  - name: (
  - uid: netDxf.Matrix4
    name: Matrix4
    href: netDxf.Matrix4.html
  - name: )
- uid: netDxf.Entities.EntityObject.ToString
  commentId: M:netDxf.Entities.EntityObject.ToString
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  name: ToString()
  nameWithType: EntityObject.ToString()
  fullName: netDxf.Entities.EntityObject.ToString()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.ToString
    name: ToString
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.ToString
    name: ToString
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_ToString
  - name: (
  - name: )
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataAddAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataAddAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataRemoveAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataRemoveAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.Entities.Text.TextStyleChangedEventHandler
  commentId: T:netDxf.Entities.Text.TextStyleChangedEventHandler
  parent: netDxf.Entities
  href: netDxf.Entities.Text.html
  name: Text.TextStyleChangedEventHandler
  nameWithType: Text.TextStyleChangedEventHandler
  fullName: netDxf.Entities.Text.TextStyleChangedEventHandler
  spec.csharp:
  - uid: netDxf.Entities.Text
    name: Text
    href: netDxf.Entities.Text.html
  - name: .
  - uid: netDxf.Entities.Text.TextStyleChangedEventHandler
    name: TextStyleChangedEventHandler
    href: netDxf.Entities.Text.TextStyleChangedEventHandler.html
  spec.vb:
  - uid: netDxf.Entities.Text
    name: Text
    href: netDxf.Entities.Text.html
  - name: .
  - uid: netDxf.Entities.Text.TextStyleChangedEventHandler
    name: TextStyleChangedEventHandler
    href: netDxf.Entities.Text.TextStyleChangedEventHandler.html
- uid: netDxf.Entities.Text.OnTextStyleChangedEvent*
  commentId: Overload:netDxf.Entities.Text.OnTextStyleChangedEvent
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_OnTextStyleChangedEvent_netDxf_Tables_TextStyle_netDxf_Tables_TextStyle_
  name: OnTextStyleChangedEvent
  nameWithType: Text.OnTextStyleChangedEvent
  fullName: netDxf.Entities.Text.OnTextStyleChangedEvent
- uid: netDxf.Tables.TextStyle
  commentId: T:netDxf.Tables.TextStyle
  parent: netDxf.Tables
  href: netDxf.Tables.TextStyle.html
  name: TextStyle
  nameWithType: TextStyle
  fullName: netDxf.Tables.TextStyle
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  href: netDxf.html
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
- uid: netDxf.Entities.Text.#ctor*
  commentId: Overload:netDxf.Entities.Text.#ctor
  href: netDxf.Entities.Text.html#netDxf_Entities_Text__ctor
  name: Text
  nameWithType: Text.Text
  fullName: netDxf.Entities.Text.Text
  nameWithType.vb: Text.New
  fullName.vb: netDxf.Entities.Text.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Vector2
  commentId: T:netDxf.Vector2
  parent: netDxf
  href: netDxf.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: netDxf.Vector2
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  href: netDxf.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: netDxf.Entities.Text.DefaultMirrText*
  commentId: Overload:netDxf.Entities.Text.DefaultMirrText
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_DefaultMirrText
  name: DefaultMirrText
  nameWithType: Text.DefaultMirrText
  fullName: netDxf.Entities.Text.DefaultMirrText
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Entities.Text.Position*
  commentId: Overload:netDxf.Entities.Text.Position
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_Position
  name: Position
  nameWithType: Text.Position
  fullName: netDxf.Entities.Text.Position
- uid: netDxf.Entities.Text.Rotation*
  commentId: Overload:netDxf.Entities.Text.Rotation
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_Rotation
  name: Rotation
  nameWithType: Text.Rotation
  fullName: netDxf.Entities.Text.Rotation
- uid: netDxf.Entities.Text.Height*
  commentId: Overload:netDxf.Entities.Text.Height
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_Height
  name: Height
  nameWithType: Text.Height
  fullName: netDxf.Entities.Text.Height
- uid: netDxf.Entities.Text.Width*
  commentId: Overload:netDxf.Entities.Text.Width
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_Width
  name: Width
  nameWithType: Text.Width
  fullName: netDxf.Entities.Text.Width
- uid: netDxf.Entities.Text.WidthFactor*
  commentId: Overload:netDxf.Entities.Text.WidthFactor
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_WidthFactor
  name: WidthFactor
  nameWithType: Text.WidthFactor
  fullName: netDxf.Entities.Text.WidthFactor
- uid: netDxf.Entities.Text.ObliqueAngle*
  commentId: Overload:netDxf.Entities.Text.ObliqueAngle
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_ObliqueAngle
  name: ObliqueAngle
  nameWithType: Text.ObliqueAngle
  fullName: netDxf.Entities.Text.ObliqueAngle
- uid: netDxf.Entities.Text.Alignment*
  commentId: Overload:netDxf.Entities.Text.Alignment
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_Alignment
  name: Alignment
  nameWithType: Text.Alignment
  fullName: netDxf.Entities.Text.Alignment
- uid: netDxf.Entities.TextAlignment
  commentId: T:netDxf.Entities.TextAlignment
  parent: netDxf.Entities
  href: netDxf.Entities.TextAlignment.html
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: netDxf.Entities.TextAlignment
- uid: netDxf.Entities.Text.Style*
  commentId: Overload:netDxf.Entities.Text.Style
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_Style
  name: Style
  nameWithType: Text.Style
  fullName: netDxf.Entities.Text.Style
- uid: netDxf.Entities.Text.Value*
  commentId: Overload:netDxf.Entities.Text.Value
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_Value
  name: Value
  nameWithType: Text.Value
  fullName: netDxf.Entities.Text.Value
- uid: netDxf.Entities.Text.IsBackward*
  commentId: Overload:netDxf.Entities.Text.IsBackward
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_IsBackward
  name: IsBackward
  nameWithType: Text.IsBackward
  fullName: netDxf.Entities.Text.IsBackward
- uid: netDxf.Entities.Text.IsUpsideDown*
  commentId: Overload:netDxf.Entities.Text.IsUpsideDown
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_IsUpsideDown
  name: IsUpsideDown
  nameWithType: Text.IsUpsideDown
  fullName: netDxf.Entities.Text.IsUpsideDown
- uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  commentId: M:netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  name: TransformBy(Matrix3, Vector3)
  nameWithType: EntityObject.TransformBy(Matrix3, Vector3)
  fullName: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3, netDxf.Vector3)
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  - name: (
  - uid: netDxf.Matrix3
    name: Matrix3
    href: netDxf.Matrix3.html
  - name: ','
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.TransformBy(netDxf.Matrix3,netDxf.Vector3)
    name: TransformBy
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  - name: (
  - uid: netDxf.Matrix3
    name: Matrix3
    href: netDxf.Matrix3.html
  - name: ','
  - name: " "
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: )
- uid: netDxf.Entities.Text.TransformBy*
  commentId: Overload:netDxf.Entities.Text.TransformBy
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_TransformBy_netDxf_Matrix3_netDxf_Vector3_
  name: TransformBy
  nameWithType: Text.TransformBy
  fullName: netDxf.Entities.Text.TransformBy
- uid: netDxf.Matrix3
  commentId: T:netDxf.Matrix3
  parent: netDxf
  href: netDxf.Matrix3.html
  name: Matrix3
  nameWithType: Matrix3
  fullName: netDxf.Matrix3
- uid: netDxf.Entities.EntityObject.Clone
  commentId: M:netDxf.Entities.EntityObject.Clone
  parent: netDxf.Entities.EntityObject
  href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  name: Clone()
  nameWithType: EntityObject.Clone()
  fullName: netDxf.Entities.EntityObject.Clone()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject.Clone
    name: Clone
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.Entities.EntityObject.Clone
    name: Clone
    href: netDxf.Entities.EntityObject.html#netDxf_Entities_EntityObject_Clone
  - name: (
  - name: )
- uid: netDxf.Entities.Text.Clone*
  commentId: Overload:netDxf.Entities.Text.Clone
  href: netDxf.Entities.Text.html#netDxf_Entities_Text_Clone
  name: Clone
  nameWithType: Text.Clone
  fullName: netDxf.Entities.Text.Clone
