### YamlMime:ManagedReference
items:
- uid: netDxf.Collections.EntityCollection
  commentId: T:netDxf.Collections.EntityCollection
  id: EntityCollection
  parent: netDxf.Collections
  children:
  - netDxf.Collections.EntityCollection.#ctor
  - netDxf.Collections.EntityCollection.#ctor(System.Int32)
  - netDxf.Collections.EntityCollection.Add(netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.AddItem
  - netDxf.Collections.EntityCollection.AddRange(System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  - netDxf.Collections.EntityCollection.BeforeAddItem
  - netDxf.Collections.EntityCollection.BeforeRemoveItem
  - netDxf.Collections.EntityCollection.Clear
  - netDxf.Collections.EntityCollection.Contains(netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.CopyTo(netDxf.Entities.EntityObject[],System.Int32)
  - netDxf.Collections.EntityCollection.Count
  - netDxf.Collections.EntityCollection.GetEnumerator
  - netDxf.Collections.EntityCollection.IndexOf(netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.Insert(System.Int32,netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.IsReadOnly
  - netDxf.Collections.EntityCollection.Item(System.Int32)
  - netDxf.Collections.EntityCollection.OnAddItemEvent(netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.OnBeforeAddItemEvent(netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.OnBeforeRemoveItemEvent(netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.OnRemoveItemEvent(netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.Remove(System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  - netDxf.Collections.EntityCollection.Remove(netDxf.Entities.EntityObject)
  - netDxf.Collections.EntityCollection.RemoveAt(System.Int32)
  - netDxf.Collections.EntityCollection.RemoveItem
  langs:
  - csharp
  - vb
  name: EntityCollection
  nameWithType: EntityCollection
  fullName: netDxf.Collections.EntityCollection
  type: Class
  source:
    id: EntityCollection
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Represent a collection of <xref href="netDxf.Entities.EntityObject?text=entities" data-throw-if-not-resolved="false"></xref> that fire events when it is modified.
  example: []
  syntax:
    content: 'public class EntityCollection : IList<EntityObject>, ICollection<EntityObject>, IEnumerable<EntityObject>, IEnumerable'
    content.vb: Public Class EntityCollection Implements IList(Of EntityObject), ICollection(Of EntityObject), IEnumerable(Of EntityObject), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{netDxf.Entities.EntityObject}
  - System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  - System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Collections.EntityCollection.BeforeAddItem
  commentId: E:netDxf.Collections.EntityCollection.BeforeAddItem
  id: BeforeAddItem
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: BeforeAddItem
  nameWithType: EntityCollection.BeforeAddItem
  fullName: netDxf.Collections.EntityCollection.BeforeAddItem
  type: Event
  source:
    id: BeforeAddItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 41
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event EntityCollection.BeforeAddItemEventHandler BeforeAddItem
    return:
      type: netDxf.Collections.EntityCollection.BeforeAddItemEventHandler
    content.vb: Public Event BeforeAddItem As EntityCollection.BeforeAddItemEventHandler
- uid: netDxf.Collections.EntityCollection.OnBeforeAddItemEvent(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.OnBeforeAddItemEvent(netDxf.Entities.EntityObject)
  id: OnBeforeAddItemEvent(netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: OnBeforeAddItemEvent(EntityObject)
  nameWithType: EntityCollection.OnBeforeAddItemEvent(EntityObject)
  fullName: netDxf.Collections.EntityCollection.OnBeforeAddItemEvent(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: OnBeforeAddItemEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 42
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: protected virtual bool OnBeforeAddItemEvent(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function OnBeforeAddItemEvent(item As EntityObject) As Boolean
  overload: netDxf.Collections.EntityCollection.OnBeforeAddItemEvent*
- uid: netDxf.Collections.EntityCollection.AddItem
  commentId: E:netDxf.Collections.EntityCollection.AddItem
  id: AddItem
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: AddItem
  nameWithType: EntityCollection.AddItem
  fullName: netDxf.Collections.EntityCollection.AddItem
  type: Event
  source:
    id: AddItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 55
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event EntityCollection.AddItemEventHandler AddItem
    return:
      type: netDxf.Collections.EntityCollection.AddItemEventHandler
    content.vb: Public Event AddItem As EntityCollection.AddItemEventHandler
- uid: netDxf.Collections.EntityCollection.OnAddItemEvent(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.OnAddItemEvent(netDxf.Entities.EntityObject)
  id: OnAddItemEvent(netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: OnAddItemEvent(EntityObject)
  nameWithType: EntityCollection.OnAddItemEvent(EntityObject)
  fullName: netDxf.Collections.EntityCollection.OnAddItemEvent(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: OnAddItemEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 56
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: protected virtual void OnAddItemEvent(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
    content.vb: Protected Overridable Sub OnAddItemEvent(item As EntityObject)
  overload: netDxf.Collections.EntityCollection.OnAddItemEvent*
- uid: netDxf.Collections.EntityCollection.BeforeRemoveItem
  commentId: E:netDxf.Collections.EntityCollection.BeforeRemoveItem
  id: BeforeRemoveItem
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: BeforeRemoveItem
  nameWithType: EntityCollection.BeforeRemoveItem
  fullName: netDxf.Collections.EntityCollection.BeforeRemoveItem
  type: Event
  source:
    id: BeforeRemoveItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 66
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event EntityCollection.BeforeRemoveItemEventHandler BeforeRemoveItem
    return:
      type: netDxf.Collections.EntityCollection.BeforeRemoveItemEventHandler
    content.vb: Public Event BeforeRemoveItem As EntityCollection.BeforeRemoveItemEventHandler
- uid: netDxf.Collections.EntityCollection.OnBeforeRemoveItemEvent(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.OnBeforeRemoveItemEvent(netDxf.Entities.EntityObject)
  id: OnBeforeRemoveItemEvent(netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: OnBeforeRemoveItemEvent(EntityObject)
  nameWithType: EntityCollection.OnBeforeRemoveItemEvent(EntityObject)
  fullName: netDxf.Collections.EntityCollection.OnBeforeRemoveItemEvent(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: OnBeforeRemoveItemEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 67
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: protected virtual bool OnBeforeRemoveItemEvent(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function OnBeforeRemoveItemEvent(item As EntityObject) As Boolean
  overload: netDxf.Collections.EntityCollection.OnBeforeRemoveItemEvent*
- uid: netDxf.Collections.EntityCollection.RemoveItem
  commentId: E:netDxf.Collections.EntityCollection.RemoveItem
  id: RemoveItem
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: RemoveItem
  nameWithType: EntityCollection.RemoveItem
  fullName: netDxf.Collections.EntityCollection.RemoveItem
  type: Event
  source:
    id: RemoveItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 80
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event EntityCollection.RemoveItemEventHandler RemoveItem
    return:
      type: netDxf.Collections.EntityCollection.RemoveItemEventHandler
    content.vb: Public Event RemoveItem As EntityCollection.RemoveItemEventHandler
- uid: netDxf.Collections.EntityCollection.OnRemoveItemEvent(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.OnRemoveItemEvent(netDxf.Entities.EntityObject)
  id: OnRemoveItemEvent(netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: OnRemoveItemEvent(EntityObject)
  nameWithType: EntityCollection.OnRemoveItemEvent(EntityObject)
  fullName: netDxf.Collections.EntityCollection.OnRemoveItemEvent(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: OnRemoveItemEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 81
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: protected virtual void OnRemoveItemEvent(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
    content.vb: Protected Overridable Sub OnRemoveItemEvent(item As EntityObject)
  overload: netDxf.Collections.EntityCollection.OnRemoveItemEvent*
- uid: netDxf.Collections.EntityCollection.#ctor
  commentId: M:netDxf.Collections.EntityCollection.#ctor
  id: '#ctor'
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: EntityCollection()
  nameWithType: EntityCollection.EntityCollection()
  fullName: netDxf.Collections.EntityCollection.EntityCollection()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 103
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>EntityCollection</code>.
  example: []
  syntax:
    content: public EntityCollection()
    content.vb: Public Sub New()
  overload: netDxf.Collections.EntityCollection.#ctor*
  nameWithType.vb: EntityCollection.New()
  fullName.vb: netDxf.Collections.EntityCollection.New()
  name.vb: New()
- uid: netDxf.Collections.EntityCollection.#ctor(System.Int32)
  commentId: M:netDxf.Collections.EntityCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: EntityCollection(int)
  nameWithType: EntityCollection.EntityCollection(int)
  fullName: netDxf.Collections.EntityCollection.EntityCollection(int)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 112
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>EntityCollection</code> and has the specified initial capacity.
  example: []
  syntax:
    content: public EntityCollection(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
      description: The number of items the collection can initially store.
    content.vb: Public Sub New(capacity As Integer)
  overload: netDxf.Collections.EntityCollection.#ctor*
  nameWithType.vb: EntityCollection.New(Integer)
  fullName.vb: netDxf.Collections.EntityCollection.New(Integer)
  name.vb: New(Integer)
- uid: netDxf.Collections.EntityCollection.Item(System.Int32)
  commentId: P:netDxf.Collections.EntityCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: EntityCollection.this[int]
  fullName: netDxf.Collections.EntityCollection.this[int]
  type: Property
  source:
    id: this[]
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 130
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets or sets the <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> at the specified index.
  example: []
  syntax:
    content: public EntityObject this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: netDxf.Entities.EntityObject
      description: The <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> at the specified index.
    content.vb: Public Default Property this[](index As Integer) As EntityObject
  overload: netDxf.Collections.EntityCollection.Item*
  implements:
  - System.Collections.Generic.IList{netDxf.Entities.EntityObject}.Item(System.Int32)
  nameWithType.vb: EntityCollection.this[](Integer)
  fullName.vb: netDxf.Collections.EntityCollection.this[](Integer)
  name.vb: this[](Integer)
- uid: netDxf.Collections.EntityCollection.Count
  commentId: P:netDxf.Collections.EntityCollection.Count
  id: Count
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: EntityCollection.Count
  fullName: netDxf.Collections.EntityCollection.Count
  type: Property
  source:
    id: Count
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 161
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the number of <xref href="netDxf.Entities.EntityObject?text=entities" data-throw-if-not-resolved="false"></xref> contained in the collection.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: netDxf.Collections.EntityCollection.Count*
  implements:
  - System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Count
- uid: netDxf.Collections.EntityCollection.IsReadOnly
  commentId: P:netDxf.Collections.EntityCollection.IsReadOnly
  id: IsReadOnly
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: EntityCollection.IsReadOnly
  fullName: netDxf.Collections.EntityCollection.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 169
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets a value indicating whether the collection is read-only.
  example: []
  syntax:
    content: public virtual bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
  overload: netDxf.Collections.EntityCollection.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.IsReadOnly
- uid: netDxf.Collections.EntityCollection.Add(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.Add(netDxf.Entities.EntityObject)
  id: Add(netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: Add(EntityObject)
  nameWithType: EntityCollection.Add(EntityObject)
  fullName: netDxf.Collections.EntityCollection.Add(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: Add
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 183
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds an <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> to the collection.
  example: []
  syntax:
    content: public void Add(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
      description: The <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> to add to the collection.
    content.vb: Public Sub Add(item As EntityObject)
  overload: netDxf.Collections.EntityCollection.Add*
- uid: netDxf.Collections.EntityCollection.AddRange(System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  commentId: M:netDxf.Collections.EntityCollection.AddRange(System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  id: AddRange(System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<EntityObject>)
  nameWithType: EntityCollection.AddRange(IEnumerable<EntityObject>)
  fullName: netDxf.Collections.EntityCollection.AddRange(System.Collections.Generic.IEnumerable<netDxf.Entities.EntityObject>)
  type: Method
  source:
    id: AddRange
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 197
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds an <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> list to the end of the collection.
  example: []
  syntax:
    content: public void AddRange(IEnumerable<EntityObject> collection)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
      description: The collection whose elements should be added.
    content.vb: Public Sub AddRange(collection As IEnumerable(Of EntityObject))
  overload: netDxf.Collections.EntityCollection.AddRange*
  nameWithType.vb: EntityCollection.AddRange(IEnumerable(Of EntityObject))
  fullName.vb: netDxf.Collections.EntityCollection.AddRange(System.Collections.Generic.IEnumerable(Of netDxf.Entities.EntityObject))
  name.vb: AddRange(IEnumerable(Of EntityObject))
- uid: netDxf.Collections.EntityCollection.Insert(System.Int32,netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.Insert(System.Int32,netDxf.Entities.EntityObject)
  id: Insert(System.Int32,netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: Insert(int, EntityObject)
  nameWithType: EntityCollection.Insert(int, EntityObject)
  fullName: netDxf.Collections.EntityCollection.Insert(int, netDxf.Entities.EntityObject)
  type: Method
  source:
    id: Insert
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 215
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Inserts an <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> into the collection at the specified index.
  example: []
  syntax:
    content: public void Insert(int index, EntityObject item)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which item should be inserted.
    - id: item
      type: netDxf.Entities.EntityObject
      description: The <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> to insert. The value can not be null.
    content.vb: Public Sub Insert(index As Integer, item As EntityObject)
  overload: netDxf.Collections.EntityCollection.Insert*
  nameWithType.vb: EntityCollection.Insert(Integer, EntityObject)
  fullName.vb: netDxf.Collections.EntityCollection.Insert(Integer, netDxf.Entities.EntityObject)
  name.vb: Insert(Integer, EntityObject)
- uid: netDxf.Collections.EntityCollection.Remove(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.Remove(netDxf.Entities.EntityObject)
  id: Remove(netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: Remove(EntityObject)
  nameWithType: EntityCollection.Remove(EntityObject)
  fullName: netDxf.Collections.EntityCollection.Remove(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 242
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the first occurrence of a specific <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> from the collection
  example: []
  syntax:
    content: public bool Remove(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
      description: The <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> to remove from the collection.
    return:
      type: System.Boolean
      description: True if <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> is successfully removed; otherwise, false.
    content.vb: Public Function Remove(item As EntityObject) As Boolean
  overload: netDxf.Collections.EntityCollection.Remove*
  implements:
  - System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Remove(netDxf.Entities.EntityObject)
- uid: netDxf.Collections.EntityCollection.Remove(System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  commentId: M:netDxf.Collections.EntityCollection.Remove(System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  id: Remove(System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject})
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: Remove(IEnumerable<EntityObject>)
  nameWithType: EntityCollection.Remove(IEnumerable<EntityObject>)
  fullName: netDxf.Collections.EntityCollection.Remove(System.Collections.Generic.IEnumerable<netDxf.Entities.EntityObject>)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 263
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the first occurrence of a specific object from the collection
  example: []
  syntax:
    content: public void Remove(IEnumerable<EntityObject> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
      description: The list of objects to remove from the collection.
    content.vb: Public Sub Remove(items As IEnumerable(Of EntityObject))
  overload: netDxf.Collections.EntityCollection.Remove*
  nameWithType.vb: EntityCollection.Remove(IEnumerable(Of EntityObject))
  fullName.vb: netDxf.Collections.EntityCollection.Remove(System.Collections.Generic.IEnumerable(Of netDxf.Entities.EntityObject))
  name.vb: Remove(IEnumerable(Of EntityObject))
- uid: netDxf.Collections.EntityCollection.RemoveAt(System.Int32)
  commentId: M:netDxf.Collections.EntityCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: EntityCollection.RemoveAt(int)
  fullName: netDxf.Collections.EntityCollection.RemoveAt(int)
  type: Method
  source:
    id: RemoveAt
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 280
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> at the specified index of the collection.
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> to remove.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: netDxf.Collections.EntityCollection.RemoveAt*
  implements:
  - System.Collections.Generic.IList{netDxf.Entities.EntityObject}.RemoveAt(System.Int32)
  nameWithType.vb: EntityCollection.RemoveAt(Integer)
  fullName.vb: netDxf.Collections.EntityCollection.RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: netDxf.Collections.EntityCollection.Clear
  commentId: M:netDxf.Collections.EntityCollection.Clear
  id: Clear
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: EntityCollection.Clear()
  fullName: netDxf.Collections.EntityCollection.Clear()
  type: Method
  source:
    id: Clear
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 300
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes all <xref href="netDxf.Entities.EntityObject?text=entities" data-throw-if-not-resolved="false"></xref> from the collection.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: netDxf.Collections.EntityCollection.Clear*
  implements:
  - System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Clear
- uid: netDxf.Collections.EntityCollection.IndexOf(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.IndexOf(netDxf.Entities.EntityObject)
  id: IndexOf(netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: IndexOf(EntityObject)
  nameWithType: EntityCollection.IndexOf(EntityObject)
  fullName: netDxf.Collections.EntityCollection.IndexOf(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: IndexOf
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 315
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Searches for the specified <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> and returns the zero-based index of the first occurrence within the entire collection.
  example: []
  syntax:
    content: public int IndexOf(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
      description: The <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> to locate in the collection.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, –1.
    content.vb: Public Function IndexOf(item As EntityObject) As Integer
  overload: netDxf.Collections.EntityCollection.IndexOf*
  implements:
  - System.Collections.Generic.IList{netDxf.Entities.EntityObject}.IndexOf(netDxf.Entities.EntityObject)
- uid: netDxf.Collections.EntityCollection.Contains(netDxf.Entities.EntityObject)
  commentId: M:netDxf.Collections.EntityCollection.Contains(netDxf.Entities.EntityObject)
  id: Contains(netDxf.Entities.EntityObject)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: Contains(EntityObject)
  nameWithType: EntityCollection.Contains(EntityObject)
  fullName: netDxf.Collections.EntityCollection.Contains(netDxf.Entities.EntityObject)
  type: Method
  source:
    id: Contains
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 325
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Determines whether an <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> is in the collection.
  example: []
  syntax:
    content: public bool Contains(EntityObject item)
    parameters:
    - id: item
      type: netDxf.Entities.EntityObject
      description: The <xref href="netDxf.Entities.EntityObject?text=entity" data-throw-if-not-resolved="false"></xref> to locate in the collection.
    return:
      type: System.Boolean
      description: True if item is found in the collection; otherwise, false.
    content.vb: Public Function Contains(item As EntityObject) As Boolean
  overload: netDxf.Collections.EntityCollection.Contains*
  implements:
  - System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Contains(netDxf.Entities.EntityObject)
- uid: netDxf.Collections.EntityCollection.CopyTo(netDxf.Entities.EntityObject[],System.Int32)
  commentId: M:netDxf.Collections.EntityCollection.CopyTo(netDxf.Entities.EntityObject[],System.Int32)
  id: CopyTo(netDxf.Entities.EntityObject[],System.Int32)
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: CopyTo(EntityObject[], int)
  nameWithType: EntityCollection.CopyTo(EntityObject[], int)
  fullName: netDxf.Collections.EntityCollection.CopyTo(netDxf.Entities.EntityObject[], int)
  type: Method
  source:
    id: CopyTo
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 335
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
  example: []
  syntax:
    content: public void CopyTo(EntityObject[] array, int arrayIndex)
    parameters:
    - id: array
      type: netDxf.Entities.EntityObject[]
      description: The one-dimensional System.Array that is the destination of the elements copied from the collection. The System.Array must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in array at which copying begins.
    content.vb: Public Sub CopyTo(array As EntityObject(), arrayIndex As Integer)
  overload: netDxf.Collections.EntityCollection.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.CopyTo(netDxf.Entities.EntityObject[],System.Int32)
  nameWithType.vb: EntityCollection.CopyTo(EntityObject(), Integer)
  fullName.vb: netDxf.Collections.EntityCollection.CopyTo(netDxf.Entities.EntityObject(), Integer)
  name.vb: CopyTo(EntityObject(), Integer)
- uid: netDxf.Collections.EntityCollection.GetEnumerator
  commentId: M:netDxf.Collections.EntityCollection.GetEnumerator
  id: GetEnumerator
  parent: netDxf.Collections.EntityCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: EntityCollection.GetEnumerator()
  fullName: netDxf.Collections.EntityCollection.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/EntityCollection.cs
    startLine: 344
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<EntityObject> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{netDxf.Entities.EntityObject}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of EntityObject)
  overload: netDxf.Collections.EntityCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}.GetEnumerator
references:
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  href: netDxf.Entities.EntityObject.html
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}
  commentId: T:System.Collections.Generic.IList{netDxf.Entities.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<EntityObject>
  nameWithType: IList<EntityObject>
  fullName: System.Collections.Generic.IList<netDxf.Entities.EntityObject>
  nameWithType.vb: IList(Of EntityObject)
  fullName.vb: System.Collections.Generic.IList(Of netDxf.Entities.EntityObject)
  name.vb: IList(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  commentId: T:System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<EntityObject>
  nameWithType: ICollection<EntityObject>
  fullName: System.Collections.Generic.ICollection<netDxf.Entities.EntityObject>
  nameWithType.vb: ICollection(Of EntityObject)
  fullName.vb: System.Collections.Generic.ICollection(Of netDxf.Entities.EntityObject)
  name.vb: ICollection(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: netDxf.Collections.EntityCollection.BeforeAddItemEventHandler
  commentId: T:netDxf.Collections.EntityCollection.BeforeAddItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.EntityCollection.html
  name: EntityCollection.BeforeAddItemEventHandler
  nameWithType: EntityCollection.BeforeAddItemEventHandler
  fullName: netDxf.Collections.EntityCollection.BeforeAddItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.EntityCollection
    name: EntityCollection
    href: netDxf.Collections.EntityCollection.html
  - name: .
  - uid: netDxf.Collections.EntityCollection.BeforeAddItemEventHandler
    name: BeforeAddItemEventHandler
    href: netDxf.Collections.EntityCollection.BeforeAddItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.EntityCollection
    name: EntityCollection
    href: netDxf.Collections.EntityCollection.html
  - name: .
  - uid: netDxf.Collections.EntityCollection.BeforeAddItemEventHandler
    name: BeforeAddItemEventHandler
    href: netDxf.Collections.EntityCollection.BeforeAddItemEventHandler.html
- uid: netDxf.Collections.EntityCollection.OnBeforeAddItemEvent*
  commentId: Overload:netDxf.Collections.EntityCollection.OnBeforeAddItemEvent
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_OnBeforeAddItemEvent_netDxf_Entities_EntityObject_
  name: OnBeforeAddItemEvent
  nameWithType: EntityCollection.OnBeforeAddItemEvent
  fullName: netDxf.Collections.EntityCollection.OnBeforeAddItemEvent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Collections.EntityCollection.AddItemEventHandler
  commentId: T:netDxf.Collections.EntityCollection.AddItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.EntityCollection.html
  name: EntityCollection.AddItemEventHandler
  nameWithType: EntityCollection.AddItemEventHandler
  fullName: netDxf.Collections.EntityCollection.AddItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.EntityCollection
    name: EntityCollection
    href: netDxf.Collections.EntityCollection.html
  - name: .
  - uid: netDxf.Collections.EntityCollection.AddItemEventHandler
    name: AddItemEventHandler
    href: netDxf.Collections.EntityCollection.AddItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.EntityCollection
    name: EntityCollection
    href: netDxf.Collections.EntityCollection.html
  - name: .
  - uid: netDxf.Collections.EntityCollection.AddItemEventHandler
    name: AddItemEventHandler
    href: netDxf.Collections.EntityCollection.AddItemEventHandler.html
- uid: netDxf.Collections.EntityCollection.OnAddItemEvent*
  commentId: Overload:netDxf.Collections.EntityCollection.OnAddItemEvent
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_OnAddItemEvent_netDxf_Entities_EntityObject_
  name: OnAddItemEvent
  nameWithType: EntityCollection.OnAddItemEvent
  fullName: netDxf.Collections.EntityCollection.OnAddItemEvent
- uid: netDxf.Collections.EntityCollection.BeforeRemoveItemEventHandler
  commentId: T:netDxf.Collections.EntityCollection.BeforeRemoveItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.EntityCollection.html
  name: EntityCollection.BeforeRemoveItemEventHandler
  nameWithType: EntityCollection.BeforeRemoveItemEventHandler
  fullName: netDxf.Collections.EntityCollection.BeforeRemoveItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.EntityCollection
    name: EntityCollection
    href: netDxf.Collections.EntityCollection.html
  - name: .
  - uid: netDxf.Collections.EntityCollection.BeforeRemoveItemEventHandler
    name: BeforeRemoveItemEventHandler
    href: netDxf.Collections.EntityCollection.BeforeRemoveItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.EntityCollection
    name: EntityCollection
    href: netDxf.Collections.EntityCollection.html
  - name: .
  - uid: netDxf.Collections.EntityCollection.BeforeRemoveItemEventHandler
    name: BeforeRemoveItemEventHandler
    href: netDxf.Collections.EntityCollection.BeforeRemoveItemEventHandler.html
- uid: netDxf.Collections.EntityCollection.OnBeforeRemoveItemEvent*
  commentId: Overload:netDxf.Collections.EntityCollection.OnBeforeRemoveItemEvent
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_OnBeforeRemoveItemEvent_netDxf_Entities_EntityObject_
  name: OnBeforeRemoveItemEvent
  nameWithType: EntityCollection.OnBeforeRemoveItemEvent
  fullName: netDxf.Collections.EntityCollection.OnBeforeRemoveItemEvent
- uid: netDxf.Collections.EntityCollection.RemoveItemEventHandler
  commentId: T:netDxf.Collections.EntityCollection.RemoveItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.EntityCollection.html
  name: EntityCollection.RemoveItemEventHandler
  nameWithType: EntityCollection.RemoveItemEventHandler
  fullName: netDxf.Collections.EntityCollection.RemoveItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.EntityCollection
    name: EntityCollection
    href: netDxf.Collections.EntityCollection.html
  - name: .
  - uid: netDxf.Collections.EntityCollection.RemoveItemEventHandler
    name: RemoveItemEventHandler
    href: netDxf.Collections.EntityCollection.RemoveItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.EntityCollection
    name: EntityCollection
    href: netDxf.Collections.EntityCollection.html
  - name: .
  - uid: netDxf.Collections.EntityCollection.RemoveItemEventHandler
    name: RemoveItemEventHandler
    href: netDxf.Collections.EntityCollection.RemoveItemEventHandler.html
- uid: netDxf.Collections.EntityCollection.OnRemoveItemEvent*
  commentId: Overload:netDxf.Collections.EntityCollection.OnRemoveItemEvent
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_OnRemoveItemEvent_netDxf_Entities_EntityObject_
  name: OnRemoveItemEvent
  nameWithType: EntityCollection.OnRemoveItemEvent
  fullName: netDxf.Collections.EntityCollection.OnRemoveItemEvent
- uid: netDxf.Collections.EntityCollection.#ctor*
  commentId: Overload:netDxf.Collections.EntityCollection.#ctor
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection__ctor
  name: EntityCollection
  nameWithType: EntityCollection.EntityCollection
  fullName: netDxf.Collections.EntityCollection.EntityCollection
  nameWithType.vb: EntityCollection.New
  fullName.vb: netDxf.Collections.EntityCollection.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.Collections.EntityCollection.Item*
  commentId: Overload:netDxf.Collections.EntityCollection.Item
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_Item_System_Int32_
  name: this
  nameWithType: EntityCollection.this
  fullName: netDxf.Collections.EntityCollection.this
  nameWithType.vb: EntityCollection.this[]
  fullName.vb: netDxf.Collections.EntityCollection.this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{netDxf.Entities.EntityObject}.Item(System.Int32)
  parent: System.Collections.Generic.IList{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<EntityObject>.this[int]
  fullName: System.Collections.Generic.IList<netDxf.Entities.EntityObject>.this[int]
  nameWithType.vb: IList(Of EntityObject).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of netDxf.Entities.EntityObject).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.EntityCollection.Count*
  commentId: Overload:netDxf.Collections.EntityCollection.Count
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_Count
  name: Count
  nameWithType: EntityCollection.Count
  fullName: netDxf.Collections.EntityCollection.Count
- uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Count
  commentId: P:System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Count
  parent: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<EntityObject>.Count
  fullName: System.Collections.Generic.ICollection<netDxf.Entities.EntityObject>.Count
  nameWithType.vb: ICollection(Of EntityObject).Count
  fullName.vb: System.Collections.Generic.ICollection(Of netDxf.Entities.EntityObject).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: netDxf.Collections.EntityCollection.IsReadOnly*
  commentId: Overload:netDxf.Collections.EntityCollection.IsReadOnly
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_IsReadOnly
  name: IsReadOnly
  nameWithType: EntityCollection.IsReadOnly
  fullName: netDxf.Collections.EntityCollection.IsReadOnly
- uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.IsReadOnly
  parent: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<EntityObject>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<netDxf.Entities.EntityObject>.IsReadOnly
  nameWithType.vb: ICollection(Of EntityObject).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of netDxf.Entities.EntityObject).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: netDxf.Collections.EntityCollection.Add*
  commentId: Overload:netDxf.Collections.EntityCollection.Add
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_Add_netDxf_Entities_EntityObject_
  name: Add
  nameWithType: EntityCollection.Add
  fullName: netDxf.Collections.EntityCollection.Add
- uid: netDxf.Collections.EntityCollection.AddRange*
  commentId: Overload:netDxf.Collections.EntityCollection.AddRange
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_AddRange_System_Collections_Generic_IEnumerable_netDxf_Entities_EntityObject__
  name: AddRange
  nameWithType: EntityCollection.AddRange
  fullName: netDxf.Collections.EntityCollection.AddRange
- uid: netDxf.Collections.EntityCollection.Insert*
  commentId: Overload:netDxf.Collections.EntityCollection.Insert
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_Insert_System_Int32_netDxf_Entities_EntityObject_
  name: Insert
  nameWithType: EntityCollection.Insert
  fullName: netDxf.Collections.EntityCollection.Insert
- uid: netDxf.Collections.EntityCollection.Remove*
  commentId: Overload:netDxf.Collections.EntityCollection.Remove
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_Remove_netDxf_Entities_EntityObject_
  name: Remove
  nameWithType: EntityCollection.Remove
  fullName: netDxf.Collections.EntityCollection.Remove
- uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Remove(netDxf.Entities.EntityObject)
  commentId: M:System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Remove(netDxf.Entities.EntityObject)
  parent: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(EntityObject)
  nameWithType: ICollection<EntityObject>.Remove(EntityObject)
  fullName: System.Collections.Generic.ICollection<netDxf.Entities.EntityObject>.Remove(netDxf.Entities.EntityObject)
  nameWithType.vb: ICollection(Of EntityObject).Remove(EntityObject)
  fullName.vb: System.Collections.Generic.ICollection(Of netDxf.Entities.EntityObject).Remove(netDxf.Entities.EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Remove(netDxf.Entities.EntityObject)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Remove(netDxf.Entities.EntityObject)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.EntityCollection.RemoveAt*
  commentId: Overload:netDxf.Collections.EntityCollection.RemoveAt
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: EntityCollection.RemoveAt
  fullName: netDxf.Collections.EntityCollection.RemoveAt
- uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{netDxf.Entities.EntityObject}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<EntityObject>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<netDxf.Entities.EntityObject>.RemoveAt(int)
  nameWithType.vb: IList(Of EntityObject).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of netDxf.Entities.EntityObject).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.EntityCollection.Clear*
  commentId: Overload:netDxf.Collections.EntityCollection.Clear
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_Clear
  name: Clear
  nameWithType: EntityCollection.Clear
  fullName: netDxf.Collections.EntityCollection.Clear
- uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Clear
  commentId: M:System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Clear
  parent: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<EntityObject>.Clear()
  fullName: System.Collections.Generic.ICollection<netDxf.Entities.EntityObject>.Clear()
  nameWithType.vb: ICollection(Of EntityObject).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of netDxf.Entities.EntityObject).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: netDxf.Collections.EntityCollection.IndexOf*
  commentId: Overload:netDxf.Collections.EntityCollection.IndexOf
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_IndexOf_netDxf_Entities_EntityObject_
  name: IndexOf
  nameWithType: EntityCollection.IndexOf
  fullName: netDxf.Collections.EntityCollection.IndexOf
- uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}.IndexOf(netDxf.Entities.EntityObject)
  commentId: M:System.Collections.Generic.IList{netDxf.Entities.EntityObject}.IndexOf(netDxf.Entities.EntityObject)
  parent: System.Collections.Generic.IList{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(EntityObject)
  nameWithType: IList<EntityObject>.IndexOf(EntityObject)
  fullName: System.Collections.Generic.IList<netDxf.Entities.EntityObject>.IndexOf(netDxf.Entities.EntityObject)
  nameWithType.vb: IList(Of EntityObject).IndexOf(EntityObject)
  fullName.vb: System.Collections.Generic.IList(Of netDxf.Entities.EntityObject).IndexOf(netDxf.Entities.EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}.IndexOf(netDxf.Entities.EntityObject)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{netDxf.Entities.EntityObject}.IndexOf(netDxf.Entities.EntityObject)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.EntityCollection.Contains*
  commentId: Overload:netDxf.Collections.EntityCollection.Contains
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_Contains_netDxf_Entities_EntityObject_
  name: Contains
  nameWithType: EntityCollection.Contains
  fullName: netDxf.Collections.EntityCollection.Contains
- uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Contains(netDxf.Entities.EntityObject)
  commentId: M:System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Contains(netDxf.Entities.EntityObject)
  parent: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(EntityObject)
  nameWithType: ICollection<EntityObject>.Contains(EntityObject)
  fullName: System.Collections.Generic.ICollection<netDxf.Entities.EntityObject>.Contains(netDxf.Entities.EntityObject)
  nameWithType.vb: ICollection(Of EntityObject).Contains(EntityObject)
  fullName.vb: System.Collections.Generic.ICollection(Of netDxf.Entities.EntityObject).Contains(netDxf.Entities.EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Contains(netDxf.Entities.EntityObject)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.Contains(netDxf.Entities.EntityObject)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.EntityCollection.CopyTo*
  commentId: Overload:netDxf.Collections.EntityCollection.CopyTo
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_CopyTo_netDxf_Entities_EntityObject___System_Int32_
  name: CopyTo
  nameWithType: EntityCollection.CopyTo
  fullName: netDxf.Collections.EntityCollection.CopyTo
- uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.CopyTo(netDxf.Entities.EntityObject[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.CopyTo(netDxf.Entities.EntityObject[],System.Int32)
  parent: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(EntityObject[], int)
  nameWithType: ICollection<EntityObject>.CopyTo(EntityObject[], int)
  fullName: System.Collections.Generic.ICollection<netDxf.Entities.EntityObject>.CopyTo(netDxf.Entities.EntityObject[], int)
  nameWithType.vb: ICollection(Of EntityObject).CopyTo(EntityObject(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of netDxf.Entities.EntityObject).CopyTo(netDxf.Entities.EntityObject(), Integer)
  name.vb: CopyTo(EntityObject(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.CopyTo(netDxf.Entities.EntityObject[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{netDxf.Entities.EntityObject}.CopyTo(netDxf.Entities.EntityObject[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Entities.EntityObject[]
  isExternal: true
  href: netDxf.Entities.EntityObject.html
  name: EntityObject[]
  nameWithType: EntityObject[]
  fullName: netDxf.Entities.EntityObject[]
  nameWithType.vb: EntityObject()
  fullName.vb: netDxf.Entities.EntityObject()
  name.vb: EntityObject()
  spec.csharp:
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.EntityCollection.GetEnumerator*
  commentId: Overload:netDxf.Collections.EntityCollection.GetEnumerator
  href: netDxf.Collections.EntityCollection.html#netDxf_Collections_EntityCollection_GetEnumerator
  name: GetEnumerator
  nameWithType: EntityCollection.GetEnumerator
  fullName: netDxf.Collections.EntityCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<EntityObject>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.EntityObject>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of EntityObject).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.EntityObject).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{netDxf.Entities.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerator{netDxf.Entities.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<EntityObject>
  nameWithType: IEnumerator<EntityObject>
  fullName: System.Collections.Generic.IEnumerator<netDxf.Entities.EntityObject>
  nameWithType.vb: IEnumerator(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerator(Of netDxf.Entities.EntityObject)
  name.vb: IEnumerator(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    href: netDxf.Entities.EntityObject.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
