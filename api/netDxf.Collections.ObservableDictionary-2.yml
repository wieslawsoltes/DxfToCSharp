### YamlMime:ManagedReference
items:
- uid: netDxf.Collections.ObservableDictionary`2
  commentId: T:netDxf.Collections.ObservableDictionary`2
  id: ObservableDictionary`2
  parent: netDxf.Collections
  children:
  - netDxf.Collections.ObservableDictionary`2.#ctor
  - netDxf.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - netDxf.Collections.ObservableDictionary`2.#ctor(System.Int32)
  - netDxf.Collections.ObservableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  - netDxf.Collections.ObservableDictionary`2.Add(`0,`1)
  - netDxf.Collections.ObservableDictionary`2.AddItem
  - netDxf.Collections.ObservableDictionary`2.BeforeAddItem
  - netDxf.Collections.ObservableDictionary`2.BeforeRemoveItem
  - netDxf.Collections.ObservableDictionary`2.Clear
  - netDxf.Collections.ObservableDictionary`2.ContainsKey(`0)
  - netDxf.Collections.ObservableDictionary`2.ContainsValue(`1)
  - netDxf.Collections.ObservableDictionary`2.Count
  - netDxf.Collections.ObservableDictionary`2.GetEnumerator
  - netDxf.Collections.ObservableDictionary`2.IsReadOnly
  - netDxf.Collections.ObservableDictionary`2.Item(`0)
  - netDxf.Collections.ObservableDictionary`2.Keys
  - netDxf.Collections.ObservableDictionary`2.Remove(`0)
  - netDxf.Collections.ObservableDictionary`2.RemoveItem
  - netDxf.Collections.ObservableDictionary`2.TryGetValue(`0,`1@)
  - netDxf.Collections.ObservableDictionary`2.Values
  langs:
  - csharp
  - vb
  name: ObservableDictionary<TKey, TValue>
  nameWithType: ObservableDictionary<TKey, TValue>
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>
  type: Class
  source:
    id: ObservableDictionary
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 31
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: 'public sealed class ObservableDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public NotInheritable Class ObservableDictionary(Of TKey, TValue) Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  nameWithType.vb: ObservableDictionary(Of TKey, TValue)
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue)
  name.vb: ObservableDictionary(Of TKey, TValue)
- uid: netDxf.Collections.ObservableDictionary`2.BeforeAddItem
  commentId: E:netDxf.Collections.ObservableDictionary`2.BeforeAddItem
  id: BeforeAddItem
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: BeforeAddItem
  nameWithType: ObservableDictionary<TKey, TValue>.BeforeAddItem
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.BeforeAddItem
  type: Event
  source:
    id: BeforeAddItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 44
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event ObservableDictionary<TKey, TValue>.BeforeAddItemEventHandler BeforeAddItem
    return:
      type: netDxf.Collections.ObservableDictionary`2.BeforeAddItemEventHandler
    content.vb: Public Event BeforeAddItem As ObservableDictionary(Of TKey, TValue).BeforeAddItemEventHandler
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).BeforeAddItem
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).BeforeAddItem
- uid: netDxf.Collections.ObservableDictionary`2.AddItem
  commentId: E:netDxf.Collections.ObservableDictionary`2.AddItem
  id: AddItem
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: AddItem
  nameWithType: ObservableDictionary<TKey, TValue>.AddItem
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.AddItem
  type: Event
  source:
    id: AddItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 45
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event ObservableDictionary<TKey, TValue>.AddItemEventHandler AddItem
    return:
      type: netDxf.Collections.ObservableDictionary`2.AddItemEventHandler
    content.vb: Public Event AddItem As ObservableDictionary(Of TKey, TValue).AddItemEventHandler
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).AddItem
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).AddItem
- uid: netDxf.Collections.ObservableDictionary`2.BeforeRemoveItem
  commentId: E:netDxf.Collections.ObservableDictionary`2.BeforeRemoveItem
  id: BeforeRemoveItem
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: BeforeRemoveItem
  nameWithType: ObservableDictionary<TKey, TValue>.BeforeRemoveItem
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.BeforeRemoveItem
  type: Event
  source:
    id: BeforeRemoveItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 46
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event ObservableDictionary<TKey, TValue>.BeforeRemoveItemEventHandler BeforeRemoveItem
    return:
      type: netDxf.Collections.ObservableDictionary`2.BeforeRemoveItemEventHandler
    content.vb: Public Event BeforeRemoveItem As ObservableDictionary(Of TKey, TValue).BeforeRemoveItemEventHandler
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).BeforeRemoveItem
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).BeforeRemoveItem
- uid: netDxf.Collections.ObservableDictionary`2.RemoveItem
  commentId: E:netDxf.Collections.ObservableDictionary`2.RemoveItem
  id: RemoveItem
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: RemoveItem
  nameWithType: ObservableDictionary<TKey, TValue>.RemoveItem
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.RemoveItem
  type: Event
  source:
    id: RemoveItem
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 47
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public event ObservableDictionary<TKey, TValue>.RemoveItemEventHandler RemoveItem
    return:
      type: netDxf.Collections.ObservableDictionary`2.RemoveItemEventHandler
    content.vb: Public Event RemoveItem As ObservableDictionary(Of TKey, TValue).RemoveItemEventHandler
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).RemoveItem
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).RemoveItem
- uid: netDxf.Collections.ObservableDictionary`2.#ctor
  commentId: M:netDxf.Collections.ObservableDictionary`2.#ctor
  id: '#ctor'
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ObservableDictionary()
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary()
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ObservableDictionary()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 97
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public ObservableDictionary()
    content.vb: Public Sub New()
  overload: netDxf.Collections.ObservableDictionary`2.#ctor*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New()
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).New()
  name.vb: New()
- uid: netDxf.Collections.ObservableDictionary`2.#ctor(System.Int32)
  commentId: M:netDxf.Collections.ObservableDictionary`2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ObservableDictionary(int)
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary(int)
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ObservableDictionary(int)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 102
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public ObservableDictionary(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: netDxf.Collections.ObservableDictionary`2.#ctor*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New(Integer)
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).New(Integer)
  name.vb: New(Integer)
- uid: netDxf.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:netDxf.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ObservableDictionary(IEqualityComparer<TKey>)
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary(IEqualityComparer<TKey>)
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ObservableDictionary(System.Collections.Generic.IEqualityComparer<TKey>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 107
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public ObservableDictionary(IEqualityComparer<TKey> comparer)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    content.vb: Public Sub New(comparer As IEqualityComparer(Of TKey))
  overload: netDxf.Collections.ObservableDictionary`2.#ctor*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New(IEqualityComparer(Of TKey))
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).New(System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: New(IEqualityComparer(Of TKey))
- uid: netDxf.Collections.ObservableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:netDxf.Collections.ObservableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})'
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ObservableDictionary(int, IEqualityComparer<TKey>)
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary(int, IEqualityComparer<TKey>)
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ObservableDictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 112
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public ObservableDictionary(int capacity, IEqualityComparer<TKey> comparer)
    parameters:
    - id: capacity
      type: System.Int32
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    content.vb: Public Sub New(capacity As Integer, comparer As IEqualityComparer(Of TKey))
  overload: netDxf.Collections.ObservableDictionary`2.#ctor*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New(Integer, IEqualityComparer(Of TKey))
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).New(Integer, System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: New(Integer, IEqualityComparer(Of TKey))
- uid: netDxf.Collections.ObservableDictionary`2.Item(`0)
  commentId: P:netDxf.Collections.ObservableDictionary`2.Item(`0)
  id: Item(`0)
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: this[TKey]
  nameWithType: ObservableDictionary<TKey, TValue>.this[TKey]
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.this[TKey]
  type: Property
  source:
    id: this[]
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 121
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets or sets the element with the specified key.
  example: []
  syntax:
    content: public TValue this[TKey key] { get; set; }
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to get or set.
    return:
      type: '{TValue}'
      description: The element with the specified key.
    content.vb: Public Default Property this[](key As TKey) As TValue
  overload: netDxf.Collections.ObservableDictionary`2.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: The property is retrieved and <code class="paramref">key</code> is not found.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The property is set and the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
- uid: netDxf.Collections.ObservableDictionary`2.Keys
  commentId: P:netDxf.Collections.ObservableDictionary`2.Keys
  id: Keys
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: ObservableDictionary<TKey, TValue>.Keys
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Keys
  type: Property
  source:
    id: Keys
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 145
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets an <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> containing the keys of the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ICollection<TKey> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TKey}}
      description: An <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> containing the keys of the object that implements <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Keys As ICollection(Of TKey)
  overload: netDxf.Collections.ObservableDictionary`2.Keys*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Keys
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Keys
- uid: netDxf.Collections.ObservableDictionary`2.Values
  commentId: P:netDxf.Collections.ObservableDictionary`2.Values
  id: Values
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ObservableDictionary<TKey, TValue>.Values
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Values
  type: Property
  source:
    id: Values
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 150
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets an <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> containing the values in the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ICollection<TValue> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TValue}}
      description: An <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> containing the values in the object that implements <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Values As ICollection(Of TValue)
  overload: netDxf.Collections.ObservableDictionary`2.Values*
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Values
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Values
- uid: netDxf.Collections.ObservableDictionary`2.Count
  commentId: P:netDxf.Collections.ObservableDictionary`2.Count
  id: Count
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ObservableDictionary<TKey, TValue>.Count
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Count
  type: Property
  source:
    id: Count
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 155
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Count As Integer
  overload: netDxf.Collections.ObservableDictionary`2.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Count
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Count
- uid: netDxf.Collections.ObservableDictionary`2.IsReadOnly
  commentId: P:netDxf.Collections.ObservableDictionary`2.IsReadOnly
  id: IsReadOnly
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ObservableDictionary<TKey, TValue>.IsReadOnly
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 160
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: netDxf.Collections.ObservableDictionary`2.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).IsReadOnly
- uid: netDxf.Collections.ObservableDictionary`2.Add(`0,`1)
  commentId: M:netDxf.Collections.ObservableDictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Add(TKey, TValue)
  nameWithType: ObservableDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    id: Add
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 169
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds an element with the provided key and value to the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The object to use as the key of the element to add.
    - id: value
      type: '{TValue}'
      description: The object to use as the value of the element to add.
    content.vb: Public Sub Add(key As TKey, value As TValue)
  overload: netDxf.Collections.ObservableDictionary`2.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An element with the same key already exists in the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Add(TKey, TValue)
- uid: netDxf.Collections.ObservableDictionary`2.Remove(`0)
  commentId: M:netDxf.Collections.ObservableDictionary`2.Remove(`0)
  id: Remove(`0)
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Remove(TKey)
  nameWithType: ObservableDictionary<TKey, TValue>.Remove(TKey)
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 185
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the element with the specified key from the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Remove(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to remove.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the element is successfully removed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.  This method also returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if <code class="paramref">key</code> was not found in the original <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Remove(key As TKey) As Boolean
  overload: netDxf.Collections.ObservableDictionary`2.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Remove(TKey)
- uid: netDxf.Collections.ObservableDictionary`2.Clear
  commentId: M:netDxf.Collections.ObservableDictionary`2.Clear
  id: Clear
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ObservableDictionary<TKey, TValue>.Clear()
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Clear()
  type: Method
  source:
    id: Clear
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 214
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes all items from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: netDxf.Collections.ObservableDictionary`2.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Clear()
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Clear()
- uid: netDxf.Collections.ObservableDictionary`2.ContainsKey(`0)
  commentId: M:netDxf.Collections.ObservableDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: ObservableDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    id: ContainsKey
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 229
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Determines whether the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> contains an element with the specified key.
  example: []
  syntax:
    content: public bool ContainsKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to locate in the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> contains an element with the key; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
  overload: netDxf.Collections.ObservableDictionary`2.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: netDxf.Collections.ObservableDictionary`2.ContainsValue(`1)
  commentId: M:netDxf.Collections.ObservableDictionary`2.ContainsValue(`1)
  id: ContainsValue(`1)
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: ContainsValue(TValue)
  nameWithType: ObservableDictionary<TKey, TValue>.ContainsValue(TValue)
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ContainsValue(TValue)
  type: Method
  source:
    id: ContainsValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 234
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  syntax:
    content: public bool ContainsValue(TValue value)
    parameters:
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
    content.vb: Public Function ContainsValue(value As TValue) As Boolean
  overload: netDxf.Collections.ObservableDictionary`2.ContainsValue*
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).ContainsValue(TValue)
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).ContainsValue(TValue)
- uid: netDxf.Collections.ObservableDictionary`2.TryGetValue(`0,`1@)
  commentId: M:netDxf.Collections.ObservableDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: ObservableDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    id: TryGetValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 239
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the value associated with the specified key.
  example: []
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key whose value to get.
    - id: value
      type: '{TValue}'
      description: When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <code class="paramref">value</code> parameter. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the object that implements <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> contains an element with the specified key; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function TryGetValue(key As TKey, value As TValue) As Boolean
  overload: netDxf.Collections.ObservableDictionary`2.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
- uid: netDxf.Collections.ObservableDictionary`2.GetEnumerator
  commentId: M:netDxf.Collections.ObservableDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: netDxf.Collections.ObservableDictionary`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ObservableDictionary<TKey, TValue>.GetEnumerator()
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/ObservableDictionary.cs
    startLine: 249
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of TKey, TValue))
  overload: netDxf.Collections.ObservableDictionary`2.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).GetEnumerator()
references:
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<TKey, TValue>>
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: netDxf.Collections.ObservableDictionary`2.BeforeAddItemEventHandler
  commentId: T:netDxf.Collections.ObservableDictionary`2.BeforeAddItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableDictionary-2.html
  name: ObservableDictionary<TKey, TValue>.BeforeAddItemEventHandler
  nameWithType: ObservableDictionary<TKey, TValue>.BeforeAddItemEventHandler
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.BeforeAddItemEventHandler
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).BeforeAddItemEventHandler
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).BeforeAddItemEventHandler
  name.vb: ObservableDictionary(Of TKey, TValue).BeforeAddItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.ObservableDictionary`2
    name: ObservableDictionary
    href: netDxf.Collections.ObservableDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: netDxf.Collections.ObservableDictionary`2.BeforeAddItemEventHandler
    name: BeforeAddItemEventHandler
    href: netDxf.Collections.ObservableDictionary-2.BeforeAddItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.ObservableDictionary`2
    name: ObservableDictionary
    href: netDxf.Collections.ObservableDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: netDxf.Collections.ObservableDictionary`2.BeforeAddItemEventHandler
    name: BeforeAddItemEventHandler
    href: netDxf.Collections.ObservableDictionary-2.BeforeAddItemEventHandler.html
- uid: netDxf.Collections.ObservableDictionary`2.AddItemEventHandler
  commentId: T:netDxf.Collections.ObservableDictionary`2.AddItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableDictionary-2.html
  name: ObservableDictionary<TKey, TValue>.AddItemEventHandler
  nameWithType: ObservableDictionary<TKey, TValue>.AddItemEventHandler
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.AddItemEventHandler
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).AddItemEventHandler
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).AddItemEventHandler
  name.vb: ObservableDictionary(Of TKey, TValue).AddItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.ObservableDictionary`2
    name: ObservableDictionary
    href: netDxf.Collections.ObservableDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: netDxf.Collections.ObservableDictionary`2.AddItemEventHandler
    name: AddItemEventHandler
    href: netDxf.Collections.ObservableDictionary-2.AddItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.ObservableDictionary`2
    name: ObservableDictionary
    href: netDxf.Collections.ObservableDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: netDxf.Collections.ObservableDictionary`2.AddItemEventHandler
    name: AddItemEventHandler
    href: netDxf.Collections.ObservableDictionary-2.AddItemEventHandler.html
- uid: netDxf.Collections.ObservableDictionary`2.BeforeRemoveItemEventHandler
  commentId: T:netDxf.Collections.ObservableDictionary`2.BeforeRemoveItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableDictionary-2.html
  name: ObservableDictionary<TKey, TValue>.BeforeRemoveItemEventHandler
  nameWithType: ObservableDictionary<TKey, TValue>.BeforeRemoveItemEventHandler
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.BeforeRemoveItemEventHandler
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).BeforeRemoveItemEventHandler
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).BeforeRemoveItemEventHandler
  name.vb: ObservableDictionary(Of TKey, TValue).BeforeRemoveItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.ObservableDictionary`2
    name: ObservableDictionary
    href: netDxf.Collections.ObservableDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: netDxf.Collections.ObservableDictionary`2.BeforeRemoveItemEventHandler
    name: BeforeRemoveItemEventHandler
    href: netDxf.Collections.ObservableDictionary-2.BeforeRemoveItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.ObservableDictionary`2
    name: ObservableDictionary
    href: netDxf.Collections.ObservableDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: netDxf.Collections.ObservableDictionary`2.BeforeRemoveItemEventHandler
    name: BeforeRemoveItemEventHandler
    href: netDxf.Collections.ObservableDictionary-2.BeforeRemoveItemEventHandler.html
- uid: netDxf.Collections.ObservableDictionary`2.RemoveItemEventHandler
  commentId: T:netDxf.Collections.ObservableDictionary`2.RemoveItemEventHandler
  parent: netDxf.Collections
  href: netDxf.Collections.ObservableDictionary-2.html
  name: ObservableDictionary<TKey, TValue>.RemoveItemEventHandler
  nameWithType: ObservableDictionary<TKey, TValue>.RemoveItemEventHandler
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.RemoveItemEventHandler
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).RemoveItemEventHandler
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).RemoveItemEventHandler
  name.vb: ObservableDictionary(Of TKey, TValue).RemoveItemEventHandler
  spec.csharp:
  - uid: netDxf.Collections.ObservableDictionary`2
    name: ObservableDictionary
    href: netDxf.Collections.ObservableDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: netDxf.Collections.ObservableDictionary`2.RemoveItemEventHandler
    name: RemoveItemEventHandler
    href: netDxf.Collections.ObservableDictionary-2.RemoveItemEventHandler.html
  spec.vb:
  - uid: netDxf.Collections.ObservableDictionary`2
    name: ObservableDictionary
    href: netDxf.Collections.ObservableDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: netDxf.Collections.ObservableDictionary`2.RemoveItemEventHandler
    name: RemoveItemEventHandler
    href: netDxf.Collections.ObservableDictionary-2.RemoveItemEventHandler.html
- uid: netDxf.Collections.ObservableDictionary`2.#ctor*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.#ctor
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2__ctor
  name: ObservableDictionary
  nameWithType: ObservableDictionary<TKey, TValue>.ObservableDictionary
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ObservableDictionary
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).New
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  nameWithType.vb: IEqualityComparer(Of TKey)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  name.vb: IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: netDxf.Collections.ObservableDictionary`2.Item*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.Item
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_Item__0_
  name: this
  nameWithType: ObservableDictionary<TKey, TValue>.this
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.this
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).this[]
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  name: this[TKey]
  nameWithType: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  name: this[TKey]
  nameWithType: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: netDxf.Collections.ObservableDictionary`2.Keys*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.Keys
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_Keys
  name: Keys
  nameWithType: ObservableDictionary<TKey, TValue>.Keys
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Keys
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Keys
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Keys
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.keys
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.ICollection{{TKey}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TKey>
  nameWithType: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
  nameWithType.vb: ICollection(Of TKey)
  fullName.vb: System.Collections.Generic.ICollection(Of TKey)
  name.vb: ICollection(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.keys
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: netDxf.Collections.ObservableDictionary`2.Values*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.Values
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_Values
  name: Values
  nameWithType: ObservableDictionary<TKey, TValue>.Values
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Values
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Values
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Values
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.ICollection{{TValue}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  nameWithType.vb: ICollection(Of TValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: netDxf.Collections.ObservableDictionary`2.Count*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.Count
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_Count
  name: Count
  nameWithType: ObservableDictionary<TKey, TValue>.Count
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Count
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Count
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: netDxf.Collections.ObservableDictionary`2.IsReadOnly*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.IsReadOnly
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_IsReadOnly
  name: IsReadOnly
  nameWithType: ObservableDictionary<TKey, TValue>.IsReadOnly
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.IsReadOnly
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: netDxf.Collections.ObservableDictionary`2.Add*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.Add
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_Add__0__1_
  name: Add
  nameWithType: ObservableDictionary<TKey, TValue>.Add
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Add
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Add
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Add
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: netDxf.Collections.ObservableDictionary`2.Remove*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.Remove
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_Remove__0_
  name: Remove
  nameWithType: ObservableDictionary<TKey, TValue>.Remove
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Remove
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Remove
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Remove
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: netDxf.Collections.ObservableDictionary`2.Clear*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.Clear
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_Clear
  name: Clear
  nameWithType: ObservableDictionary<TKey, TValue>.Clear
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.Clear
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).Clear
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).Clear
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: netDxf.Collections.ObservableDictionary`2.ContainsKey*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.ContainsKey
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_ContainsKey__0_
  name: ContainsKey
  nameWithType: ObservableDictionary<TKey, TValue>.ContainsKey
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).ContainsKey
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).ContainsKey
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: netDxf.Collections.ObservableDictionary`2.ContainsValue*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.ContainsValue
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_ContainsValue__1_
  name: ContainsValue
  nameWithType: ObservableDictionary<TKey, TValue>.ContainsValue
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.ContainsValue
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).ContainsValue
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).ContainsValue
- uid: netDxf.Collections.ObservableDictionary`2.TryGetValue*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.TryGetValue
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: ObservableDictionary<TKey, TValue>.TryGetValue
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.TryGetValue
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).TryGetValue
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).TryGetValue
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: netDxf.Collections.ObservableDictionary`2.GetEnumerator*
  commentId: Overload:netDxf.Collections.ObservableDictionary`2.GetEnumerator
  href: netDxf.Collections.ObservableDictionary-2.html#netDxf_Collections_ObservableDictionary_2_GetEnumerator
  name: GetEnumerator
  nameWithType: ObservableDictionary<TKey, TValue>.GetEnumerator
  fullName: netDxf.Collections.ObservableDictionary<TKey, TValue>.GetEnumerator
  nameWithType.vb: ObservableDictionary(Of TKey, TValue).GetEnumerator
  fullName.vb: netDxf.Collections.ObservableDictionary(Of TKey, TValue).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
