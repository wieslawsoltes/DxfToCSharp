### YamlMime:ManagedReference
items:
- uid: netDxf.Collections.SupportFolders
  commentId: T:netDxf.Collections.SupportFolders
  id: SupportFolders
  parent: netDxf.Collections
  children:
  - netDxf.Collections.SupportFolders.#ctor
  - netDxf.Collections.SupportFolders.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - netDxf.Collections.SupportFolders.Add(System.String)
  - netDxf.Collections.SupportFolders.AddRange(System.Collections.Generic.IEnumerable{System.String})
  - netDxf.Collections.SupportFolders.Clear
  - netDxf.Collections.SupportFolders.Contains(System.String)
  - netDxf.Collections.SupportFolders.CopyTo(System.String[],System.Int32)
  - netDxf.Collections.SupportFolders.Count
  - netDxf.Collections.SupportFolders.FindFile(System.String)
  - netDxf.Collections.SupportFolders.GetEnumerator
  - netDxf.Collections.SupportFolders.IndexOf(System.String)
  - netDxf.Collections.SupportFolders.Insert(System.Int32,System.String)
  - netDxf.Collections.SupportFolders.IsReadOnly
  - netDxf.Collections.SupportFolders.Item(System.Int32)
  - netDxf.Collections.SupportFolders.Remove(System.String)
  - netDxf.Collections.SupportFolders.RemoveAt(System.Int32)
  - netDxf.Collections.SupportFolders.WorkingFolder
  langs:
  - csharp
  - vb
  name: SupportFolders
  nameWithType: SupportFolders
  fullName: netDxf.Collections.SupportFolders
  type: Class
  source:
    id: SupportFolders
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Represents a list of support folders for the document.
  example: []
  syntax:
    content: 'public class SupportFolders : IList<string>, ICollection<string>, IEnumerable<string>, IEnumerable'
    content.vb: Public Class SupportFolders Implements IList(Of String), ICollection(Of String), IEnumerable(Of String), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{System.String}
  - System.Collections.Generic.ICollection{System.String}
  - System.Collections.Generic.IEnumerable{System.String}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Collections.SupportFolders.#ctor
  commentId: M:netDxf.Collections.SupportFolders.#ctor
  id: '#ctor'
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: SupportFolders()
  nameWithType: SupportFolders.SupportFolders()
  fullName: netDxf.Collections.SupportFolders.SupportFolders()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 50
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>SupportFolders</code> class.
  example: []
  syntax:
    content: public SupportFolders()
    content.vb: Public Sub New()
  overload: netDxf.Collections.SupportFolders.#ctor*
  nameWithType.vb: SupportFolders.New()
  fullName.vb: netDxf.Collections.SupportFolders.New()
  name.vb: New()
- uid: netDxf.Collections.SupportFolders.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.Collections.SupportFolders.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: SupportFolders(IEnumerable<string>)
  nameWithType: SupportFolders.SupportFolders(IEnumerable<string>)
  fullName: netDxf.Collections.SupportFolders.SupportFolders(System.Collections.Generic.IEnumerable<string>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 60
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of <code>SupportFolders</code> class.
  example: []
  syntax:
    content: public SupportFolders(IEnumerable<string> folders)
    parameters:
    - id: folders
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The collection whose elements should be added to the list. The items in the collection cannot be null.
    content.vb: Public Sub New(folders As IEnumerable(Of String))
  overload: netDxf.Collections.SupportFolders.#ctor*
  nameWithType.vb: SupportFolders.New(IEnumerable(Of String))
  fullName.vb: netDxf.Collections.SupportFolders.New(System.Collections.Generic.IEnumerable(Of String))
  name.vb: New(IEnumerable(Of String))
- uid: netDxf.Collections.SupportFolders.WorkingFolder
  commentId: P:netDxf.Collections.SupportFolders.WorkingFolder
  id: WorkingFolder
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: WorkingFolder
  nameWithType: SupportFolders.WorkingFolder
  fullName: netDxf.Collections.SupportFolders.WorkingFolder
  type: Property
  source:
    id: WorkingFolder
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 78
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets or sets the base folder to resolver relative paths of external references.
  remarks: By default it points to the current System.Environment.CurrentDirectory when the DxfDocument was created.
  example: []
  syntax:
    content: public string WorkingFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WorkingFolder As String
  overload: netDxf.Collections.SupportFolders.WorkingFolder*
- uid: netDxf.Collections.SupportFolders.FindFile(System.String)
  commentId: M:netDxf.Collections.SupportFolders.FindFile(System.String)
  id: FindFile(System.String)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: FindFile(string)
  nameWithType: SupportFolders.FindFile(string)
  fullName: netDxf.Collections.SupportFolders.FindFile(string)
  type: Method
  source:
    id: FindFile
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 94
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Looks for a file in one of the support folders.
  remarks: If the specified file already exists it return the same value, if neither it cannot be found in any of the support folders it will return an empty string.
  example: []
  syntax:
    content: public string FindFile(string file)
    parameters:
    - id: file
      type: System.String
      description: File name to find in one of the support folders.
    return:
      type: System.String
      description: The path to the file found in one of the support folders. It includes both the path and the specified file name.
    content.vb: Public Function FindFile(file As String) As String
  overload: netDxf.Collections.SupportFolders.FindFile*
  nameWithType.vb: SupportFolders.FindFile(String)
  fullName.vb: netDxf.Collections.SupportFolders.FindFile(String)
  name.vb: FindFile(String)
- uid: netDxf.Collections.SupportFolders.Item(System.Int32)
  commentId: P:netDxf.Collections.SupportFolders.Item(System.Int32)
  id: Item(System.Int32)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: SupportFolders.this[int]
  fullName: netDxf.Collections.SupportFolders.this[int]
  type: Property
  source:
    id: this[]
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 132
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets or sets the element at the specified index.
  example: []
  syntax:
    content: public string this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.String
      description: The element at the specified index.
    content.vb: Public Default Property this[](index As Integer) As String
  overload: netDxf.Collections.SupportFolders.Item*
  implements:
  - System.Collections.Generic.IList{System.String}.Item(System.Int32)
  nameWithType.vb: SupportFolders.this[](Integer)
  fullName.vb: netDxf.Collections.SupportFolders.this[](Integer)
  name.vb: this[](Integer)
- uid: netDxf.Collections.SupportFolders.Count
  commentId: P:netDxf.Collections.SupportFolders.Count
  id: Count
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SupportFolders.Count
  fullName: netDxf.Collections.SupportFolders.Count
  type: Property
  source:
    id: Count
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 149
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the number of elements contained in the list.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the list.
    content.vb: Public ReadOnly Property Count As Integer
  overload: netDxf.Collections.SupportFolders.Count*
  implements:
  - System.Collections.Generic.ICollection{System.String}.Count
- uid: netDxf.Collections.SupportFolders.IsReadOnly
  commentId: P:netDxf.Collections.SupportFolders.IsReadOnly
  id: IsReadOnly
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: SupportFolders.IsReadOnly
  fullName: netDxf.Collections.SupportFolders.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 158
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Returns if the list is read only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: Return always true.
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: netDxf.Collections.SupportFolders.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.String}.IsReadOnly
- uid: netDxf.Collections.SupportFolders.GetEnumerator
  commentId: M:netDxf.Collections.SupportFolders.GetEnumerator
  id: GetEnumerator
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SupportFolders.GetEnumerator()
  fullName: netDxf.Collections.SupportFolders.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 167
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Returns an enumerator that iterates through the list.
  example: []
  syntax:
    content: public IEnumerator<string> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.String}
      description: The enumerator for the list.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of String)
  overload: netDxf.Collections.SupportFolders.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
- uid: netDxf.Collections.SupportFolders.Add(System.String)
  commentId: M:netDxf.Collections.SupportFolders.Add(System.String)
  id: Add(System.String)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: Add(string)
  nameWithType: SupportFolders.Add(string)
  fullName: netDxf.Collections.SupportFolders.Add(string)
  type: Method
  source:
    id: Add
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 185
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds an item to the list.
  example: []
  syntax:
    content: public void Add(string item)
    parameters:
    - id: item
      type: System.String
      description: Folder path to add to the list. The item cannot be null.
    content.vb: Public Sub Add(item As String)
  overload: netDxf.Collections.SupportFolders.Add*
  implements:
  - System.Collections.Generic.ICollection{System.String}.Add(System.String)
  nameWithType.vb: SupportFolders.Add(String)
  fullName.vb: netDxf.Collections.SupportFolders.Add(String)
  name.vb: Add(String)
- uid: netDxf.Collections.SupportFolders.AddRange(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:netDxf.Collections.SupportFolders.AddRange(System.Collections.Generic.IEnumerable{System.String})
  id: AddRange(System.Collections.Generic.IEnumerable{System.String})
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<string>)
  nameWithType: SupportFolders.AddRange(IEnumerable<string>)
  fullName: netDxf.Collections.SupportFolders.AddRange(System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    id: AddRange
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 198
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds the elements of the collection to the list.
  example: []
  syntax:
    content: public void AddRange(IEnumerable<string> collection)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The collection whose elements should be added to the end of the list. The items in the collection cannot be null.
    content.vb: Public Sub AddRange(collection As IEnumerable(Of String))
  overload: netDxf.Collections.SupportFolders.AddRange*
  nameWithType.vb: SupportFolders.AddRange(IEnumerable(Of String))
  fullName.vb: netDxf.Collections.SupportFolders.AddRange(System.Collections.Generic.IEnumerable(Of String))
  name.vb: AddRange(IEnumerable(Of String))
- uid: netDxf.Collections.SupportFolders.Clear
  commentId: M:netDxf.Collections.SupportFolders.Clear
  id: Clear
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SupportFolders.Clear()
  fullName: netDxf.Collections.SupportFolders.Clear()
  type: Method
  source:
    id: Clear
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 213
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes all elements from the list.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: netDxf.Collections.SupportFolders.Clear*
  implements:
  - System.Collections.Generic.ICollection{System.String}.Clear
- uid: netDxf.Collections.SupportFolders.Contains(System.String)
  commentId: M:netDxf.Collections.SupportFolders.Contains(System.String)
  id: Contains(System.String)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: Contains(string)
  nameWithType: SupportFolders.Contains(string)
  fullName: netDxf.Collections.SupportFolders.Contains(string)
  type: Method
  source:
    id: Contains
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 223
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Determines whether an element is in the list.
  example: []
  syntax:
    content: public bool Contains(string item)
    parameters:
    - id: item
      type: System.String
      description: The object to locate in the list. The value cannot be null.
    return:
      type: System.Boolean
      description: True if the item is found in the list; otherwise, false.
    content.vb: Public Function Contains(item As String) As Boolean
  overload: netDxf.Collections.SupportFolders.Contains*
  implements:
  - System.Collections.Generic.ICollection{System.String}.Contains(System.String)
  nameWithType.vb: SupportFolders.Contains(String)
  fullName.vb: netDxf.Collections.SupportFolders.Contains(String)
  name.vb: Contains(String)
- uid: netDxf.Collections.SupportFolders.CopyTo(System.String[],System.Int32)
  commentId: M:netDxf.Collections.SupportFolders.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: CopyTo(string[], int)
  nameWithType: SupportFolders.CopyTo(string[], int)
  fullName: netDxf.Collections.SupportFolders.CopyTo(string[], int)
  type: Method
  source:
    id: CopyTo
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 237
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Copies the entire list to a compatible one-dimensional array, starting at the specified index of the target array.
  example: []
  syntax:
    content: public void CopyTo(string[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.String[]
      description: The one-dimensional array that is the destination of the elements copied from list. The array must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in the array at which copying begins.
    content.vb: Public Sub CopyTo(array As String(), arrayIndex As Integer)
  overload: netDxf.Collections.SupportFolders.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.String}.CopyTo(System.String[],System.Int32)
  nameWithType.vb: SupportFolders.CopyTo(String(), Integer)
  fullName.vb: netDxf.Collections.SupportFolders.CopyTo(String(), Integer)
  name.vb: CopyTo(String(), Integer)
- uid: netDxf.Collections.SupportFolders.Remove(System.String)
  commentId: M:netDxf.Collections.SupportFolders.Remove(System.String)
  id: Remove(System.String)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: SupportFolders.Remove(string)
  fullName: netDxf.Collections.SupportFolders.Remove(string)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 247
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the first occurrence of a specific object from the list.
  example: []
  syntax:
    content: public bool Remove(string item)
    parameters:
    - id: item
      type: System.String
      description: The object to remove from the list. The value cannot be null.
    return:
      type: System.Boolean
      description: True if the item is successfully removed; otherwise, false. This method also returns false the item was not found in the list.
    content.vb: Public Function Remove(item As String) As Boolean
  overload: netDxf.Collections.SupportFolders.Remove*
  implements:
  - System.Collections.Generic.ICollection{System.String}.Remove(System.String)
  nameWithType.vb: SupportFolders.Remove(String)
  fullName.vb: netDxf.Collections.SupportFolders.Remove(String)
  name.vb: Remove(String)
- uid: netDxf.Collections.SupportFolders.IndexOf(System.String)
  commentId: M:netDxf.Collections.SupportFolders.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: IndexOf(string)
  nameWithType: SupportFolders.IndexOf(string)
  fullName: netDxf.Collections.SupportFolders.IndexOf(string)
  type: Method
  source:
    id: IndexOf
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 261
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Determines the index of a specific item in the list.
  example: []
  syntax:
    content: public int IndexOf(string item)
    parameters:
    - id: item
      type: System.String
      description: The object to locate in the list.
    return:
      type: System.Int32
      description: The index of <code class="paramref">item</code> if found in the list; otherwise, -1.
    content.vb: Public Function IndexOf(item As String) As Integer
  overload: netDxf.Collections.SupportFolders.IndexOf*
  implements:
  - System.Collections.Generic.IList{System.String}.IndexOf(System.String)
  nameWithType.vb: SupportFolders.IndexOf(String)
  fullName.vb: netDxf.Collections.SupportFolders.IndexOf(String)
  name.vb: IndexOf(String)
- uid: netDxf.Collections.SupportFolders.Insert(System.Int32,System.String)
  commentId: M:netDxf.Collections.SupportFolders.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: Insert(int, string)
  nameWithType: SupportFolders.Insert(int, string)
  fullName: netDxf.Collections.SupportFolders.Insert(int, string)
  type: Method
  source:
    id: Insert
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 271
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Inserts an item to the list at the specified index.
  example: []
  syntax:
    content: public void Insert(int index, string item)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which the item should be inserted.
    - id: item
      type: System.String
      description: The object to insert into the list.
    content.vb: Public Sub Insert(index As Integer, item As String)
  overload: netDxf.Collections.SupportFolders.Insert*
  implements:
  - System.Collections.Generic.IList{System.String}.Insert(System.Int32,System.String)
  nameWithType.vb: SupportFolders.Insert(Integer, String)
  fullName.vb: netDxf.Collections.SupportFolders.Insert(Integer, String)
  name.vb: Insert(Integer, String)
- uid: netDxf.Collections.SupportFolders.RemoveAt(System.Int32)
  commentId: M:netDxf.Collections.SupportFolders.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: netDxf.Collections.SupportFolders
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: SupportFolders.RemoveAt(int)
  fullName: netDxf.Collections.SupportFolders.RemoveAt(int)
  type: Method
  source:
    id: RemoveAt
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/SupportFolders.cs
    startLine: 284
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes the item at the specified index from the list.
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: netDxf.Collections.SupportFolders.RemoveAt*
  implements:
  - System.Collections.Generic.IList{System.String}.RemoveAt(System.Int32)
  nameWithType.vb: SupportFolders.RemoveAt(Integer)
  fullName.vb: netDxf.Collections.SupportFolders.RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
references:
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<string>
  nameWithType: IList<string>
  fullName: System.Collections.Generic.IList<string>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: netDxf.Collections.SupportFolders.#ctor*
  commentId: Overload:netDxf.Collections.SupportFolders.#ctor
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders__ctor
  name: SupportFolders
  nameWithType: SupportFolders.SupportFolders
  fullName: netDxf.Collections.SupportFolders.SupportFolders
  nameWithType.vb: SupportFolders.New
  fullName.vb: netDxf.Collections.SupportFolders.New
  name.vb: New
- uid: netDxf.Collections.SupportFolders.WorkingFolder*
  commentId: Overload:netDxf.Collections.SupportFolders.WorkingFolder
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_WorkingFolder
  name: WorkingFolder
  nameWithType: SupportFolders.WorkingFolder
  fullName: netDxf.Collections.SupportFolders.WorkingFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Collections.SupportFolders.FindFile*
  commentId: Overload:netDxf.Collections.SupportFolders.FindFile
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_FindFile_System_String_
  name: FindFile
  nameWithType: SupportFolders.FindFile
  fullName: netDxf.Collections.SupportFolders.FindFile
- uid: netDxf.Collections.SupportFolders.Item*
  commentId: Overload:netDxf.Collections.SupportFolders.Item
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_Item_System_Int32_
  name: this
  nameWithType: SupportFolders.this
  fullName: netDxf.Collections.SupportFolders.this
  nameWithType.vb: SupportFolders.this[]
  fullName.vb: netDxf.Collections.SupportFolders.this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{System.String}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{System.String}.Item(System.Int32)
  parent: System.Collections.Generic.IList{System.String}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<string>.this[int]
  fullName: System.Collections.Generic.IList<string>.this[int]
  nameWithType.vb: IList(Of String).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of String).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{System.String}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.SupportFolders.Count*
  commentId: Overload:netDxf.Collections.SupportFolders.Count
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_Count
  name: Count
  nameWithType: SupportFolders.Count
  fullName: netDxf.Collections.SupportFolders.Count
- uid: System.Collections.Generic.ICollection{System.String}.Count
  commentId: P:System.Collections.Generic.ICollection{System.String}.Count
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<string>.Count
  fullName: System.Collections.Generic.ICollection<string>.Count
  nameWithType.vb: ICollection(Of String).Count
  fullName.vb: System.Collections.Generic.ICollection(Of String).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: netDxf.Collections.SupportFolders.IsReadOnly*
  commentId: Overload:netDxf.Collections.SupportFolders.IsReadOnly
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_IsReadOnly
  name: IsReadOnly
  nameWithType: SupportFolders.IsReadOnly
  fullName: netDxf.Collections.SupportFolders.IsReadOnly
- uid: System.Collections.Generic.ICollection{System.String}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.String}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<string>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<string>.IsReadOnly
  nameWithType.vb: ICollection(Of String).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of String).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: netDxf.Collections.SupportFolders.GetEnumerator*
  commentId: Overload:netDxf.Collections.SupportFolders.GetEnumerator
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_GetEnumerator
  name: GetEnumerator
  nameWithType: SupportFolders.GetEnumerator
  fullName: netDxf.Collections.SupportFolders.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.String}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<string>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<string>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of String).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of String).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.String}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.String}
  commentId: T:System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<string>
  nameWithType: IEnumerator<string>
  fullName: System.Collections.Generic.IEnumerator<string>
  nameWithType.vb: IEnumerator(Of String)
  fullName.vb: System.Collections.Generic.IEnumerator(Of String)
  name.vb: IEnumerator(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Collections.SupportFolders.Add*
  commentId: Overload:netDxf.Collections.SupportFolders.Add
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_Add_System_String_
  name: Add
  nameWithType: SupportFolders.Add
  fullName: netDxf.Collections.SupportFolders.Add
- uid: System.Collections.Generic.ICollection{System.String}.Add(System.String)
  commentId: M:System.Collections.Generic.ICollection{System.String}.Add(System.String)
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(string)
  nameWithType: ICollection<string>.Add(string)
  fullName: System.Collections.Generic.ICollection<string>.Add(string)
  nameWithType.vb: ICollection(Of String).Add(String)
  fullName.vb: System.Collections.Generic.ICollection(Of String).Add(String)
  name.vb: Add(String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.String}.Add(System.String)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.String}.Add(System.String)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.SupportFolders.AddRange*
  commentId: Overload:netDxf.Collections.SupportFolders.AddRange
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_AddRange_System_Collections_Generic_IEnumerable_System_String__
  name: AddRange
  nameWithType: SupportFolders.AddRange
  fullName: netDxf.Collections.SupportFolders.AddRange
- uid: netDxf.Collections.SupportFolders.Clear*
  commentId: Overload:netDxf.Collections.SupportFolders.Clear
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_Clear
  name: Clear
  nameWithType: SupportFolders.Clear
  fullName: netDxf.Collections.SupportFolders.Clear
- uid: System.Collections.Generic.ICollection{System.String}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.String}.Clear
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<string>.Clear()
  fullName: System.Collections.Generic.ICollection<string>.Clear()
  nameWithType.vb: ICollection(Of String).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of String).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.String}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.String}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: netDxf.Collections.SupportFolders.Contains*
  commentId: Overload:netDxf.Collections.SupportFolders.Contains
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_Contains_System_String_
  name: Contains
  nameWithType: SupportFolders.Contains
  fullName: netDxf.Collections.SupportFolders.Contains
- uid: System.Collections.Generic.ICollection{System.String}.Contains(System.String)
  commentId: M:System.Collections.Generic.ICollection{System.String}.Contains(System.String)
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(string)
  nameWithType: ICollection<string>.Contains(string)
  fullName: System.Collections.Generic.ICollection<string>.Contains(string)
  nameWithType.vb: ICollection(Of String).Contains(String)
  fullName.vb: System.Collections.Generic.ICollection(Of String).Contains(String)
  name.vb: Contains(String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.String}.Contains(System.String)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.String}.Contains(System.String)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.SupportFolders.CopyTo*
  commentId: Overload:netDxf.Collections.SupportFolders.CopyTo
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_CopyTo_System_String___System_Int32_
  name: CopyTo
  nameWithType: SupportFolders.CopyTo
  fullName: netDxf.Collections.SupportFolders.CopyTo
- uid: System.Collections.Generic.ICollection{System.String}.CopyTo(System.String[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.String}.CopyTo(System.String[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(string[], int)
  nameWithType: ICollection<string>.CopyTo(string[], int)
  fullName: System.Collections.Generic.ICollection<string>.CopyTo(string[], int)
  nameWithType.vb: ICollection(Of String).CopyTo(String(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of String).CopyTo(String(), Integer)
  name.vb: CopyTo(String(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.String}.CopyTo(System.String[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.String}.CopyTo(System.String[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: netDxf.Collections.SupportFolders.Remove*
  commentId: Overload:netDxf.Collections.SupportFolders.Remove
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_Remove_System_String_
  name: Remove
  nameWithType: SupportFolders.Remove
  fullName: netDxf.Collections.SupportFolders.Remove
- uid: System.Collections.Generic.ICollection{System.String}.Remove(System.String)
  commentId: M:System.Collections.Generic.ICollection{System.String}.Remove(System.String)
  parent: System.Collections.Generic.ICollection{System.String}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(string)
  nameWithType: ICollection<string>.Remove(string)
  fullName: System.Collections.Generic.ICollection<string>.Remove(string)
  nameWithType.vb: ICollection(Of String).Remove(String)
  fullName.vb: System.Collections.Generic.ICollection(Of String).Remove(String)
  name.vb: Remove(String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.String}.Remove(System.String)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.String}.Remove(System.String)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.SupportFolders.IndexOf*
  commentId: Overload:netDxf.Collections.SupportFolders.IndexOf
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_IndexOf_System_String_
  name: IndexOf
  nameWithType: SupportFolders.IndexOf
  fullName: netDxf.Collections.SupportFolders.IndexOf
- uid: System.Collections.Generic.IList{System.String}.IndexOf(System.String)
  commentId: M:System.Collections.Generic.IList{System.String}.IndexOf(System.String)
  parent: System.Collections.Generic.IList{System.String}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(string)
  nameWithType: IList<string>.IndexOf(string)
  fullName: System.Collections.Generic.IList<string>.IndexOf(string)
  nameWithType.vb: IList(Of String).IndexOf(String)
  fullName.vb: System.Collections.Generic.IList(Of String).IndexOf(String)
  name.vb: IndexOf(String)
  spec.csharp:
  - uid: System.Collections.Generic.IList{System.String}.IndexOf(System.String)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{System.String}.IndexOf(System.String)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: netDxf.Collections.SupportFolders.Insert*
  commentId: Overload:netDxf.Collections.SupportFolders.Insert
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_Insert_System_Int32_System_String_
  name: Insert
  nameWithType: SupportFolders.Insert
  fullName: netDxf.Collections.SupportFolders.Insert
- uid: System.Collections.Generic.IList{System.String}.Insert(System.Int32,System.String)
  commentId: M:System.Collections.Generic.IList{System.String}.Insert(System.Int32,System.String)
  parent: System.Collections.Generic.IList{System.String}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, string)
  nameWithType: IList<string>.Insert(int, string)
  fullName: System.Collections.Generic.IList<string>.Insert(int, string)
  nameWithType.vb: IList(Of String).Insert(Integer, String)
  fullName.vb: System.Collections.Generic.IList(Of String).Insert(Integer, String)
  name.vb: Insert(Integer, String)
  spec.csharp:
  - uid: System.Collections.Generic.IList{System.String}.Insert(System.Int32,System.String)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{System.String}.Insert(System.Int32,System.String)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Collections.SupportFolders.RemoveAt*
  commentId: Overload:netDxf.Collections.SupportFolders.RemoveAt
  href: netDxf.Collections.SupportFolders.html#netDxf_Collections_SupportFolders_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: SupportFolders.RemoveAt
  fullName: netDxf.Collections.SupportFolders.RemoveAt
- uid: System.Collections.Generic.IList{System.String}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{System.String}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{System.String}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<string>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<string>.RemoveAt(int)
  nameWithType.vb: IList(Of String).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of String).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{System.String}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{System.String}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
