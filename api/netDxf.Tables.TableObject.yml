### YamlMime:ManagedReference
items:
- uid: netDxf.Tables.TableObject
  commentId: T:netDxf.Tables.TableObject
  id: TableObject
  parent: netDxf.Tables
  children:
  - netDxf.Tables.TableObject.#ctor(System.String,System.String,System.Boolean)
  - netDxf.Tables.TableObject.Clone
  - netDxf.Tables.TableObject.Clone(System.String)
  - netDxf.Tables.TableObject.CompareTo(System.Object)
  - netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  - netDxf.Tables.TableObject.Equals(System.Object)
  - netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  - netDxf.Tables.TableObject.GetHashCode
  - netDxf.Tables.TableObject.GetReferences
  - netDxf.Tables.TableObject.HasReferences
  - netDxf.Tables.TableObject.InvalidCharacters
  - netDxf.Tables.TableObject.IsReserved
  - netDxf.Tables.TableObject.IsValidName(System.String)
  - netDxf.Tables.TableObject.Name
  - netDxf.Tables.TableObject.NameChanged
  - netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  - netDxf.Tables.TableObject.ToString
  langs:
  - csharp
  - vb
  name: TableObject
  nameWithType: TableObject
  fullName: netDxf.Tables.TableObject
  type: Class
  source:
    id: TableObject
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 34
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Defines classes that can be accessed by name. They are usually part of the DXF TABLE section but can also be part of the OBJECTS section.
  example: []
  syntax:
    content: 'public abstract class TableObject : DxfObject, ICloneable, IComparable, IComparable<TableObject>, IEquatable<TableObject>'
    content.vb: Public MustInherit Class TableObject Inherits DxfObject Implements ICloneable, IComparable, IComparable(Of TableObject), IEquatable(Of TableObject)
  inheritance:
  - System.Object
  - netDxf.DxfObject
  derivedClasses:
  - netDxf.Blocks.Block
  - netDxf.Objects.Group
  - netDxf.Objects.ImageDefinition
  - netDxf.Objects.LayerState
  - netDxf.Objects.Layout
  - netDxf.Objects.MLineStyle
  - netDxf.Objects.UnderlayDefinition
  - netDxf.Tables.ApplicationRegistry
  - netDxf.Tables.DimensionStyle
  - netDxf.Tables.Layer
  - netDxf.Tables.Linetype
  - netDxf.Tables.ShapeStyle
  - netDxf.Tables.TextStyle
  - netDxf.Tables.UCS
  - netDxf.Tables.VPort
  - netDxf.Tables.View
  implements:
  - System.ICloneable
  - System.IComparable
  - System.IComparable{netDxf.Tables.TableObject}
  - System.IEquatable{netDxf.Tables.TableObject}
  inheritedMembers:
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.Owner
  - netDxf.DxfObject.XData
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Tables.TableObject.NameChanged
  commentId: E:netDxf.Tables.TableObject.NameChanged
  id: NameChanged
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: NameChanged
  nameWithType: TableObject.NameChanged
  fullName: netDxf.Tables.TableObject.NameChanged
  type: Event
  source:
    id: NameChanged
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 44
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  syntax:
    content: public event TableObject.NameChangedEventHandler NameChanged
    return:
      type: netDxf.Tables.TableObject.NameChangedEventHandler
    content.vb: Public Event NameChanged As TableObject.NameChangedEventHandler
- uid: netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  commentId: M:netDxf.Tables.TableObject.OnNameChangedEvent(System.String,System.String)
  id: OnNameChangedEvent(System.String,System.String)
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: OnNameChangedEvent(string, string)
  nameWithType: TableObject.OnNameChangedEvent(string, string)
  fullName: netDxf.Tables.TableObject.OnNameChangedEvent(string, string)
  type: Method
  source:
    id: OnNameChangedEvent
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 45
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  syntax:
    content: protected virtual void OnNameChangedEvent(string oldName, string newName)
    parameters:
    - id: oldName
      type: System.String
    - id: newName
      type: System.String
    content.vb: Protected Overridable Sub OnNameChangedEvent(oldName As String, newName As String)
  overload: netDxf.Tables.TableObject.OnNameChangedEvent*
  nameWithType.vb: TableObject.OnNameChangedEvent(String, String)
  fullName.vb: netDxf.Tables.TableObject.OnNameChangedEvent(String, String)
  name.vb: OnNameChangedEvent(String, String)
- uid: netDxf.Tables.TableObject.#ctor(System.String,System.String,System.Boolean)
  commentId: M:netDxf.Tables.TableObject.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: TableObject(string, string, bool)
  nameWithType: TableObject.TableObject(string, string, bool)
  fullName: netDxf.Tables.TableObject.TableObject(string, string, bool)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 73
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Initializes a new instance of the <code>TableObject</code> class.
  example: []
  syntax:
    content: protected TableObject(string name, string codeName, bool checkName)
    parameters:
    - id: name
      type: System.String
      description: Table name. The following characters \&lt;&gt;/?":;*|,=` are not supported for table object names.
    - id: codeName
      type: System.String
      description: Table <xref href="netDxf.DxfObjectCode?text=code+name" data-throw-if-not-resolved="false"></xref>.
    - id: checkName
      type: System.Boolean
      description: Defines if the table object name needs to be checked for invalid characters.
    content.vb: Protected Sub New(name As String, codeName As String, checkName As Boolean)
  overload: netDxf.Tables.TableObject.#ctor*
  nameWithType.vb: TableObject.New(String, String, Boolean)
  fullName.vb: netDxf.Tables.TableObject.New(String, String, Boolean)
  name.vb: New(String, String, Boolean)
- uid: netDxf.Tables.TableObject.Name
  commentId: P:netDxf.Tables.TableObject.Name
  id: Name
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TableObject.Name
  fullName: netDxf.Tables.TableObject.Name
  type: Property
  source:
    id: Name
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 97
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets the name of the table object.
  remarks: Table object names are case insensitive.
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: netDxf.Tables.TableObject.Name*
- uid: netDxf.Tables.TableObject.IsReserved
  commentId: P:netDxf.Tables.TableObject.IsReserved
  id: IsReserved
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: IsReserved
  nameWithType: TableObject.IsReserved
  fullName: netDxf.Tables.TableObject.IsReserved
  type: Property
  source:
    id: IsReserved
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 106
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets if the table object is reserved and cannot be deleted.
  example: []
  syntax:
    content: public bool IsReserved { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsReserved As Boolean
  overload: netDxf.Tables.TableObject.IsReserved*
- uid: netDxf.Tables.TableObject.InvalidCharacters
  commentId: P:netDxf.Tables.TableObject.InvalidCharacters
  id: InvalidCharacters
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: InvalidCharacters
  nameWithType: TableObject.InvalidCharacters
  fullName: netDxf.Tables.TableObject.InvalidCharacters
  type: Property
  source:
    id: InvalidCharacters
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 115
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets the array of characters not supported as table object names.
  example: []
  syntax:
    content: public static char[] InvalidCharacters { get; }
    parameters: []
    return:
      type: System.Char[]
    content.vb: Public Shared ReadOnly Property InvalidCharacters As Char()
  overload: netDxf.Tables.TableObject.InvalidCharacters*
- uid: netDxf.Tables.TableObject.IsValidName(System.String)
  commentId: M:netDxf.Tables.TableObject.IsValidName(System.String)
  id: IsValidName(System.String)
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: IsValidName(string)
  nameWithType: TableObject.IsValidName(string)
  fullName: netDxf.Tables.TableObject.IsValidName(string)
  type: Method
  source:
    id: IsValidName
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 129
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Checks if a string is valid as a table object name.
  example: []
  syntax:
    content: public static bool IsValidName(string name)
    parameters:
    - id: name
      type: System.String
      description: String to check.
    return:
      type: System.Boolean
      description: True if the string is valid as a table object name, or false otherwise.
    content.vb: Public Shared Function IsValidName(name As String) As Boolean
  overload: netDxf.Tables.TableObject.IsValidName*
  nameWithType.vb: TableObject.IsValidName(String)
  fullName.vb: netDxf.Tables.TableObject.IsValidName(String)
  name.vb: IsValidName(String)
- uid: netDxf.Tables.TableObject.HasReferences
  commentId: M:netDxf.Tables.TableObject.HasReferences
  id: HasReferences
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: HasReferences()
  nameWithType: TableObject.HasReferences()
  fullName: netDxf.Tables.TableObject.HasReferences()
  type: Method
  source:
    id: HasReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 149
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Checks if this instance has been referenced by other DxfObjects.
  remarks: This method returns the same value as the HasReferences method that can be found in the TableObjects class.
  example: []
  syntax:
    content: public abstract bool HasReferences()
    return:
      type: System.Boolean
      description: >-
        Returns true if this instance has been referenced by other DxfObjects, false otherwise.

        It will always return false if this instance does not belong to a document.
    content.vb: Public MustOverride Function HasReferences() As Boolean
  overload: netDxf.Tables.TableObject.HasReferences*
- uid: netDxf.Tables.TableObject.GetReferences
  commentId: M:netDxf.Tables.TableObject.GetReferences
  id: GetReferences
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: GetReferences()
  nameWithType: TableObject.GetReferences()
  fullName: netDxf.Tables.TableObject.GetReferences()
  type: Method
  source:
    id: GetReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 161
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Gets the list of DxfObjects referenced by this instance.
  remarks: This method returns the same list as the GetReferences method that can be found in the TableObjects class.
  example: []
  syntax:
    content: public abstract List<DxfObjectReference> GetReferences()
    return:
      type: System.Collections.Generic.List{netDxf.DxfObjectReference}
      description: >-
        A list of DxfObjectReference that contains the DxfObject referenced by this instance and the number of times it does.

        It will return null if this instance does not belong to a document.
    content.vb: Public MustOverride Function GetReferences() As List(Of DxfObjectReference)
  overload: netDxf.Tables.TableObject.GetReferences*
- uid: netDxf.Tables.TableObject.ToString
  commentId: M:netDxf.Tables.TableObject.ToString
  id: ToString
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TableObject.ToString()
  fullName: netDxf.Tables.TableObject.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 205
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Converts the value of this instance to its equivalent string representation.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Overrides Function ToString() As String
  overridden: netDxf.DxfObject.ToString
  overload: netDxf.Tables.TableObject.ToString*
- uid: netDxf.Tables.TableObject.CompareTo(System.Object)
  commentId: M:netDxf.Tables.TableObject.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: CompareTo(object)
  nameWithType: TableObject.CompareTo(object)
  fullName: netDxf.Tables.TableObject.CompareTo(object)
  type: Method
  source:
    id: CompareTo
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 224
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Compares the current TableObject with another TableObject of the same type.
  remarks: If both table objects are no of the same type it will return zero. The comparison is made by their names.
  example: []
  syntax:
    content: public int CompareTo(object other)
    parameters:
    - id: other
      type: System.Object
      description: A TableObject to compare with this TableObject.
    return:
      type: System.Int32
      description: >-
        An integer that indicates the relative order of the table objects being compared.

        The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.

        Zero This object is equal to other. Greater than zero This object is greater than other.
    content.vb: Public Function CompareTo(other As Object) As Integer
  overload: netDxf.Tables.TableObject.CompareTo*
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: TableObject.CompareTo(Object)
  fullName.vb: netDxf.Tables.TableObject.CompareTo(Object)
  name.vb: CompareTo(Object)
- uid: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  commentId: M:netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  id: CompareTo(netDxf.Tables.TableObject)
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: CompareTo(TableObject)
  nameWithType: TableObject.CompareTo(TableObject)
  fullName: netDxf.Tables.TableObject.CompareTo(netDxf.Tables.TableObject)
  type: Method
  source:
    id: CompareTo
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 239
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Compares the current TableObject with another TableObject of the same type.
  remarks: If both table objects are not of the same type it will return zero. The comparison is made by their names.
  example: []
  syntax:
    content: public int CompareTo(TableObject other)
    parameters:
    - id: other
      type: netDxf.Tables.TableObject
      description: A TableObject to compare with this TableObject.
    return:
      type: System.Int32
      description: >-
        An integer that indicates the relative order of the table objects being compared.

        The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.

        Zero This object is equal to other. Greater than zero This object is greater than other.
    content.vb: Public Function CompareTo(other As TableObject) As Integer
  overload: netDxf.Tables.TableObject.CompareTo*
  implements:
  - System.IComparable{netDxf.Tables.TableObject}.CompareTo(netDxf.Tables.TableObject)
- uid: netDxf.Tables.TableObject.GetHashCode
  commentId: M:netDxf.Tables.TableObject.GetHashCode
  id: GetHashCode
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TableObject.GetHashCode()
  fullName: netDxf.Tables.TableObject.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 253
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: netDxf.Tables.TableObject.GetHashCode*
- uid: netDxf.Tables.TableObject.Equals(System.Object)
  commentId: M:netDxf.Tables.TableObject.Equals(System.Object)
  id: Equals(System.Object)
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: TableObject.Equals(object)
  fullName: netDxf.Tables.TableObject.Equals(object)
  type: Method
  source:
    id: Equals
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 333
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Check if two TableObject are equal.
  remarks: >-
    Two TableObjects are considered equals if their names are the same, regardless of their internal values.

    This is done this way because in a DXF two TableObjects cannot have the same name.
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
      description: Another TableObject to compare to.
    return:
      type: System.Boolean
      description: True if two TableObject are equal or false in any other case.
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: netDxf.Tables.TableObject.Equals*
  nameWithType.vb: TableObject.Equals(Object)
  fullName.vb: netDxf.Tables.TableObject.Equals(Object)
  name.vb: Equals(Object)
- uid: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  commentId: M:netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  id: Equals(netDxf.Tables.TableObject)
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: Equals(TableObject)
  nameWithType: TableObject.Equals(TableObject)
  fullName: netDxf.Tables.TableObject.Equals(netDxf.Tables.TableObject)
  type: Method
  source:
    id: Equals
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 357
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Check if two TableObject are equal.
  remarks: >-
    Two TableObjects are considered equals if their names are the same, regardless of their internal values.

    This is done this way because in a DXF two TableObjects cannot have the same name.
  example: []
  syntax:
    content: public bool Equals(TableObject other)
    parameters:
    - id: other
      type: netDxf.Tables.TableObject
      description: Another TableObject to compare to.
    return:
      type: System.Boolean
      description: True if two TableObject are equal or false in any other case.
    content.vb: Public Function Equals(other As TableObject) As Boolean
  overload: netDxf.Tables.TableObject.Equals*
  implements:
  - System.IEquatable{netDxf.Tables.TableObject}.Equals(netDxf.Tables.TableObject)
- uid: netDxf.Tables.TableObject.Clone(System.String)
  commentId: M:netDxf.Tables.TableObject.Clone(System.String)
  id: Clone(System.String)
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: Clone(string)
  nameWithType: TableObject.Clone(string)
  fullName: netDxf.Tables.TableObject.Clone(string)
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 376
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Creates a new table object that is a copy of the current instance.
  example: []
  syntax:
    content: public abstract TableObject Clone(string newName)
    parameters:
    - id: newName
      type: System.String
      description: TableObject name of the copy.
    return:
      type: netDxf.Tables.TableObject
      description: A new table object that is a copy of this instance.
    content.vb: Public MustOverride Function Clone(newName As String) As TableObject
  overload: netDxf.Tables.TableObject.Clone*
  nameWithType.vb: TableObject.Clone(String)
  fullName.vb: netDxf.Tables.TableObject.Clone(String)
  name.vb: Clone(String)
- uid: netDxf.Tables.TableObject.Clone
  commentId: M:netDxf.Tables.TableObject.Clone
  id: Clone
  parent: netDxf.Tables.TableObject
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: TableObject.Clone()
  fullName: netDxf.Tables.TableObject.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Tables/TableObject.cs
    startLine: 382
  assemblies:
  - netDxf
  namespace: netDxf.Tables
  summary: Creates a new table object that is a copy of the current instance.
  example: []
  syntax:
    content: public abstract object Clone()
    return:
      type: System.Object
      description: A new table object that is a copy of this instance.
    content.vb: Public MustOverride Function Clone() As Object
  overload: netDxf.Tables.TableObject.Clone*
  implements:
  - System.ICloneable.Clone
references:
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  href: netDxf.html
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{netDxf.Tables.TableObject}
  commentId: T:System.IComparable{netDxf.Tables.TableObject}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<TableObject>
  nameWithType: IComparable<TableObject>
  fullName: System.IComparable<netDxf.Tables.TableObject>
  nameWithType.vb: IComparable(Of TableObject)
  fullName.vb: System.IComparable(Of netDxf.Tables.TableObject)
  name.vb: IComparable(Of TableObject)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: System.IEquatable{netDxf.Tables.TableObject}
  commentId: T:System.IEquatable{netDxf.Tables.TableObject}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TableObject>
  nameWithType: IEquatable<TableObject>
  fullName: System.IEquatable<netDxf.Tables.TableObject>
  nameWithType.vb: IEquatable(Of TableObject)
  fullName.vb: System.IEquatable(Of netDxf.Tables.TableObject)
  name.vb: IEquatable(Of TableObject)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataAddAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataAddAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataRemoveAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataRemoveAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.Owner
  commentId: P:netDxf.DxfObject.Owner
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Owner
  name: Owner
  nameWithType: DxfObject.Owner
  fullName: netDxf.DxfObject.Owner
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Tables.TableObject.NameChangedEventHandler
  commentId: T:netDxf.Tables.TableObject.NameChangedEventHandler
  parent: netDxf.Tables
  href: netDxf.Tables.TableObject.html
  name: TableObject.NameChangedEventHandler
  nameWithType: TableObject.NameChangedEventHandler
  fullName: netDxf.Tables.TableObject.NameChangedEventHandler
  spec.csharp:
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: .
  - uid: netDxf.Tables.TableObject.NameChangedEventHandler
    name: NameChangedEventHandler
    href: netDxf.Tables.TableObject.NameChangedEventHandler.html
  spec.vb:
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: .
  - uid: netDxf.Tables.TableObject.NameChangedEventHandler
    name: NameChangedEventHandler
    href: netDxf.Tables.TableObject.NameChangedEventHandler.html
- uid: netDxf.Tables.TableObject.OnNameChangedEvent*
  commentId: Overload:netDxf.Tables.TableObject.OnNameChangedEvent
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_OnNameChangedEvent_System_String_System_String_
  name: OnNameChangedEvent
  nameWithType: TableObject.OnNameChangedEvent
  fullName: netDxf.Tables.TableObject.OnNameChangedEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.DxfObjectCode
  commentId: T:netDxf.DxfObjectCode
  href: netDxf.DxfObjectCode.html
  name: DxfObjectCode
  nameWithType: DxfObjectCode
  fullName: netDxf.DxfObjectCode
- uid: netDxf.Tables.TableObject.#ctor*
  commentId: Overload:netDxf.Tables.TableObject.#ctor
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject__ctor_System_String_System_String_System_Boolean_
  name: TableObject
  nameWithType: TableObject.TableObject
  fullName: netDxf.Tables.TableObject.TableObject
  nameWithType.vb: TableObject.New
  fullName.vb: netDxf.Tables.TableObject.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Tables.TableObject.Name*
  commentId: Overload:netDxf.Tables.TableObject.Name
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Name
  name: Name
  nameWithType: TableObject.Name
  fullName: netDxf.Tables.TableObject.Name
- uid: netDxf.Tables.TableObject.IsReserved*
  commentId: Overload:netDxf.Tables.TableObject.IsReserved
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsReserved
  name: IsReserved
  nameWithType: TableObject.IsReserved
  fullName: netDxf.Tables.TableObject.IsReserved
- uid: netDxf.Tables.TableObject.InvalidCharacters*
  commentId: Overload:netDxf.Tables.TableObject.InvalidCharacters
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_InvalidCharacters
  name: InvalidCharacters
  nameWithType: TableObject.InvalidCharacters
  fullName: netDxf.Tables.TableObject.InvalidCharacters
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: netDxf.Tables.TableObject.IsValidName*
  commentId: Overload:netDxf.Tables.TableObject.IsValidName
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_IsValidName_System_String_
  name: IsValidName
  nameWithType: TableObject.IsValidName
  fullName: netDxf.Tables.TableObject.IsValidName
- uid: netDxf.Tables.TableObject.HasReferences*
  commentId: Overload:netDxf.Tables.TableObject.HasReferences
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_HasReferences
  name: HasReferences
  nameWithType: TableObject.HasReferences
  fullName: netDxf.Tables.TableObject.HasReferences
- uid: netDxf.Tables.TableObject.GetReferences*
  commentId: Overload:netDxf.Tables.TableObject.GetReferences
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetReferences
  name: GetReferences
  nameWithType: TableObject.GetReferences
  fullName: netDxf.Tables.TableObject.GetReferences
- uid: System.Collections.Generic.List{netDxf.DxfObjectReference}
  commentId: T:System.Collections.Generic.List{netDxf.DxfObjectReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<DxfObjectReference>
  nameWithType: List<DxfObjectReference>
  fullName: System.Collections.Generic.List<netDxf.DxfObjectReference>
  nameWithType.vb: List(Of DxfObjectReference)
  fullName.vb: System.Collections.Generic.List(Of netDxf.DxfObjectReference)
  name.vb: List(Of DxfObjectReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.DxfObjectReference
    name: DxfObjectReference
    href: netDxf.DxfObjectReference.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.DxfObjectReference
    name: DxfObjectReference
    href: netDxf.DxfObjectReference.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.DxfObject.ToString
  commentId: M:netDxf.DxfObject.ToString
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  name: ToString()
  nameWithType: DxfObject.ToString()
  fullName: netDxf.DxfObject.ToString()
  spec.csharp:
  - uid: netDxf.DxfObject.ToString
    name: ToString
    href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.ToString
    name: ToString
    href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  - name: (
  - name: )
- uid: netDxf.Tables.TableObject.ToString*
  commentId: Overload:netDxf.Tables.TableObject.ToString
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_ToString
  name: ToString
  nameWithType: TableObject.ToString
  fullName: netDxf.Tables.TableObject.ToString
- uid: netDxf.Tables.TableObject.CompareTo*
  commentId: Overload:netDxf.Tables.TableObject.CompareTo
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_CompareTo_System_Object_
  name: CompareTo
  nameWithType: TableObject.CompareTo
  fullName: netDxf.Tables.TableObject.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  name: CompareTo(object)
  nameWithType: IComparable.CompareTo(object)
  fullName: System.IComparable.CompareTo(object)
  nameWithType.vb: IComparable.CompareTo(Object)
  fullName.vb: System.IComparable.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IComparable{netDxf.Tables.TableObject}.CompareTo(netDxf.Tables.TableObject)
  commentId: M:System.IComparable{netDxf.Tables.TableObject}.CompareTo(netDxf.Tables.TableObject)
  parent: System.IComparable{netDxf.Tables.TableObject}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(TableObject)
  nameWithType: IComparable<TableObject>.CompareTo(TableObject)
  fullName: System.IComparable<netDxf.Tables.TableObject>.CompareTo(netDxf.Tables.TableObject)
  nameWithType.vb: IComparable(Of TableObject).CompareTo(TableObject)
  fullName.vb: System.IComparable(Of netDxf.Tables.TableObject).CompareTo(netDxf.Tables.TableObject)
  spec.csharp:
  - uid: System.IComparable{netDxf.Tables.TableObject}.CompareTo(netDxf.Tables.TableObject)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
  spec.vb:
  - uid: System.IComparable{netDxf.Tables.TableObject}.CompareTo(netDxf.Tables.TableObject)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: netDxf.Tables.TableObject
  commentId: T:netDxf.Tables.TableObject
  parent: netDxf.Tables
  href: netDxf.Tables.TableObject.html
  name: TableObject
  nameWithType: TableObject
  fullName: netDxf.Tables.TableObject
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: netDxf.Tables.TableObject.GetHashCode*
  commentId: Overload:netDxf.Tables.TableObject.GetHashCode
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_GetHashCode
  name: GetHashCode
  nameWithType: TableObject.GetHashCode
  fullName: netDxf.Tables.TableObject.GetHashCode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: netDxf.Tables.TableObject.Equals*
  commentId: Overload:netDxf.Tables.TableObject.Equals
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Equals_System_Object_
  name: Equals
  nameWithType: TableObject.Equals
  fullName: netDxf.Tables.TableObject.Equals
- uid: System.IEquatable{netDxf.Tables.TableObject}.Equals(netDxf.Tables.TableObject)
  commentId: M:System.IEquatable{netDxf.Tables.TableObject}.Equals(netDxf.Tables.TableObject)
  parent: System.IEquatable{netDxf.Tables.TableObject}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(TableObject)
  nameWithType: IEquatable<TableObject>.Equals(TableObject)
  fullName: System.IEquatable<netDxf.Tables.TableObject>.Equals(netDxf.Tables.TableObject)
  nameWithType.vb: IEquatable(Of TableObject).Equals(TableObject)
  fullName.vb: System.IEquatable(Of netDxf.Tables.TableObject).Equals(netDxf.Tables.TableObject)
  spec.csharp:
  - uid: System.IEquatable{netDxf.Tables.TableObject}.Equals(netDxf.Tables.TableObject)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{netDxf.Tables.TableObject}.Equals(netDxf.Tables.TableObject)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: netDxf.Tables.TableObject
    name: TableObject
    href: netDxf.Tables.TableObject.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: netDxf.Tables.TableObject.Clone*
  commentId: Overload:netDxf.Tables.TableObject.Clone
  href: netDxf.Tables.TableObject.html#netDxf_Tables_TableObject_Clone_System_String_
  name: Clone
  nameWithType: TableObject.Clone
  fullName: netDxf.Tables.TableObject.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
