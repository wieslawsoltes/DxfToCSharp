### YamlMime:ManagedReference
items:
- uid: netDxf.Units.LinearUnitFormat
  commentId: T:netDxf.Units.LinearUnitFormat
  id: LinearUnitFormat
  parent: netDxf.Units
  children:
  - netDxf.Units.LinearUnitFormat.ToArchitectural(System.Double,netDxf.Units.UnitStyleFormat)
  - netDxf.Units.LinearUnitFormat.ToDecimal(System.Double,netDxf.Units.UnitStyleFormat)
  - netDxf.Units.LinearUnitFormat.ToEngineering(System.Double,netDxf.Units.UnitStyleFormat)
  - netDxf.Units.LinearUnitFormat.ToFractional(System.Double,netDxf.Units.UnitStyleFormat)
  - netDxf.Units.LinearUnitFormat.ToScientific(System.Double,netDxf.Units.UnitStyleFormat)
  langs:
  - csharp
  - vb
  name: LinearUnitFormat
  nameWithType: LinearUnitFormat
  fullName: netDxf.Units.LinearUnitFormat
  type: Class
  source:
    id: LinearUnitFormat
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Units/LinearUnitFormat.cs
    startLine: 33
  assemblies:
  - netDxf
  namespace: netDxf.Units
  summary: Utility methods to format a decimal number to its different string representations.
  example: []
  syntax:
    content: public static class LinearUnitFormat
    content.vb: Public Module LinearUnitFormat
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Units.LinearUnitFormat.ToScientific(System.Double,netDxf.Units.UnitStyleFormat)
  commentId: M:netDxf.Units.LinearUnitFormat.ToScientific(System.Double,netDxf.Units.UnitStyleFormat)
  id: ToScientific(System.Double,netDxf.Units.UnitStyleFormat)
  parent: netDxf.Units.LinearUnitFormat
  langs:
  - csharp
  - vb
  name: ToScientific(double, UnitStyleFormat)
  nameWithType: LinearUnitFormat.ToScientific(double, UnitStyleFormat)
  fullName: netDxf.Units.LinearUnitFormat.ToScientific(double, netDxf.Units.UnitStyleFormat)
  type: Method
  source:
    id: ToScientific
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Units/LinearUnitFormat.cs
    startLine: 43
  assemblies:
  - netDxf
  namespace: netDxf.Units
  summary: Converts a length value into its scientific string representation.
  example: []
  syntax:
    content: public static string ToScientific(double length, UnitStyleFormat format)
    parameters:
    - id: length
      type: System.Double
      description: The length value.
    - id: format
      type: netDxf.Units.UnitStyleFormat
      description: The unit style format.
    return:
      type: System.String
      description: A string that represents the length in scientific units.
    content.vb: Public Shared Function ToScientific(length As Double, format As UnitStyleFormat) As String
  overload: netDxf.Units.LinearUnitFormat.ToScientific*
  nameWithType.vb: LinearUnitFormat.ToScientific(Double, UnitStyleFormat)
  fullName.vb: netDxf.Units.LinearUnitFormat.ToScientific(Double, netDxf.Units.UnitStyleFormat)
  name.vb: ToScientific(Double, UnitStyleFormat)
- uid: netDxf.Units.LinearUnitFormat.ToDecimal(System.Double,netDxf.Units.UnitStyleFormat)
  commentId: M:netDxf.Units.LinearUnitFormat.ToDecimal(System.Double,netDxf.Units.UnitStyleFormat)
  id: ToDecimal(System.Double,netDxf.Units.UnitStyleFormat)
  parent: netDxf.Units.LinearUnitFormat
  langs:
  - csharp
  - vb
  name: ToDecimal(double, UnitStyleFormat)
  nameWithType: LinearUnitFormat.ToDecimal(double, UnitStyleFormat)
  fullName: netDxf.Units.LinearUnitFormat.ToDecimal(double, netDxf.Units.UnitStyleFormat)
  type: Method
  source:
    id: ToDecimal
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Units/LinearUnitFormat.cs
    startLine: 64
  assemblies:
  - netDxf
  namespace: netDxf.Units
  summary: Converts a length value into its decimal string representation.
  example: []
  syntax:
    content: public static string ToDecimal(double length, UnitStyleFormat format)
    parameters:
    - id: length
      type: System.Double
      description: The length value.
    - id: format
      type: netDxf.Units.UnitStyleFormat
      description: The unit style format.
    return:
      type: System.String
      description: A string that represents the length in decimal units.
    content.vb: Public Shared Function ToDecimal(length As Double, format As UnitStyleFormat) As String
  overload: netDxf.Units.LinearUnitFormat.ToDecimal*
  nameWithType.vb: LinearUnitFormat.ToDecimal(Double, UnitStyleFormat)
  fullName.vb: netDxf.Units.LinearUnitFormat.ToDecimal(Double, netDxf.Units.UnitStyleFormat)
  name.vb: ToDecimal(Double, UnitStyleFormat)
- uid: netDxf.Units.LinearUnitFormat.ToArchitectural(System.Double,netDxf.Units.UnitStyleFormat)
  commentId: M:netDxf.Units.LinearUnitFormat.ToArchitectural(System.Double,netDxf.Units.UnitStyleFormat)
  id: ToArchitectural(System.Double,netDxf.Units.UnitStyleFormat)
  parent: netDxf.Units.LinearUnitFormat
  langs:
  - csharp
  - vb
  name: ToArchitectural(double, UnitStyleFormat)
  nameWithType: LinearUnitFormat.ToArchitectural(double, UnitStyleFormat)
  fullName: netDxf.Units.LinearUnitFormat.ToArchitectural(double, netDxf.Units.UnitStyleFormat)
  type: Method
  source:
    id: ToArchitectural
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Units/LinearUnitFormat.cs
    startLine: 86
  assemblies:
  - netDxf
  namespace: netDxf.Units
  summary: Converts a length value into its feet and fractional inches string representation.
  remarks: The Architectural format assumes that each drawing unit represents one inch.
  example: []
  syntax:
    content: public static string ToArchitectural(double length, UnitStyleFormat format)
    parameters:
    - id: length
      type: System.Double
      description: The length value.
    - id: format
      type: netDxf.Units.UnitStyleFormat
      description: The unit style format.
    return:
      type: System.String
      description: A string that represents the length in feet and fractional inches.
    content.vb: Public Shared Function ToArchitectural(length As Double, format As UnitStyleFormat) As String
  overload: netDxf.Units.LinearUnitFormat.ToArchitectural*
  nameWithType.vb: LinearUnitFormat.ToArchitectural(Double, UnitStyleFormat)
  fullName.vb: netDxf.Units.LinearUnitFormat.ToArchitectural(Double, netDxf.Units.UnitStyleFormat)
  name.vb: ToArchitectural(Double, UnitStyleFormat)
- uid: netDxf.Units.LinearUnitFormat.ToEngineering(System.Double,netDxf.Units.UnitStyleFormat)
  commentId: M:netDxf.Units.LinearUnitFormat.ToEngineering(System.Double,netDxf.Units.UnitStyleFormat)
  id: ToEngineering(System.Double,netDxf.Units.UnitStyleFormat)
  parent: netDxf.Units.LinearUnitFormat
  langs:
  - csharp
  - vb
  name: ToEngineering(double, UnitStyleFormat)
  nameWithType: LinearUnitFormat.ToEngineering(double, UnitStyleFormat)
  fullName: netDxf.Units.LinearUnitFormat.ToEngineering(double, netDxf.Units.UnitStyleFormat)
  type: Method
  source:
    id: ToEngineering
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Units/LinearUnitFormat.cs
    startLine: 195
  assemblies:
  - netDxf
  namespace: netDxf.Units
  summary: Converts a length value into its feet and decimal inches string representation.
  remarks: The Engineering format assumes that each drawing unit represents one inch.
  example: []
  syntax:
    content: public static string ToEngineering(double length, UnitStyleFormat format)
    parameters:
    - id: length
      type: System.Double
      description: The length value.
    - id: format
      type: netDxf.Units.UnitStyleFormat
      description: The unit style format.
    return:
      type: System.String
      description: A string that represents the length in feet and decimal inches.
    content.vb: Public Shared Function ToEngineering(length As Double, format As UnitStyleFormat) As String
  overload: netDxf.Units.LinearUnitFormat.ToEngineering*
  nameWithType.vb: LinearUnitFormat.ToEngineering(Double, UnitStyleFormat)
  fullName.vb: netDxf.Units.LinearUnitFormat.ToEngineering(Double, netDxf.Units.UnitStyleFormat)
  name.vb: ToEngineering(Double, UnitStyleFormat)
- uid: netDxf.Units.LinearUnitFormat.ToFractional(System.Double,netDxf.Units.UnitStyleFormat)
  commentId: M:netDxf.Units.LinearUnitFormat.ToFractional(System.Double,netDxf.Units.UnitStyleFormat)
  id: ToFractional(System.Double,netDxf.Units.UnitStyleFormat)
  parent: netDxf.Units.LinearUnitFormat
  langs:
  - csharp
  - vb
  name: ToFractional(double, UnitStyleFormat)
  nameWithType: LinearUnitFormat.ToFractional(double, UnitStyleFormat)
  fullName: netDxf.Units.LinearUnitFormat.ToFractional(double, netDxf.Units.UnitStyleFormat)
  type: Method
  source:
    id: ToFractional
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Units/LinearUnitFormat.cs
    startLine: 252
  assemblies:
  - netDxf
  namespace: netDxf.Units
  summary: Converts a length value into its fractional string representation.
  example: []
  syntax:
    content: public static string ToFractional(double length, UnitStyleFormat format)
    parameters:
    - id: length
      type: System.Double
      description: The length value.
    - id: format
      type: netDxf.Units.UnitStyleFormat
      description: The unit style format.
    return:
      type: System.String
      description: A string that represents the length in fractional units.
    content.vb: Public Shared Function ToFractional(length As Double, format As UnitStyleFormat) As String
  overload: netDxf.Units.LinearUnitFormat.ToFractional*
  nameWithType.vb: LinearUnitFormat.ToFractional(Double, UnitStyleFormat)
  fullName.vb: netDxf.Units.LinearUnitFormat.ToFractional(Double, netDxf.Units.UnitStyleFormat)
  name.vb: ToFractional(Double, UnitStyleFormat)
references:
- uid: netDxf.Units
  commentId: N:netDxf.Units
  href: netDxf.html
  name: netDxf.Units
  nameWithType: netDxf.Units
  fullName: netDxf.Units
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Units
    name: Units
    href: netDxf.Units.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Units
    name: Units
    href: netDxf.Units.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.Units.LinearUnitFormat.ToScientific*
  commentId: Overload:netDxf.Units.LinearUnitFormat.ToScientific
  href: netDxf.Units.LinearUnitFormat.html#netDxf_Units_LinearUnitFormat_ToScientific_System_Double_netDxf_Units_UnitStyleFormat_
  name: ToScientific
  nameWithType: LinearUnitFormat.ToScientific
  fullName: netDxf.Units.LinearUnitFormat.ToScientific
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Units.UnitStyleFormat
  commentId: T:netDxf.Units.UnitStyleFormat
  parent: netDxf.Units
  href: netDxf.Units.UnitStyleFormat.html
  name: UnitStyleFormat
  nameWithType: UnitStyleFormat
  fullName: netDxf.Units.UnitStyleFormat
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Units.LinearUnitFormat.ToDecimal*
  commentId: Overload:netDxf.Units.LinearUnitFormat.ToDecimal
  href: netDxf.Units.LinearUnitFormat.html#netDxf_Units_LinearUnitFormat_ToDecimal_System_Double_netDxf_Units_UnitStyleFormat_
  name: ToDecimal
  nameWithType: LinearUnitFormat.ToDecimal
  fullName: netDxf.Units.LinearUnitFormat.ToDecimal
- uid: netDxf.Units.LinearUnitFormat.ToArchitectural*
  commentId: Overload:netDxf.Units.LinearUnitFormat.ToArchitectural
  href: netDxf.Units.LinearUnitFormat.html#netDxf_Units_LinearUnitFormat_ToArchitectural_System_Double_netDxf_Units_UnitStyleFormat_
  name: ToArchitectural
  nameWithType: LinearUnitFormat.ToArchitectural
  fullName: netDxf.Units.LinearUnitFormat.ToArchitectural
- uid: netDxf.Units.LinearUnitFormat.ToEngineering*
  commentId: Overload:netDxf.Units.LinearUnitFormat.ToEngineering
  href: netDxf.Units.LinearUnitFormat.html#netDxf_Units_LinearUnitFormat_ToEngineering_System_Double_netDxf_Units_UnitStyleFormat_
  name: ToEngineering
  nameWithType: LinearUnitFormat.ToEngineering
  fullName: netDxf.Units.LinearUnitFormat.ToEngineering
- uid: netDxf.Units.LinearUnitFormat.ToFractional*
  commentId: Overload:netDxf.Units.LinearUnitFormat.ToFractional
  href: netDxf.Units.LinearUnitFormat.html#netDxf_Units_LinearUnitFormat_ToFractional_System_Double_netDxf_Units_UnitStyleFormat_
  name: ToFractional
  nameWithType: LinearUnitFormat.ToFractional
  fullName: netDxf.Units.LinearUnitFormat.ToFractional
