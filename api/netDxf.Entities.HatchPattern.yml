### YamlMime:ManagedReference
items:
- uid: netDxf.Entities.HatchPattern
  commentId: T:netDxf.Entities.HatchPattern
  id: HatchPattern
  parent: netDxf.Entities
  children:
  - netDxf.Entities.HatchPattern.#ctor(System.String)
  - netDxf.Entities.HatchPattern.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition})
  - netDxf.Entities.HatchPattern.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition},System.String)
  - netDxf.Entities.HatchPattern.#ctor(System.String,System.String)
  - netDxf.Entities.HatchPattern.Angle
  - netDxf.Entities.HatchPattern.Clone
  - netDxf.Entities.HatchPattern.Description
  - netDxf.Entities.HatchPattern.Dots
  - netDxf.Entities.HatchPattern.Fill
  - netDxf.Entities.HatchPattern.Line
  - netDxf.Entities.HatchPattern.LineDefinitions
  - netDxf.Entities.HatchPattern.Load(System.String,System.String)
  - netDxf.Entities.HatchPattern.Name
  - netDxf.Entities.HatchPattern.NamesFromFile(System.String)
  - netDxf.Entities.HatchPattern.Net
  - netDxf.Entities.HatchPattern.Origin
  - netDxf.Entities.HatchPattern.Save(System.String)
  - netDxf.Entities.HatchPattern.Scale
  - netDxf.Entities.HatchPattern.Solid
  - netDxf.Entities.HatchPattern.Style
  - netDxf.Entities.HatchPattern.Type
  langs:
  - csharp
  - vb
  name: HatchPattern
  nameWithType: HatchPattern
  fullName: netDxf.Entities.HatchPattern
  type: Class
  source:
    id: HatchPattern
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 36
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Represents a <xref href="netDxf.Entities.Hatch?text=hatch" data-throw-if-not-resolved="false"></xref> pattern style.
  example: []
  syntax:
    content: 'public class HatchPattern : ICloneable'
    content.vb: Public Class HatchPattern Implements ICloneable
  inheritance:
  - System.Object
  derivedClasses:
  - netDxf.Entities.HatchGradientPattern
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.Entities.HatchPattern.#ctor(System.String)
  commentId: M:netDxf.Entities.HatchPattern.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: HatchPattern(string)
  nameWithType: HatchPattern.HatchPattern(string)
  fullName: netDxf.Entities.HatchPattern.HatchPattern(string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 59
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchPattern</code> class.
  example: []
  syntax:
    content: public HatchPattern(string name)
    parameters:
    - id: name
      type: System.String
      description: Pattern name, always stored as uppercase.
    content.vb: Public Sub New(name As String)
  overload: netDxf.Entities.HatchPattern.#ctor*
  nameWithType.vb: HatchPattern.New(String)
  fullName.vb: netDxf.Entities.HatchPattern.New(String)
  name.vb: New(String)
- uid: netDxf.Entities.HatchPattern.#ctor(System.String,System.String)
  commentId: M:netDxf.Entities.HatchPattern.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: HatchPattern(string, string)
  nameWithType: HatchPattern.HatchPattern(string, string)
  fullName: netDxf.Entities.HatchPattern.HatchPattern(string, string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 69
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchPattern</code> class.
  example: []
  syntax:
    content: public HatchPattern(string name, string description)
    parameters:
    - id: name
      type: System.String
      description: Pattern name, always stored as uppercase.
    - id: description
      type: System.String
      description: Description of the pattern (optional, this information is not saved in the DXF file). By default it will use the supplied name.
    content.vb: Public Sub New(name As String, description As String)
  overload: netDxf.Entities.HatchPattern.#ctor*
  nameWithType.vb: HatchPattern.New(String, String)
  fullName.vb: netDxf.Entities.HatchPattern.New(String, String)
  name.vb: New(String, String)
- uid: netDxf.Entities.HatchPattern.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition})
  commentId: M:netDxf.Entities.HatchPattern.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition})'
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: HatchPattern(string, IEnumerable<HatchPatternLineDefinition>)
  nameWithType: HatchPattern.HatchPattern(string, IEnumerable<HatchPatternLineDefinition>)
  fullName: netDxf.Entities.HatchPattern.HatchPattern(string, System.Collections.Generic.IEnumerable<netDxf.Entities.HatchPatternLineDefinition>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 79
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchPattern</code> class.
  example: []
  syntax:
    content: public HatchPattern(string name, IEnumerable<HatchPatternLineDefinition> lineDefinitions)
    parameters:
    - id: name
      type: System.String
      description: Pattern name, always stored as uppercase.
    - id: lineDefinitions
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition}
      description: The definition of the lines that make up the pattern (not applicable in Solid fills).
    content.vb: Public Sub New(name As String, lineDefinitions As IEnumerable(Of HatchPatternLineDefinition))
  overload: netDxf.Entities.HatchPattern.#ctor*
  nameWithType.vb: HatchPattern.New(String, IEnumerable(Of HatchPatternLineDefinition))
  fullName.vb: netDxf.Entities.HatchPattern.New(String, System.Collections.Generic.IEnumerable(Of netDxf.Entities.HatchPatternLineDefinition))
  name.vb: New(String, IEnumerable(Of HatchPatternLineDefinition))
- uid: netDxf.Entities.HatchPattern.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition},System.String)
  commentId: M:netDxf.Entities.HatchPattern.#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition},System.String)
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition},System.String)'
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: HatchPattern(string, IEnumerable<HatchPatternLineDefinition>, string)
  nameWithType: HatchPattern.HatchPattern(string, IEnumerable<HatchPatternLineDefinition>, string)
  fullName: netDxf.Entities.HatchPattern.HatchPattern(string, System.Collections.Generic.IEnumerable<netDxf.Entities.HatchPatternLineDefinition>, string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 90
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Initializes a new instance of the <code>HatchPattern</code> class.
  example: []
  syntax:
    content: public HatchPattern(string name, IEnumerable<HatchPatternLineDefinition> lineDefinitions, string description)
    parameters:
    - id: name
      type: System.String
      description: Pattern name, always stored as uppercase.
    - id: lineDefinitions
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition}
      description: The definition of the lines that make up the pattern (not applicable in Solid fills).
    - id: description
      type: System.String
      description: Description of the pattern (optional, this information is not saved in the DXF file). By default it will use the supplied name.
    content.vb: Public Sub New(name As String, lineDefinitions As IEnumerable(Of HatchPatternLineDefinition), description As String)
  overload: netDxf.Entities.HatchPattern.#ctor*
  nameWithType.vb: HatchPattern.New(String, IEnumerable(Of HatchPatternLineDefinition), String)
  fullName.vb: netDxf.Entities.HatchPattern.New(String, System.Collections.Generic.IEnumerable(Of netDxf.Entities.HatchPatternLineDefinition), String)
  name.vb: New(String, IEnumerable(Of HatchPatternLineDefinition), String)
- uid: netDxf.Entities.HatchPattern.Solid
  commentId: P:netDxf.Entities.HatchPattern.Solid
  id: Solid
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Solid
  nameWithType: HatchPattern.Solid
  fullName: netDxf.Entities.HatchPattern.Solid
  type: Property
  source:
    id: Solid
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 111
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Solid hatch pattern.
  remarks: The predefined pattern values are based on the acad.pat file of AutoCAD.
  example: []
  syntax:
    content: public static HatchPattern Solid { get; }
    parameters: []
    return:
      type: netDxf.Entities.HatchPattern
    content.vb: Public Shared ReadOnly Property Solid As HatchPattern
  overload: netDxf.Entities.HatchPattern.Solid*
- uid: netDxf.Entities.HatchPattern.Line
  commentId: P:netDxf.Entities.HatchPattern.Line
  id: Line
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: HatchPattern.Line
  fullName: netDxf.Entities.HatchPattern.Line
  type: Property
  source:
    id: Line
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 132
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Lines hatch pattern.
  remarks: The predefined pattern values are based on the acad.pat file of AutoCAD.
  example: []
  syntax:
    content: public static HatchPattern Line { get; }
    parameters: []
    return:
      type: netDxf.Entities.HatchPattern
    content.vb: Public Shared ReadOnly Property Line As HatchPattern
  overload: netDxf.Entities.HatchPattern.Line*
- uid: netDxf.Entities.HatchPattern.Net
  commentId: P:netDxf.Entities.HatchPattern.Net
  id: Net
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Net
  nameWithType: HatchPattern.Net
  fullName: netDxf.Entities.HatchPattern.Net
  type: Property
  source:
    id: Net
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 153
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Net or squares hatch pattern.
  remarks: The predefined pattern values are based on the acad.pat file of AutoCAD.
  example: []
  syntax:
    content: public static HatchPattern Net { get; }
    parameters: []
    return:
      type: netDxf.Entities.HatchPattern
    content.vb: Public Shared ReadOnly Property Net As HatchPattern
  overload: netDxf.Entities.HatchPattern.Net*
- uid: netDxf.Entities.HatchPattern.Dots
  commentId: P:netDxf.Entities.HatchPattern.Dots
  id: Dots
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Dots
  nameWithType: HatchPattern.Dots
  fullName: netDxf.Entities.HatchPattern.Dots
  type: Property
  source:
    id: Dots
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 183
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Dots hatch pattern.
  remarks: The predefined pattern values are based on the acad.pat file of AutoCAD.
  example: []
  syntax:
    content: public static HatchPattern Dots { get; }
    parameters: []
    return:
      type: netDxf.Entities.HatchPattern
    content.vb: Public Shared ReadOnly Property Dots As HatchPattern
  overload: netDxf.Entities.HatchPattern.Dots*
- uid: netDxf.Entities.HatchPattern.Name
  commentId: P:netDxf.Entities.HatchPattern.Name
  id: Name
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: HatchPattern.Name
  fullName: netDxf.Entities.HatchPattern.Name
  type: Property
  source:
    id: Name
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 208
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the hatch pattern name.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: netDxf.Entities.HatchPattern.Name*
- uid: netDxf.Entities.HatchPattern.Description
  commentId: P:netDxf.Entities.HatchPattern.Description
  id: Description
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: HatchPattern.Description
  fullName: netDxf.Entities.HatchPattern.Description
  type: Property
  source:
    id: Description
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 216
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the hatch description (optional, this information is not saved in the DXF file).
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: netDxf.Entities.HatchPattern.Description*
- uid: netDxf.Entities.HatchPattern.Style
  commentId: P:netDxf.Entities.HatchPattern.Style
  id: Style
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: HatchPattern.Style
  fullName: netDxf.Entities.HatchPattern.Style
  type: Property
  source:
    id: Style
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 226
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the hatch style.
  remarks: Only normal style is implemented.
  example: []
  syntax:
    content: public HatchStyle Style { get; }
    parameters: []
    return:
      type: netDxf.Entities.HatchStyle
    content.vb: Public Property Style As HatchStyle
  overload: netDxf.Entities.HatchPattern.Style*
- uid: netDxf.Entities.HatchPattern.Type
  commentId: P:netDxf.Entities.HatchPattern.Type
  id: Type
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: HatchPattern.Type
  fullName: netDxf.Entities.HatchPattern.Type
  type: Property
  source:
    id: Type
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 235
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the hatch pattern type.
  example: []
  syntax:
    content: public HatchType Type { get; set; }
    parameters: []
    return:
      type: netDxf.Entities.HatchType
    content.vb: Public Property Type As HatchType
  overload: netDxf.Entities.HatchPattern.Type*
- uid: netDxf.Entities.HatchPattern.Fill
  commentId: P:netDxf.Entities.HatchPattern.Fill
  id: Fill
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: HatchPattern.Fill
  fullName: netDxf.Entities.HatchPattern.Fill
  type: Property
  source:
    id: Fill
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 244
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the solid fill flag.
  example: []
  syntax:
    content: public HatchFillType Fill { get; }
    parameters: []
    return:
      type: netDxf.Entities.HatchFillType
    content.vb: Public Property Fill As HatchFillType
  overload: netDxf.Entities.HatchPattern.Fill*
- uid: netDxf.Entities.HatchPattern.Origin
  commentId: P:netDxf.Entities.HatchPattern.Origin
  id: Origin
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: HatchPattern.Origin
  fullName: netDxf.Entities.HatchPattern.Origin
  type: Property
  source:
    id: Origin
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 253
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the pattern origin.
  example: []
  syntax:
    content: public Vector2 Origin { get; set; }
    parameters: []
    return:
      type: netDxf.Vector2
    content.vb: Public Property Origin As Vector2
  overload: netDxf.Entities.HatchPattern.Origin*
- uid: netDxf.Entities.HatchPattern.Angle
  commentId: P:netDxf.Entities.HatchPattern.Angle
  id: Angle
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: HatchPattern.Angle
  fullName: netDxf.Entities.HatchPattern.Angle
  type: Property
  source:
    id: Angle
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 262
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the pattern angle in degrees.
  example: []
  syntax:
    content: public double Angle { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Angle As Double
  overload: netDxf.Entities.HatchPattern.Angle*
- uid: netDxf.Entities.HatchPattern.Scale
  commentId: P:netDxf.Entities.HatchPattern.Scale
  id: Scale
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: HatchPattern.Scale
  fullName: netDxf.Entities.HatchPattern.Scale
  type: Property
  source:
    id: Scale
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 271
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets or sets the pattern scale (not applicable in Solid fills).
  example: []
  syntax:
    content: public double Scale { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Scale As Double
  overload: netDxf.Entities.HatchPattern.Scale*
- uid: netDxf.Entities.HatchPattern.LineDefinitions
  commentId: P:netDxf.Entities.HatchPattern.LineDefinitions
  id: LineDefinitions
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: LineDefinitions
  nameWithType: HatchPattern.LineDefinitions
  fullName: netDxf.Entities.HatchPattern.LineDefinitions
  type: Property
  source:
    id: LineDefinitions
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 285
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the definition of the lines that make up the pattern (not applicable in Solid fills).
  example: []
  syntax:
    content: public List<HatchPatternLineDefinition> LineDefinitions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{netDxf.Entities.HatchPatternLineDefinition}
    content.vb: Public ReadOnly Property LineDefinitions As List(Of HatchPatternLineDefinition)
  overload: netDxf.Entities.HatchPattern.LineDefinitions*
- uid: netDxf.Entities.HatchPattern.NamesFromFile(System.String)
  commentId: M:netDxf.Entities.HatchPattern.NamesFromFile(System.String)
  id: NamesFromFile(System.String)
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: NamesFromFile(string)
  nameWithType: HatchPattern.NamesFromFile(string)
  fullName: netDxf.Entities.HatchPattern.NamesFromFile(string)
  type: Method
  source:
    id: NamesFromFile
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 299
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Gets the list of hatch pattern names defined in a PAT file.
  example: []
  syntax:
    content: public static List<string> NamesFromFile(string file)
    parameters:
    - id: file
      type: System.String
      description: Hatch pattern definitions file.
    return:
      type: System.Collections.Generic.List{System.String}
      description: List of hatch pattern names contained in the specified PAT file.
    content.vb: Public Shared Function NamesFromFile(file As String) As List(Of String)
  overload: netDxf.Entities.HatchPattern.NamesFromFile*
  nameWithType.vb: HatchPattern.NamesFromFile(String)
  fullName.vb: netDxf.Entities.HatchPattern.NamesFromFile(String)
  name.vb: NamesFromFile(String)
- uid: netDxf.Entities.HatchPattern.Load(System.String,System.String)
  commentId: M:netDxf.Entities.HatchPattern.Load(System.String,System.String)
  id: Load(System.String,System.String)
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Load(string, string)
  nameWithType: HatchPattern.Load(string, string)
  fullName: netDxf.Entities.HatchPattern.Load(string, string)
  type: Method
  source:
    id: Load
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 329
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a new hatch pattern from the definition in a PAT file.
  example: []
  syntax:
    content: public static HatchPattern Load(string file, string patternName)
    parameters:
    - id: file
      type: System.String
      description: PAT file where the definition is located.
    - id: patternName
      type: System.String
      description: Name of the pattern definition that wants to be read (ignore case).
    return:
      type: netDxf.Entities.HatchPattern
      description: A Hatch pattern as defined in the PAT file.
    content.vb: Public Shared Function Load(file As String, patternName As String) As HatchPattern
  overload: netDxf.Entities.HatchPattern.Load*
  nameWithType.vb: HatchPattern.Load(String, String)
  fullName.vb: netDxf.Entities.HatchPattern.Load(String, String)
  name.vb: Load(String, String)
- uid: netDxf.Entities.HatchPattern.Save(System.String)
  commentId: M:netDxf.Entities.HatchPattern.Save(System.String)
  id: Save(System.String)
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Save(string)
  nameWithType: HatchPattern.Save(string)
  fullName: netDxf.Entities.HatchPattern.Save(string)
  type: Method
  source:
    id: Save
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 428
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Saves the current linetype to the specified file, if the file does not exist it creates a new one.
  example: []
  syntax:
    content: public void Save(string file)
    parameters:
    - id: file
      type: System.String
      description: File where the current linetype will be saved.
    content.vb: Public Sub Save(file As String)
  overload: netDxf.Entities.HatchPattern.Save*
  nameWithType.vb: HatchPattern.Save(String)
  fullName.vb: netDxf.Entities.HatchPattern.Save(String)
  name.vb: Save(String)
- uid: netDxf.Entities.HatchPattern.Clone
  commentId: M:netDxf.Entities.HatchPattern.Clone
  id: Clone
  parent: netDxf.Entities.HatchPattern
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: HatchPattern.Clone()
  fullName: netDxf.Entities.HatchPattern.Clone()
  type: Method
  source:
    id: Clone
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Entities/HatchPattern.cs
    startLine: 456
  assemblies:
  - netDxf
  namespace: netDxf.Entities
  summary: Creates a new object that is a copy of the current instance.
  example: []
  syntax:
    content: public virtual object Clone()
    return:
      type: System.Object
      description: A new object that is a copy of this instance.
    content.vb: Public Overridable Function Clone() As Object
  overload: netDxf.Entities.HatchPattern.Clone*
  implements:
  - System.ICloneable.Clone
references:
- uid: netDxf.Entities.Hatch
  commentId: T:netDxf.Entities.Hatch
  parent: netDxf.Entities
  href: netDxf.Entities.Hatch.html
  name: Hatch
  nameWithType: Hatch
  fullName: netDxf.Entities.Hatch
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  href: netDxf.html
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Entities
    name: Entities
    href: netDxf.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.Entities.HatchPattern.#ctor*
  commentId: Overload:netDxf.Entities.HatchPattern.#ctor
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern__ctor_System_String_
  name: HatchPattern
  nameWithType: HatchPattern.HatchPattern
  fullName: netDxf.Entities.HatchPattern.HatchPattern
  nameWithType.vb: HatchPattern.New
  fullName.vb: netDxf.Entities.HatchPattern.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.HatchPatternLineDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<HatchPatternLineDefinition>
  nameWithType: IEnumerable<HatchPatternLineDefinition>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.HatchPatternLineDefinition>
  nameWithType.vb: IEnumerable(Of HatchPatternLineDefinition)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.HatchPatternLineDefinition)
  name.vb: IEnumerable(Of HatchPatternLineDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.HatchPatternLineDefinition
    name: HatchPatternLineDefinition
    href: netDxf.Entities.HatchPatternLineDefinition.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.HatchPatternLineDefinition
    name: HatchPatternLineDefinition
    href: netDxf.Entities.HatchPatternLineDefinition.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.Entities.HatchPattern.Solid*
  commentId: Overload:netDxf.Entities.HatchPattern.Solid
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Solid
  name: Solid
  nameWithType: HatchPattern.Solid
  fullName: netDxf.Entities.HatchPattern.Solid
- uid: netDxf.Entities.HatchPattern
  commentId: T:netDxf.Entities.HatchPattern
  parent: netDxf.Entities
  href: netDxf.Entities.HatchPattern.html
  name: HatchPattern
  nameWithType: HatchPattern
  fullName: netDxf.Entities.HatchPattern
- uid: netDxf.Entities.HatchPattern.Line*
  commentId: Overload:netDxf.Entities.HatchPattern.Line
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Line
  name: Line
  nameWithType: HatchPattern.Line
  fullName: netDxf.Entities.HatchPattern.Line
- uid: netDxf.Entities.HatchPattern.Net*
  commentId: Overload:netDxf.Entities.HatchPattern.Net
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Net
  name: Net
  nameWithType: HatchPattern.Net
  fullName: netDxf.Entities.HatchPattern.Net
- uid: netDxf.Entities.HatchPattern.Dots*
  commentId: Overload:netDxf.Entities.HatchPattern.Dots
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Dots
  name: Dots
  nameWithType: HatchPattern.Dots
  fullName: netDxf.Entities.HatchPattern.Dots
- uid: netDxf.Entities.HatchPattern.Name*
  commentId: Overload:netDxf.Entities.HatchPattern.Name
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Name
  name: Name
  nameWithType: HatchPattern.Name
  fullName: netDxf.Entities.HatchPattern.Name
- uid: netDxf.Entities.HatchPattern.Description*
  commentId: Overload:netDxf.Entities.HatchPattern.Description
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Description
  name: Description
  nameWithType: HatchPattern.Description
  fullName: netDxf.Entities.HatchPattern.Description
- uid: netDxf.Entities.HatchPattern.Style*
  commentId: Overload:netDxf.Entities.HatchPattern.Style
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Style
  name: Style
  nameWithType: HatchPattern.Style
  fullName: netDxf.Entities.HatchPattern.Style
- uid: netDxf.Entities.HatchStyle
  commentId: T:netDxf.Entities.HatchStyle
  parent: netDxf.Entities
  href: netDxf.Entities.HatchStyle.html
  name: HatchStyle
  nameWithType: HatchStyle
  fullName: netDxf.Entities.HatchStyle
- uid: netDxf.Entities.HatchPattern.Type*
  commentId: Overload:netDxf.Entities.HatchPattern.Type
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Type
  name: Type
  nameWithType: HatchPattern.Type
  fullName: netDxf.Entities.HatchPattern.Type
- uid: netDxf.Entities.HatchType
  commentId: T:netDxf.Entities.HatchType
  parent: netDxf.Entities
  href: netDxf.Entities.HatchType.html
  name: HatchType
  nameWithType: HatchType
  fullName: netDxf.Entities.HatchType
- uid: netDxf.Entities.HatchPattern.Fill*
  commentId: Overload:netDxf.Entities.HatchPattern.Fill
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Fill
  name: Fill
  nameWithType: HatchPattern.Fill
  fullName: netDxf.Entities.HatchPattern.Fill
- uid: netDxf.Entities.HatchFillType
  commentId: T:netDxf.Entities.HatchFillType
  parent: netDxf.Entities
  href: netDxf.Entities.HatchFillType.html
  name: HatchFillType
  nameWithType: HatchFillType
  fullName: netDxf.Entities.HatchFillType
- uid: netDxf.Entities.HatchPattern.Origin*
  commentId: Overload:netDxf.Entities.HatchPattern.Origin
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Origin
  name: Origin
  nameWithType: HatchPattern.Origin
  fullName: netDxf.Entities.HatchPattern.Origin
- uid: netDxf.Vector2
  commentId: T:netDxf.Vector2
  parent: netDxf
  href: netDxf.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: netDxf.Vector2
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.Entities.HatchPattern.Angle*
  commentId: Overload:netDxf.Entities.HatchPattern.Angle
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Angle
  name: Angle
  nameWithType: HatchPattern.Angle
  fullName: netDxf.Entities.HatchPattern.Angle
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Entities.HatchPattern.Scale*
  commentId: Overload:netDxf.Entities.HatchPattern.Scale
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Scale
  name: Scale
  nameWithType: HatchPattern.Scale
  fullName: netDxf.Entities.HatchPattern.Scale
- uid: netDxf.Entities.HatchPattern.LineDefinitions*
  commentId: Overload:netDxf.Entities.HatchPattern.LineDefinitions
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_LineDefinitions
  name: LineDefinitions
  nameWithType: HatchPattern.LineDefinitions
  fullName: netDxf.Entities.HatchPattern.LineDefinitions
- uid: System.Collections.Generic.List{netDxf.Entities.HatchPatternLineDefinition}
  commentId: T:System.Collections.Generic.List{netDxf.Entities.HatchPatternLineDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<HatchPatternLineDefinition>
  nameWithType: List<HatchPatternLineDefinition>
  fullName: System.Collections.Generic.List<netDxf.Entities.HatchPatternLineDefinition>
  nameWithType.vb: List(Of HatchPatternLineDefinition)
  fullName.vb: System.Collections.Generic.List(Of netDxf.Entities.HatchPatternLineDefinition)
  name.vb: List(Of HatchPatternLineDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.Entities.HatchPatternLineDefinition
    name: HatchPatternLineDefinition
    href: netDxf.Entities.HatchPatternLineDefinition.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.HatchPatternLineDefinition
    name: HatchPatternLineDefinition
    href: netDxf.Entities.HatchPatternLineDefinition.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Entities.HatchPattern.NamesFromFile*
  commentId: Overload:netDxf.Entities.HatchPattern.NamesFromFile
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_NamesFromFile_System_String_
  name: NamesFromFile
  nameWithType: HatchPattern.NamesFromFile
  fullName: netDxf.Entities.HatchPattern.NamesFromFile
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Entities.HatchPattern.Load*
  commentId: Overload:netDxf.Entities.HatchPattern.Load
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Load_System_String_System_String_
  name: Load
  nameWithType: HatchPattern.Load
  fullName: netDxf.Entities.HatchPattern.Load
- uid: netDxf.Entities.HatchPattern.Save*
  commentId: Overload:netDxf.Entities.HatchPattern.Save
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Save_System_String_
  name: Save
  nameWithType: HatchPattern.Save
  fullName: netDxf.Entities.HatchPattern.Save
- uid: netDxf.Entities.HatchPattern.Clone*
  commentId: Overload:netDxf.Entities.HatchPattern.Clone
  href: netDxf.Entities.HatchPattern.html#netDxf_Entities_HatchPattern_Clone
  name: Clone
  nameWithType: HatchPattern.Clone
  fullName: netDxf.Entities.HatchPattern.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
