### YamlMime:ManagedReference
items:
- uid: netDxf.Collections.TableObjects`1
  commentId: T:netDxf.Collections.TableObjects`1
  id: TableObjects`1
  parent: netDxf.Collections
  children:
  - netDxf.Collections.TableObjects`1.#ctor(netDxf.DxfDocument,System.String,System.String)
  - netDxf.Collections.TableObjects`1.Add(`0)
  - netDxf.Collections.TableObjects`1.Clear
  - netDxf.Collections.TableObjects`1.Contains(System.String)
  - netDxf.Collections.TableObjects`1.Contains(`0)
  - netDxf.Collections.TableObjects`1.Count
  - netDxf.Collections.TableObjects`1.GetEnumerator
  - netDxf.Collections.TableObjects`1.GetReferences(System.String)
  - netDxf.Collections.TableObjects`1.GetReferences(`0)
  - netDxf.Collections.TableObjects`1.HasReferences(System.String)
  - netDxf.Collections.TableObjects`1.HasReferences(`0)
  - netDxf.Collections.TableObjects`1.Item(System.String)
  - netDxf.Collections.TableObjects`1.Items
  - netDxf.Collections.TableObjects`1.Names
  - netDxf.Collections.TableObjects`1.Owner
  - netDxf.Collections.TableObjects`1.Remove(System.String)
  - netDxf.Collections.TableObjects`1.Remove(`0)
  - netDxf.Collections.TableObjects`1.TryGetValue(System.String,`0@)
  langs:
  - csharp
  - vb
  name: TableObjects<T>
  nameWithType: TableObjects<T>
  fullName: netDxf.Collections.TableObjects<T>
  type: Class
  source:
    id: TableObjects
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 36
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Represents a list of table objects
  example: []
  syntax:
    content: 'public abstract class TableObjects<T> : DxfObject, IEnumerable<T>, IEnumerable where T : TableObject'
    typeParameters:
    - id: T
      description: <xref href="netDxf.Tables.TableObject?text=TableObject" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public MustInherit Class TableObjects(Of T As TableObject) Inherits DxfObject Implements IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  - netDxf.DxfObject
  derivedClasses:
  - netDxf.Collections.ApplicationRegistries
  - netDxf.Collections.BlockRecords
  - netDxf.Collections.DimensionStyles
  - netDxf.Collections.Groups
  - netDxf.Collections.ImageDefinitions
  - netDxf.Collections.LayerStateManager
  - netDxf.Collections.Layers
  - netDxf.Collections.Layouts
  - netDxf.Collections.Linetypes
  - netDxf.Collections.MLineStyles
  - netDxf.Collections.ShapeStyles
  - netDxf.Collections.TextStyles
  - netDxf.Collections.UCSs
  - netDxf.Collections.UnderlayDgnDefinitions
  - netDxf.Collections.UnderlayDwfDefinitions
  - netDxf.Collections.UnderlayPdfDefinitions
  - netDxf.Collections.VPorts
  - netDxf.Collections.Views
  implements:
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - netDxf.DxfObject.XDataAddAppReg
  - netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.XDataRemoveAppReg
  - netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  - netDxf.DxfObject.CodeName
  - netDxf.DxfObject.Handle
  - netDxf.DxfObject.XData
  - netDxf.DxfObject.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: TableObjects(Of T)
  fullName.vb: netDxf.Collections.TableObjects(Of T)
  name.vb: TableObjects(Of T)
- uid: netDxf.Collections.TableObjects`1.#ctor(netDxf.DxfDocument,System.String,System.String)
  commentId: M:netDxf.Collections.TableObjects`1.#ctor(netDxf.DxfDocument,System.String,System.String)
  id: '#ctor(netDxf.DxfDocument,System.String,System.String)'
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: TableObjects(DxfDocument, string, string)
  nameWithType: TableObjects<T>.TableObjects(DxfDocument, string, string)
  fullName: netDxf.Collections.TableObjects<T>.TableObjects(netDxf.DxfDocument, string, string)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 55
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Initializes a new instance of the <code>TableObjects</code> class.
  example: []
  syntax:
    content: protected TableObjects(DxfDocument document, string codeName, string handle)
    parameters:
    - id: document
      type: netDxf.DxfDocument
      description: DxfDocument associated with this instance.
    - id: codeName
      type: System.String
      description: DxfCode assigned to this instance.
    - id: handle
      type: System.String
      description: Handle assigned to this instance.
    content.vb: Protected Sub New(document As DxfDocument, codeName As String, handle As String)
  overload: netDxf.Collections.TableObjects`1.#ctor*
  nameWithType.vb: TableObjects(Of T).New(DxfDocument, String, String)
  fullName.vb: netDxf.Collections.TableObjects(Of T).New(netDxf.DxfDocument, String, String)
  name.vb: New(DxfDocument, String, String)
- uid: netDxf.Collections.TableObjects`1.Item(System.String)
  commentId: P:netDxf.Collections.TableObjects`1.Item(System.String)
  id: Item(System.String)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: TableObjects<T>.this[string]
  fullName: netDxf.Collections.TableObjects<T>.this[string]
  type: Property
  source:
    id: this[]
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 84
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets a table object from the list by name.
  remarks: Table object names are case insensitive.
  example: []
  syntax:
    content: public T this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: Table object name.
    return:
      type: '{T}'
      description: The table object with the specified name.
    content.vb: Public ReadOnly Default Property this[](name As String) As T
  overload: netDxf.Collections.TableObjects`1.Item*
  nameWithType.vb: TableObjects(Of T).this[](String)
  fullName.vb: netDxf.Collections.TableObjects(Of T).this[](String)
  name.vb: this[](String)
- uid: netDxf.Collections.TableObjects`1.Items
  commentId: P:netDxf.Collections.TableObjects`1.Items
  id: Items
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: TableObjects<T>.Items
  fullName: netDxf.Collections.TableObjects<T>.Items
  type: Property
  source:
    id: Items
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 92
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the table object list.
  example: []
  syntax:
    content: public ICollection<T> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{T}}
    content.vb: Public ReadOnly Property Items As ICollection(Of T)
  overload: netDxf.Collections.TableObjects`1.Items*
  nameWithType.vb: TableObjects(Of T).Items
  fullName.vb: netDxf.Collections.TableObjects(Of T).Items
- uid: netDxf.Collections.TableObjects`1.Names
  commentId: P:netDxf.Collections.TableObjects`1.Names
  id: Names
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Names
  nameWithType: TableObjects<T>.Names
  fullName: netDxf.Collections.TableObjects<T>.Names
  type: Property
  source:
    id: Names
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 100
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the ObjectTable names.
  example: []
  syntax:
    content: public ICollection<string> Names { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public ReadOnly Property Names As ICollection(Of String)
  overload: netDxf.Collections.TableObjects`1.Names*
  nameWithType.vb: TableObjects(Of T).Names
  fullName.vb: netDxf.Collections.TableObjects(Of T).Names
- uid: netDxf.Collections.TableObjects`1.Count
  commentId: P:netDxf.Collections.TableObjects`1.Count
  id: Count
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TableObjects<T>.Count
  fullName: netDxf.Collections.TableObjects<T>.Count
  type: Property
  source:
    id: Count
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 108
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the number of table objects.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: netDxf.Collections.TableObjects`1.Count*
  nameWithType.vb: TableObjects(Of T).Count
  fullName.vb: netDxf.Collections.TableObjects(Of T).Count
- uid: netDxf.Collections.TableObjects`1.Owner
  commentId: P:netDxf.Collections.TableObjects`1.Owner
  id: Owner
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: TableObjects<T>.Owner
  fullName: netDxf.Collections.TableObjects<T>.Owner
  type: Property
  source:
    id: Owner
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 116
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the owner of the actual DXF object.
  example: []
  syntax:
    content: public DxfDocument Owner { get; }
    parameters: []
    return:
      type: netDxf.DxfDocument
    content.vb: Public Property Owner As DxfDocument
  overload: netDxf.Collections.TableObjects`1.Owner*
  nameWithType.vb: TableObjects(Of T).Owner
  fullName.vb: netDxf.Collections.TableObjects(Of T).Owner
- uid: netDxf.Collections.TableObjects`1.HasReferences(System.String)
  commentId: M:netDxf.Collections.TableObjects`1.HasReferences(System.String)
  id: HasReferences(System.String)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: HasReferences(string)
  nameWithType: TableObjects<T>.HasReferences(string)
  fullName: netDxf.Collections.TableObjects<T>.HasReferences(string)
  type: Method
  source:
    id: HasReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 147
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Checks if the specified TableObject has been referenced by other DxfObjects.
  example: []
  syntax:
    content: public bool HasReferences(string name)
    parameters:
    - id: name
      type: System.String
      description: Table object name.
    return:
      type: System.Boolean
      description: Returns true if the specified TableObject has been referenced by other DxfObjects, false otherwise.
    content.vb: Public Function HasReferences(name As String) As Boolean
  overload: netDxf.Collections.TableObjects`1.HasReferences*
  nameWithType.vb: TableObjects(Of T).HasReferences(String)
  fullName.vb: netDxf.Collections.TableObjects(Of T).HasReferences(String)
  name.vb: HasReferences(String)
- uid: netDxf.Collections.TableObjects`1.HasReferences(`0)
  commentId: M:netDxf.Collections.TableObjects`1.HasReferences(`0)
  id: HasReferences(`0)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: HasReferences(T)
  nameWithType: TableObjects<T>.HasReferences(T)
  fullName: netDxf.Collections.TableObjects<T>.HasReferences(T)
  type: Method
  source:
    id: HasReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 159
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Checks if the specified TableObject has been referenced by other DxfObjects.
  example: []
  syntax:
    content: public bool HasReferences(T item)
    parameters:
    - id: item
      type: '{T}'
      description: Table object.
    return:
      type: System.Boolean
      description: Returns true if the specified TableObject has been referenced by other DxfObjects, false otherwise.
    content.vb: Public Function HasReferences(item As T) As Boolean
  overload: netDxf.Collections.TableObjects`1.HasReferences*
  nameWithType.vb: TableObjects(Of T).HasReferences(T)
  fullName.vb: netDxf.Collections.TableObjects(Of T).HasReferences(T)
- uid: netDxf.Collections.TableObjects`1.GetReferences(System.String)
  commentId: M:netDxf.Collections.TableObjects`1.GetReferences(System.String)
  id: GetReferences(System.String)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: GetReferences(string)
  nameWithType: TableObjects<T>.GetReferences(string)
  fullName: netDxf.Collections.TableObjects<T>.GetReferences(string)
  type: Method
  source:
    id: GetReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 173
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the <xref href="netDxf.DxfObject?text=dxf+objects" data-throw-if-not-resolved="false"></xref> referenced by a T.
  remarks: >-
    If there is no table object with the specified name in the list the method an empty list.<br />

    The Groups collection method GetReferences will always return an empty list since there are no DxfObjects that references them.
  example: []
  syntax:
    content: public List<DxfObjectReference> GetReferences(string name)
    parameters:
    - id: name
      type: System.String
      description: Table object name.
    return:
      type: System.Collections.Generic.List{netDxf.DxfObjectReference}
      description: The list of DxfObjects that reference the specified table object.
    content.vb: Public Function GetReferences(name As String) As List(Of DxfObjectReference)
  overload: netDxf.Collections.TableObjects`1.GetReferences*
  nameWithType.vb: TableObjects(Of T).GetReferences(String)
  fullName.vb: netDxf.Collections.TableObjects(Of T).GetReferences(String)
  name.vb: GetReferences(String)
- uid: netDxf.Collections.TableObjects`1.GetReferences(`0)
  commentId: M:netDxf.Collections.TableObjects`1.GetReferences(`0)
  id: GetReferences(`0)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: GetReferences(T)
  nameWithType: TableObjects<T>.GetReferences(T)
  fullName: netDxf.Collections.TableObjects<T>.GetReferences(T)
  type: Method
  source:
    id: GetReferences
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 187
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the <xref href="netDxf.DxfObject?text=dxf+objects" data-throw-if-not-resolved="false"></xref> referenced by a T.
  remarks: >-
    If there is no table object with the specified name in the list the method an empty list.<br />

    The Groups collection method GetReferences will always return an empty list since there are no DxfObjects that references them.
  example: []
  syntax:
    content: public List<DxfObjectReference> GetReferences(T item)
    parameters:
    - id: item
      type: '{T}'
      description: Table object.
    return:
      type: System.Collections.Generic.List{netDxf.DxfObjectReference}
      description: The list of DxfObjects that reference the specified table object.
    content.vb: Public Function GetReferences(item As T) As List(Of DxfObjectReference)
  overload: netDxf.Collections.TableObjects`1.GetReferences*
  nameWithType.vb: TableObjects(Of T).GetReferences(T)
  fullName.vb: netDxf.Collections.TableObjects(Of T).GetReferences(T)
- uid: netDxf.Collections.TableObjects`1.Contains(System.String)
  commentId: M:netDxf.Collections.TableObjects`1.Contains(System.String)
  id: Contains(System.String)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Contains(string)
  nameWithType: TableObjects<T>.Contains(string)
  fullName: netDxf.Collections.TableObjects<T>.Contains(string)
  type: Method
  source:
    id: Contains
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 197
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Checks if a table object already exists in the list.
  example: []
  syntax:
    content: public bool Contains(string name)
    parameters:
    - id: name
      type: System.String
      description: Table object name.
    return:
      type: System.Boolean
      description: True is a table object exists with the specified name, false otherwise.
    content.vb: Public Function Contains(name As String) As Boolean
  overload: netDxf.Collections.TableObjects`1.Contains*
  nameWithType.vb: TableObjects(Of T).Contains(String)
  fullName.vb: netDxf.Collections.TableObjects(Of T).Contains(String)
  name.vb: Contains(String)
- uid: netDxf.Collections.TableObjects`1.Contains(`0)
  commentId: M:netDxf.Collections.TableObjects`1.Contains(`0)
  id: Contains(`0)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: TableObjects<T>.Contains(T)
  fullName: netDxf.Collections.TableObjects<T>.Contains(T)
  type: Method
  source:
    id: Contains
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 207
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Checks if a table object already exists in the list.
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: Table object.
    return:
      type: System.Boolean
      description: True is a table object exists, false otherwise.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: netDxf.Collections.TableObjects`1.Contains*
  nameWithType.vb: TableObjects(Of T).Contains(T)
  fullName.vb: netDxf.Collections.TableObjects(Of T).Contains(T)
- uid: netDxf.Collections.TableObjects`1.TryGetValue(System.String,`0@)
  commentId: M:netDxf.Collections.TableObjects`1.TryGetValue(System.String,`0@)
  id: TryGetValue(System.String,`0@)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: TryGetValue(string, out T)
  nameWithType: TableObjects<T>.TryGetValue(string, out T)
  fullName: netDxf.Collections.TableObjects<T>.TryGetValue(string, out T)
  type: Method
  source:
    id: TryGetValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 219
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Gets the table object associated with the specified name.
  example: []
  syntax:
    content: public bool TryGetValue(string name, out T item)
    parameters:
    - id: name
      type: System.String
      description: The name of the table object to get.
    - id: item
      type: '{T}'
      description: >-
        When this method returns, contains the table object associated with the specified name, if the key is found;
            otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: True if the table contains an element with the specified name; otherwise, false.
    content.vb: Public Function TryGetValue(name As String, item As T) As Boolean
  overload: netDxf.Collections.TableObjects`1.TryGetValue*
  nameWithType.vb: TableObjects(Of T).TryGetValue(String, T)
  fullName.vb: netDxf.Collections.TableObjects(Of T).TryGetValue(String, T)
  name.vb: TryGetValue(String, T)
- uid: netDxf.Collections.TableObjects`1.Add(`0)
  commentId: M:netDxf.Collections.TableObjects`1.Add(`0)
  id: Add(`0)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: TableObjects<T>.Add(T)
  fullName: netDxf.Collections.TableObjects<T>.Add(T)
  type: Method
  source:
    id: Add
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 232
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Adds a table object to the list.
  example: []
  syntax:
    content: public T Add(T item)
    parameters:
    - id: item
      type: '{T}'
      description: <xref href="netDxf.Tables.TableObject?text=Table+object" data-throw-if-not-resolved="false"></xref> to add to the list.
    return:
      type: '{T}'
      description: >-
        If a table object already exists with the same name as the instance that is being added the method returns the existing table object,

        if not it will return the new table object.
    content.vb: Public Function Add(item As T) As T
  overload: netDxf.Collections.TableObjects`1.Add*
  nameWithType.vb: TableObjects(Of T).Add(T)
  fullName.vb: netDxf.Collections.TableObjects(Of T).Add(T)
- uid: netDxf.Collections.TableObjects`1.Remove(System.String)
  commentId: M:netDxf.Collections.TableObjects`1.Remove(System.String)
  id: Remove(System.String)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: TableObjects<T>.Remove(string)
  fullName: netDxf.Collections.TableObjects<T>.Remove(string)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 250
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes a table object.
  remarks: Reserved table objects or any other referenced by objects cannot be removed.
  example: []
  syntax:
    content: public abstract bool Remove(string name)
    parameters:
    - id: name
      type: System.String
      description: Table object name to remove from the document.
    return:
      type: System.Boolean
      description: True is the table object has been successfully removed, or false otherwise.
    content.vb: Public MustOverride Function Remove(name As String) As Boolean
  overload: netDxf.Collections.TableObjects`1.Remove*
  nameWithType.vb: TableObjects(Of T).Remove(String)
  fullName.vb: netDxf.Collections.TableObjects(Of T).Remove(String)
  name.vb: Remove(String)
- uid: netDxf.Collections.TableObjects`1.Remove(`0)
  commentId: M:netDxf.Collections.TableObjects`1.Remove(`0)
  id: Remove(`0)
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: TableObjects<T>.Remove(T)
  fullName: netDxf.Collections.TableObjects<T>.Remove(T)
  type: Method
  source:
    id: Remove
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 258
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes a table object.
  remarks: Reserved table objects or any other referenced by objects cannot be removed.
  example: []
  syntax:
    content: public abstract bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: <xref href="netDxf.Tables.TableObject?text=Table+object" data-throw-if-not-resolved="false"></xref> to remove from the document.
    return:
      type: System.Boolean
      description: True is the table object has been successfully removed, or false otherwise.
    content.vb: Public MustOverride Function Remove(item As T) As Boolean
  overload: netDxf.Collections.TableObjects`1.Remove*
  nameWithType.vb: TableObjects(Of T).Remove(T)
  fullName.vb: netDxf.Collections.TableObjects(Of T).Remove(T)
- uid: netDxf.Collections.TableObjects`1.Clear
  commentId: M:netDxf.Collections.TableObjects`1.Clear
  id: Clear
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: TableObjects<T>.Clear()
  fullName: netDxf.Collections.TableObjects<T>.Clear()
  type: Method
  source:
    id: Clear
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 263
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Removes all table objects that are not reserved and have no references.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: netDxf.Collections.TableObjects`1.Clear*
  nameWithType.vb: TableObjects(Of T).Clear()
  fullName.vb: netDxf.Collections.TableObjects(Of T).Clear()
- uid: netDxf.Collections.TableObjects`1.GetEnumerator
  commentId: M:netDxf.Collections.TableObjects`1.GetEnumerator
  id: GetEnumerator
  parent: netDxf.Collections.TableObjects`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TableObjects<T>.GetEnumerator()
  fullName: netDxf.Collections.TableObjects<T>.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/Collections/TableObjects.cs
    startLine: 281
  assemblies:
  - netDxf
  namespace: netDxf.Collections
  summary: Returns an enumerator that iterates through the table object collection.
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: An enumerator for the table object collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: netDxf.Collections.TableObjects`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: TableObjects(Of T).GetEnumerator()
  fullName.vb: netDxf.Collections.TableObjects(Of T).GetEnumerator()
references:
- uid: netDxf.Tables.TableObject
  commentId: T:netDxf.Tables.TableObject
  parent: netDxf.Tables
  href: netDxf.Tables.TableObject.html
  name: TableObject
  nameWithType: TableObject
  fullName: netDxf.Tables.TableObject
- uid: netDxf.Collections
  commentId: N:netDxf.Collections
  href: netDxf.html
  name: netDxf.Collections
  nameWithType: netDxf.Collections
  fullName: netDxf.Collections
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Collections
    name: Collections
    href: netDxf.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  href: netDxf.DxfObject.html
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: netDxf.DxfObject.XDataAddAppReg
  commentId: E:netDxf.DxfObject.XDataAddAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataAddAppReg
  name: XDataAddAppReg
  nameWithType: DxfObject.XDataAddAppReg
  fullName: netDxf.DxfObject.XDataAddAppReg
- uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataAddAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataAddAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataAddAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataAddAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataAddAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.XDataRemoveAppReg
  commentId: E:netDxf.DxfObject.XDataRemoveAppReg
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XDataRemoveAppReg
  name: XDataRemoveAppReg
  nameWithType: DxfObject.XDataRemoveAppReg
  fullName: netDxf.DxfObject.XDataRemoveAppReg
- uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  commentId: M:netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  name: OnXDataRemoveAppRegEvent(ApplicationRegistry)
  nameWithType: DxfObject.OnXDataRemoveAppRegEvent(ApplicationRegistry)
  fullName: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
  spec.csharp:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.OnXDataRemoveAppRegEvent(netDxf.Tables.ApplicationRegistry)
    name: OnXDataRemoveAppRegEvent
    href: netDxf.DxfObject.html#netDxf_DxfObject_OnXDataRemoveAppRegEvent_netDxf_Tables_ApplicationRegistry_
  - name: (
  - uid: netDxf.Tables.ApplicationRegistry
    name: ApplicationRegistry
    href: netDxf.Tables.ApplicationRegistry.html
  - name: )
- uid: netDxf.DxfObject.CodeName
  commentId: P:netDxf.DxfObject.CodeName
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_CodeName
  name: CodeName
  nameWithType: DxfObject.CodeName
  fullName: netDxf.DxfObject.CodeName
- uid: netDxf.DxfObject.Handle
  commentId: P:netDxf.DxfObject.Handle
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_Handle
  name: Handle
  nameWithType: DxfObject.Handle
  fullName: netDxf.DxfObject.Handle
- uid: netDxf.DxfObject.XData
  commentId: P:netDxf.DxfObject.XData
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_XData
  name: XData
  nameWithType: DxfObject.XData
  fullName: netDxf.DxfObject.XData
- uid: netDxf.DxfObject.ToString
  commentId: M:netDxf.DxfObject.ToString
  parent: netDxf.DxfObject
  href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  name: ToString()
  nameWithType: DxfObject.ToString()
  fullName: netDxf.DxfObject.ToString()
  spec.csharp:
  - uid: netDxf.DxfObject.ToString
    name: ToString
    href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: netDxf.DxfObject.ToString
    name: ToString
    href: netDxf.DxfObject.html#netDxf_DxfObject_ToString
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  href: netDxf.html
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.Tables
    name: Tables
    href: netDxf.Tables.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: netDxf.Collections.TableObjects`1.#ctor*
  commentId: Overload:netDxf.Collections.TableObjects`1.#ctor
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1__ctor_netDxf_DxfDocument_System_String_System_String_
  name: TableObjects
  nameWithType: TableObjects<T>.TableObjects
  fullName: netDxf.Collections.TableObjects<T>.TableObjects
  nameWithType.vb: TableObjects(Of T).New
  fullName.vb: netDxf.Collections.TableObjects(Of T).New
  name.vb: New
- uid: netDxf.DxfDocument
  commentId: T:netDxf.DxfDocument
  parent: netDxf
  href: netDxf.DxfDocument.html
  name: DxfDocument
  nameWithType: DxfDocument
  fullName: netDxf.DxfDocument
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Collections.TableObjects`1.Item*
  commentId: Overload:netDxf.Collections.TableObjects`1.Item
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Item_System_String_
  name: this
  nameWithType: TableObjects<T>.this
  fullName: netDxf.Collections.TableObjects<T>.this
  nameWithType.vb: TableObjects(Of T).this[]
  fullName.vb: netDxf.Collections.TableObjects(Of T).this[]
  name.vb: this[]
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: netDxf.Collections.TableObjects`1.Items*
  commentId: Overload:netDxf.Collections.TableObjects`1.Items
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Items
  name: Items
  nameWithType: TableObjects<T>.Items
  fullName: netDxf.Collections.TableObjects<T>.Items
  nameWithType.vb: TableObjects(Of T).Items
  fullName.vb: netDxf.Collections.TableObjects(Of T).Items
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Collections.TableObjects`1.Names*
  commentId: Overload:netDxf.Collections.TableObjects`1.Names
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Names
  name: Names
  nameWithType: TableObjects<T>.Names
  fullName: netDxf.Collections.TableObjects<T>.Names
  nameWithType.vb: TableObjects(Of T).Names
  fullName.vb: netDxf.Collections.TableObjects(Of T).Names
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: netDxf.Collections.TableObjects`1.Count*
  commentId: Overload:netDxf.Collections.TableObjects`1.Count
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Count
  name: Count
  nameWithType: TableObjects<T>.Count
  fullName: netDxf.Collections.TableObjects<T>.Count
  nameWithType.vb: TableObjects(Of T).Count
  fullName.vb: netDxf.Collections.TableObjects(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.Collections.TableObjects`1.Owner*
  commentId: Overload:netDxf.Collections.TableObjects`1.Owner
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Owner
  name: Owner
  nameWithType: TableObjects<T>.Owner
  fullName: netDxf.Collections.TableObjects<T>.Owner
  nameWithType.vb: TableObjects(Of T).Owner
  fullName.vb: netDxf.Collections.TableObjects(Of T).Owner
- uid: netDxf.Collections.TableObjects`1.HasReferences*
  commentId: Overload:netDxf.Collections.TableObjects`1.HasReferences
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_HasReferences_System_String_
  name: HasReferences
  nameWithType: TableObjects<T>.HasReferences
  fullName: netDxf.Collections.TableObjects<T>.HasReferences
  nameWithType.vb: TableObjects(Of T).HasReferences
  fullName.vb: netDxf.Collections.TableObjects(Of T).HasReferences
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: netDxf.Collections.TableObjects`1.GetReferences*
  commentId: Overload:netDxf.Collections.TableObjects`1.GetReferences
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_GetReferences_System_String_
  name: GetReferences
  nameWithType: TableObjects<T>.GetReferences
  fullName: netDxf.Collections.TableObjects<T>.GetReferences
  nameWithType.vb: TableObjects(Of T).GetReferences
  fullName.vb: netDxf.Collections.TableObjects(Of T).GetReferences
- uid: System.Collections.Generic.List{netDxf.DxfObjectReference}
  commentId: T:System.Collections.Generic.List{netDxf.DxfObjectReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<DxfObjectReference>
  nameWithType: List<DxfObjectReference>
  fullName: System.Collections.Generic.List<netDxf.DxfObjectReference>
  nameWithType.vb: List(Of DxfObjectReference)
  fullName.vb: System.Collections.Generic.List(Of netDxf.DxfObjectReference)
  name.vb: List(Of DxfObjectReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: netDxf.DxfObjectReference
    name: DxfObjectReference
    href: netDxf.DxfObjectReference.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.DxfObjectReference
    name: DxfObjectReference
    href: netDxf.DxfObjectReference.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.Collections.TableObjects`1.Contains*
  commentId: Overload:netDxf.Collections.TableObjects`1.Contains
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Contains_System_String_
  name: Contains
  nameWithType: TableObjects<T>.Contains
  fullName: netDxf.Collections.TableObjects<T>.Contains
  nameWithType.vb: TableObjects(Of T).Contains
  fullName.vb: netDxf.Collections.TableObjects(Of T).Contains
- uid: netDxf.Collections.TableObjects`1.TryGetValue*
  commentId: Overload:netDxf.Collections.TableObjects`1.TryGetValue
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_TryGetValue_System_String__0__
  name: TryGetValue
  nameWithType: TableObjects<T>.TryGetValue
  fullName: netDxf.Collections.TableObjects<T>.TryGetValue
  nameWithType.vb: TableObjects(Of T).TryGetValue
  fullName.vb: netDxf.Collections.TableObjects(Of T).TryGetValue
- uid: netDxf.Collections.TableObjects`1.Add*
  commentId: Overload:netDxf.Collections.TableObjects`1.Add
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Add__0_
  name: Add
  nameWithType: TableObjects<T>.Add
  fullName: netDxf.Collections.TableObjects<T>.Add
  nameWithType.vb: TableObjects(Of T).Add
  fullName.vb: netDxf.Collections.TableObjects(Of T).Add
- uid: netDxf.Collections.TableObjects`1.Remove*
  commentId: Overload:netDxf.Collections.TableObjects`1.Remove
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Remove_System_String_
  name: Remove
  nameWithType: TableObjects<T>.Remove
  fullName: netDxf.Collections.TableObjects<T>.Remove
  nameWithType.vb: TableObjects(Of T).Remove
  fullName.vb: netDxf.Collections.TableObjects(Of T).Remove
- uid: netDxf.Collections.TableObjects`1.Clear*
  commentId: Overload:netDxf.Collections.TableObjects`1.Clear
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_Clear
  name: Clear
  nameWithType: TableObjects<T>.Clear
  fullName: netDxf.Collections.TableObjects<T>.Clear
  nameWithType.vb: TableObjects(Of T).Clear
  fullName.vb: netDxf.Collections.TableObjects(Of T).Clear
- uid: netDxf.Collections.TableObjects`1.GetEnumerator*
  commentId: Overload:netDxf.Collections.TableObjects`1.GetEnumerator
  href: netDxf.Collections.TableObjects-1.html#netDxf_Collections_TableObjects_1_GetEnumerator
  name: GetEnumerator
  nameWithType: TableObjects<T>.GetEnumerator
  fullName: netDxf.Collections.TableObjects<T>.GetEnumerator
  nameWithType.vb: TableObjects(Of T).GetEnumerator
  fullName.vb: netDxf.Collections.TableObjects(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
