### YamlMime:ManagedReference
items:
- uid: netDxf.GTE.BSplineCurveFit
  commentId: T:netDxf.GTE.BSplineCurveFit
  id: BSplineCurveFit
  parent: netDxf.GTE
  children:
  - netDxf.GTE.BSplineCurveFit.#ctor(netDxf.Vector3[],System.Int32,System.Int32)
  - netDxf.GTE.BSplineCurveFit.BasisFunction
  - netDxf.GTE.BSplineCurveFit.ControlData
  - netDxf.GTE.BSplineCurveFit.Degree
  - netDxf.GTE.BSplineCurveFit.Evaluate(System.Double,System.Int32,netDxf.Vector3@)
  - netDxf.GTE.BSplineCurveFit.GetPosition(System.Double)
  - netDxf.GTE.BSplineCurveFit.NumControls
  - netDxf.GTE.BSplineCurveFit.NumSamples
  - netDxf.GTE.BSplineCurveFit.SampleData
  langs:
  - csharp
  - vb
  name: BSplineCurveFit
  nameWithType: BSplineCurveFit
  fullName: netDxf.GTE.BSplineCurveFit
  type: Class
  source:
    id: BSplineCurveFit
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 40
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public class BSplineCurveFit
    content.vb: Public Class BSplineCurveFit
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: netDxf.GTE.BSplineCurveFit.#ctor(netDxf.Vector3[],System.Int32,System.Int32)
  commentId: M:netDxf.GTE.BSplineCurveFit.#ctor(netDxf.Vector3[],System.Int32,System.Int32)
  id: '#ctor(netDxf.Vector3[],System.Int32,System.Int32)'
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: BSplineCurveFit(Vector3[], int, int)
  nameWithType: BSplineCurveFit.BSplineCurveFit(Vector3[], int, int)
  fullName: netDxf.GTE.BSplineCurveFit.BSplineCurveFit(netDxf.Vector3[], int, int)
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 56
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public BSplineCurveFit(Vector3[] sampleData, int degree, int numControls)
    parameters:
    - id: sampleData
      type: netDxf.Vector3[]
    - id: degree
      type: System.Int32
    - id: numControls
      type: System.Int32
    content.vb: Public Sub New(sampleData As Vector3(), degree As Integer, numControls As Integer)
  overload: netDxf.GTE.BSplineCurveFit.#ctor*
  nameWithType.vb: BSplineCurveFit.New(Vector3(), Integer, Integer)
  fullName.vb: netDxf.GTE.BSplineCurveFit.New(netDxf.Vector3(), Integer, Integer)
  name.vb: New(Vector3(), Integer, Integer)
- uid: netDxf.GTE.BSplineCurveFit.NumSamples
  commentId: P:netDxf.GTE.BSplineCurveFit.NumSamples
  id: NumSamples
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: NumSamples
  nameWithType: BSplineCurveFit.NumSamples
  fullName: netDxf.GTE.BSplineCurveFit.NumSamples
  type: Property
  source:
    id: NumSamples
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 187
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public int NumSamples { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumSamples As Integer
  overload: netDxf.GTE.BSplineCurveFit.NumSamples*
- uid: netDxf.GTE.BSplineCurveFit.SampleData
  commentId: P:netDxf.GTE.BSplineCurveFit.SampleData
  id: SampleData
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: SampleData
  nameWithType: BSplineCurveFit.SampleData
  fullName: netDxf.GTE.BSplineCurveFit.SampleData
  type: Property
  source:
    id: SampleData
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 192
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public Vector3[] SampleData { get; }
    parameters: []
    return:
      type: netDxf.Vector3[]
    content.vb: Public ReadOnly Property SampleData As Vector3()
  overload: netDxf.GTE.BSplineCurveFit.SampleData*
- uid: netDxf.GTE.BSplineCurveFit.Degree
  commentId: P:netDxf.GTE.BSplineCurveFit.Degree
  id: Degree
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: Degree
  nameWithType: BSplineCurveFit.Degree
  fullName: netDxf.GTE.BSplineCurveFit.Degree
  type: Property
  source:
    id: Degree
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 198
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public int Degree { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Degree As Integer
  overload: netDxf.GTE.BSplineCurveFit.Degree*
- uid: netDxf.GTE.BSplineCurveFit.NumControls
  commentId: P:netDxf.GTE.BSplineCurveFit.NumControls
  id: NumControls
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: NumControls
  nameWithType: BSplineCurveFit.NumControls
  fullName: netDxf.GTE.BSplineCurveFit.NumControls
  type: Property
  source:
    id: NumControls
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 203
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public int NumControls { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumControls As Integer
  overload: netDxf.GTE.BSplineCurveFit.NumControls*
- uid: netDxf.GTE.BSplineCurveFit.ControlData
  commentId: P:netDxf.GTE.BSplineCurveFit.ControlData
  id: ControlData
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: ControlData
  nameWithType: BSplineCurveFit.ControlData
  fullName: netDxf.GTE.BSplineCurveFit.ControlData
  type: Property
  source:
    id: ControlData
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 208
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public Vector3[] ControlData { get; }
    parameters: []
    return:
      type: netDxf.Vector3[]
    content.vb: Public ReadOnly Property ControlData As Vector3()
  overload: netDxf.GTE.BSplineCurveFit.ControlData*
- uid: netDxf.GTE.BSplineCurveFit.BasisFunction
  commentId: P:netDxf.GTE.BSplineCurveFit.BasisFunction
  id: BasisFunction
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: BasisFunction
  nameWithType: BSplineCurveFit.BasisFunction
  fullName: netDxf.GTE.BSplineCurveFit.BasisFunction
  type: Property
  source:
    id: BasisFunction
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 213
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public BasisFunction BasisFunction { get; }
    parameters: []
    return:
      type: netDxf.GTE.BasisFunction
    content.vb: Public ReadOnly Property BasisFunction As BasisFunction
  overload: netDxf.GTE.BSplineCurveFit.BasisFunction*
- uid: netDxf.GTE.BSplineCurveFit.Evaluate(System.Double,System.Int32,netDxf.Vector3@)
  commentId: M:netDxf.GTE.BSplineCurveFit.Evaluate(System.Double,System.Int32,netDxf.Vector3@)
  id: Evaluate(System.Double,System.Int32,netDxf.Vector3@)
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: Evaluate(double, int, out Vector3)
  nameWithType: BSplineCurveFit.Evaluate(double, int, out Vector3)
  fullName: netDxf.GTE.BSplineCurveFit.Evaluate(double, int, out netDxf.Vector3)
  type: Method
  source:
    id: Evaluate
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 222
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public void Evaluate(double t, int order, out Vector3 value)
    parameters:
    - id: t
      type: System.Double
    - id: order
      type: System.Int32
    - id: value
      type: netDxf.Vector3
    content.vb: Public Sub Evaluate(t As Double, order As Integer, value As Vector3)
  overload: netDxf.GTE.BSplineCurveFit.Evaluate*
  nameWithType.vb: BSplineCurveFit.Evaluate(Double, Integer, Vector3)
  fullName.vb: netDxf.GTE.BSplineCurveFit.Evaluate(Double, Integer, netDxf.Vector3)
  name.vb: Evaluate(Double, Integer, Vector3)
- uid: netDxf.GTE.BSplineCurveFit.GetPosition(System.Double)
  commentId: M:netDxf.GTE.BSplineCurveFit.GetPosition(System.Double)
  id: GetPosition(System.Double)
  parent: netDxf.GTE.BSplineCurveFit
  langs:
  - csharp
  - vb
  name: GetPosition(double)
  nameWithType: BSplineCurveFit.GetPosition(double)
  fullName: netDxf.GTE.BSplineCurveFit.GetPosition(double)
  type: Method
  source:
    id: GetPosition
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/GTE/BSplineCurveFit.cs
    startLine: 238
  assemblies:
  - netDxf
  namespace: netDxf.GTE
  syntax:
    content: public Vector3 GetPosition(double t)
    parameters:
    - id: t
      type: System.Double
    return:
      type: netDxf.Vector3
    content.vb: Public Function GetPosition(t As Double) As Vector3
  overload: netDxf.GTE.BSplineCurveFit.GetPosition*
  nameWithType.vb: BSplineCurveFit.GetPosition(Double)
  fullName.vb: netDxf.GTE.BSplineCurveFit.GetPosition(Double)
  name.vb: GetPosition(Double)
references:
- uid: netDxf.GTE
  commentId: N:netDxf.GTE
  href: netDxf.html
  name: netDxf.GTE
  nameWithType: netDxf.GTE
  fullName: netDxf.GTE
  spec.csharp:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.GTE
    name: GTE
    href: netDxf.GTE.html
  spec.vb:
  - uid: netDxf
    name: netDxf
    href: netDxf.html
  - name: .
  - uid: netDxf.GTE
    name: GTE
    href: netDxf.GTE.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.GTE.BSplineCurveFit.#ctor*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.#ctor
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit__ctor_netDxf_Vector3___System_Int32_System_Int32_
  name: BSplineCurveFit
  nameWithType: BSplineCurveFit.BSplineCurveFit
  fullName: netDxf.GTE.BSplineCurveFit.BSplineCurveFit
  nameWithType.vb: BSplineCurveFit.New
  fullName.vb: netDxf.GTE.BSplineCurveFit.New
  name.vb: New
- uid: netDxf.Vector3[]
  isExternal: true
  href: netDxf.Vector3.html
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: netDxf.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: netDxf.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: netDxf.Vector3
    name: Vector3
    href: netDxf.Vector3.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: netDxf.GTE.BSplineCurveFit.NumSamples*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.NumSamples
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit_NumSamples
  name: NumSamples
  nameWithType: BSplineCurveFit.NumSamples
  fullName: netDxf.GTE.BSplineCurveFit.NumSamples
- uid: netDxf.GTE.BSplineCurveFit.SampleData*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.SampleData
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit_SampleData
  name: SampleData
  nameWithType: BSplineCurveFit.SampleData
  fullName: netDxf.GTE.BSplineCurveFit.SampleData
- uid: netDxf.GTE.BSplineCurveFit.Degree*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.Degree
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit_Degree
  name: Degree
  nameWithType: BSplineCurveFit.Degree
  fullName: netDxf.GTE.BSplineCurveFit.Degree
- uid: netDxf.GTE.BSplineCurveFit.NumControls*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.NumControls
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit_NumControls
  name: NumControls
  nameWithType: BSplineCurveFit.NumControls
  fullName: netDxf.GTE.BSplineCurveFit.NumControls
- uid: netDxf.GTE.BSplineCurveFit.ControlData*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.ControlData
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit_ControlData
  name: ControlData
  nameWithType: BSplineCurveFit.ControlData
  fullName: netDxf.GTE.BSplineCurveFit.ControlData
- uid: netDxf.GTE.BSplineCurveFit.BasisFunction*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.BasisFunction
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit_BasisFunction
  name: BasisFunction
  nameWithType: BSplineCurveFit.BasisFunction
  fullName: netDxf.GTE.BSplineCurveFit.BasisFunction
- uid: netDxf.GTE.BasisFunction
  commentId: T:netDxf.GTE.BasisFunction
  parent: netDxf.GTE
  href: netDxf.GTE.BasisFunction.html
  name: BasisFunction
  nameWithType: BasisFunction
  fullName: netDxf.GTE.BasisFunction
- uid: netDxf.GTE.BSplineCurveFit.Evaluate*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.Evaluate
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit_Evaluate_System_Double_System_Int32_netDxf_Vector3__
  name: Evaluate
  nameWithType: BSplineCurveFit.Evaluate
  fullName: netDxf.GTE.BSplineCurveFit.Evaluate
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  href: netDxf.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.GTE.BSplineCurveFit.GetPosition*
  commentId: Overload:netDxf.GTE.BSplineCurveFit.GetPosition
  href: netDxf.GTE.BSplineCurveFit.html#netDxf_GTE_BSplineCurveFit_GetPosition_System_Double_
  name: GetPosition
  nameWithType: BSplineCurveFit.GetPosition
  fullName: netDxf.GTE.BSplineCurveFit.GetPosition
