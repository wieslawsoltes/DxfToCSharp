### YamlMime:ManagedReference
items:
- uid: netDxf.StringEnum`1
  commentId: T:netDxf.StringEnum`1
  id: StringEnum`1
  parent: netDxf
  children:
  - netDxf.StringEnum`1.#ctor
  - netDxf.StringEnum`1.EnumType
  - netDxf.StringEnum`1.GetStringValue(`0)
  - netDxf.StringEnum`1.GetStringValues
  - netDxf.StringEnum`1.GetValues
  - netDxf.StringEnum`1.IsStringDefined(System.String)
  - netDxf.StringEnum`1.IsStringDefined(System.String,System.StringComparison)
  - netDxf.StringEnum`1.Parse(System.String)
  - netDxf.StringEnum`1.Parse(System.String,System.StringComparison)
  langs:
  - csharp
  - vb
  name: StringEnum<T>
  nameWithType: StringEnum<T>
  fullName: netDxf.StringEnum<T>
  type: Class
  source:
    id: StringEnum
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 35
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Helper class for working with 'extended' enums using <xref href="netDxf.StringValueAttribute" data-throw-if-not-resolved="false"></xref> attributes.
  example: []
  syntax:
    content: 'public class StringEnum<T> where T : Enum'
    typeParameters:
    - id: T
    content.vb: Public Class StringEnum(Of T As [Enum])
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: StringEnum(Of T)
  fullName.vb: netDxf.StringEnum(Of T)
  name.vb: StringEnum(Of T)
- uid: netDxf.StringEnum`1.#ctor
  commentId: M:netDxf.StringEnum`1.#ctor
  id: '#ctor'
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: StringEnum()
  nameWithType: StringEnum<T>.StringEnum()
  fullName: netDxf.StringEnum<T>.StringEnum()
  type: Constructor
  source:
    id: .ctor
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 48
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Creates a new <xref href="netDxf.StringEnum%601" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public StringEnum()
    content.vb: Public Sub New()
  overload: netDxf.StringEnum`1.#ctor*
  nameWithType.vb: StringEnum(Of T).New()
  fullName.vb: netDxf.StringEnum(Of T).New()
  name.vb: New()
- uid: netDxf.StringEnum`1.EnumType
  commentId: P:netDxf.StringEnum`1.EnumType
  id: EnumType
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: EnumType
  nameWithType: StringEnum<T>.EnumType
  fullName: netDxf.StringEnum<T>.EnumType
  type: Property
  source:
    id: EnumType
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 61
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the underlying enum type for this instance.
  example: []
  syntax:
    content: public Type EnumType { get; }
    parameters: []
    return:
      type: System.Type
      description: ''
    content.vb: Public ReadOnly Property EnumType As Type
  overload: netDxf.StringEnum`1.EnumType*
  nameWithType.vb: StringEnum(Of T).EnumType
  fullName.vb: netDxf.StringEnum(Of T).EnumType
- uid: netDxf.StringEnum`1.GetStringValues
  commentId: M:netDxf.StringEnum`1.GetStringValues
  id: GetStringValues
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: GetStringValues()
  nameWithType: StringEnum<T>.GetStringValues()
  fullName: netDxf.StringEnum<T>.GetStringValues()
  type: Method
  source:
    id: GetStringValues
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 74
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the string values associated with the enum.
  example: []
  syntax:
    content: public List<string> GetStringValues()
    return:
      type: System.Collections.Generic.List{System.String}
      description: String value array
    content.vb: Public Function GetStringValues() As List(Of String)
  overload: netDxf.StringEnum`1.GetStringValues*
  nameWithType.vb: StringEnum(Of T).GetStringValues()
  fullName.vb: netDxf.StringEnum(Of T).GetStringValues()
- uid: netDxf.StringEnum`1.GetValues
  commentId: M:netDxf.StringEnum`1.GetValues
  id: GetValues
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: GetValues()
  nameWithType: StringEnum<T>.GetValues()
  fullName: netDxf.StringEnum<T>.GetValues()
  type: Method
  source:
    id: GetValues
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 100
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets the enum entry and string value pairs.
  example: []
  syntax:
    content: public Dictionary<T, string> GetValues()
    return:
      type: System.Collections.Generic.Dictionary{{T},System.String}
      description: A dictionary containing each enum entry with its corresponding string value.
    content.vb: Public Function GetValues() As Dictionary(Of T, String)
  overload: netDxf.StringEnum`1.GetValues*
  nameWithType.vb: StringEnum(Of T).GetValues()
  fullName.vb: netDxf.StringEnum(Of T).GetValues()
- uid: netDxf.StringEnum`1.IsStringDefined(System.String)
  commentId: M:netDxf.StringEnum`1.IsStringDefined(System.String)
  id: IsStringDefined(System.String)
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: IsStringDefined(string)
  nameWithType: StringEnum<T>.IsStringDefined(string)
  fullName: netDxf.StringEnum<T>.IsStringDefined(string)
  type: Method
  source:
    id: IsStringDefined
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 132
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Return the existence of the given string value within the enum.
  example: []
  syntax:
    content: public static bool IsStringDefined(string value)
    parameters:
    - id: value
      type: System.String
      description: String value.
    return:
      type: System.Boolean
      description: Existence of the string value
    content.vb: Public Shared Function IsStringDefined(value As String) As Boolean
  overload: netDxf.StringEnum`1.IsStringDefined*
  nameWithType.vb: StringEnum(Of T).IsStringDefined(String)
  fullName.vb: netDxf.StringEnum(Of T).IsStringDefined(String)
  name.vb: IsStringDefined(String)
- uid: netDxf.StringEnum`1.IsStringDefined(System.String,System.StringComparison)
  commentId: M:netDxf.StringEnum`1.IsStringDefined(System.String,System.StringComparison)
  id: IsStringDefined(System.String,System.StringComparison)
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: IsStringDefined(string, StringComparison)
  nameWithType: StringEnum<T>.IsStringDefined(string, StringComparison)
  fullName: netDxf.StringEnum<T>.IsStringDefined(string, System.StringComparison)
  type: Method
  source:
    id: IsStringDefined
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 143
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Return the existence of the given string value within the enum.
  example: []
  syntax:
    content: public static bool IsStringDefined(string value, StringComparison comparisonType)
    parameters:
    - id: value
      type: System.String
      description: String value.
    - id: comparisonType
      type: System.StringComparison
      description: Specifies how to conduct a case-insensitive match on the supplied string value
    return:
      type: System.Boolean
      description: Existence of the string value
    content.vb: Public Shared Function IsStringDefined(value As String, comparisonType As StringComparison) As Boolean
  overload: netDxf.StringEnum`1.IsStringDefined*
  nameWithType.vb: StringEnum(Of T).IsStringDefined(String, StringComparison)
  fullName.vb: netDxf.StringEnum(Of T).IsStringDefined(String, System.StringComparison)
  name.vb: IsStringDefined(String, StringComparison)
- uid: netDxf.StringEnum`1.GetStringValue(`0)
  commentId: M:netDxf.StringEnum`1.GetStringValue(`0)
  id: GetStringValue(`0)
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: GetStringValue(T)
  nameWithType: StringEnum<T>.GetStringValue(T)
  fullName: netDxf.StringEnum<T>.GetStringValue(T)
  type: Method
  source:
    id: GetStringValue
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 159
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Gets a string value for a particular enum value.
  example: []
  syntax:
    content: public static string GetStringValue(T value)
    parameters:
    - id: value
      type: '{T}'
      description: Value.
    return:
      type: System.String
      description: String Value associated via a <xref href="netDxf.StringValueAttribute" data-throw-if-not-resolved="false"></xref> attribute, or null if not found.
    content.vb: Public Shared Function GetStringValue(value As T) As String
  overload: netDxf.StringEnum`1.GetStringValue*
  nameWithType.vb: StringEnum(Of T).GetStringValue(T)
  fullName.vb: netDxf.StringEnum(Of T).GetStringValue(T)
- uid: netDxf.StringEnum`1.Parse(System.String)
  commentId: M:netDxf.StringEnum`1.Parse(System.String)
  id: Parse(System.String)
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: Parse(string)
  nameWithType: StringEnum<T>.Parse(string)
  fullName: netDxf.StringEnum<T>.Parse(string)
  type: Method
  source:
    id: Parse
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 197
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Parses the supplied enum and string value to find an associated enum value.
  example: []
  syntax:
    content: public static T Parse(string value)
    parameters:
    - id: value
      type: System.String
      description: String value.
    return:
      type: '{T}'
      description: Enum value associated with the string value, if not found the default enum will be returned.
    content.vb: Public Shared Function Parse(value As String) As T
  overload: netDxf.StringEnum`1.Parse*
  nameWithType.vb: StringEnum(Of T).Parse(String)
  fullName.vb: netDxf.StringEnum(Of T).Parse(String)
  name.vb: Parse(String)
- uid: netDxf.StringEnum`1.Parse(System.String,System.StringComparison)
  commentId: M:netDxf.StringEnum`1.Parse(System.String,System.StringComparison)
  id: Parse(System.String,System.StringComparison)
  parent: netDxf.StringEnum`1
  langs:
  - csharp
  - vb
  name: Parse(string, StringComparison)
  nameWithType: StringEnum<T>.Parse(string, StringComparison)
  fullName: netDxf.StringEnum<T>.Parse(string, System.StringComparison)
  type: Method
  source:
    id: Parse
    path: /Users/wieslawsoltes/GitHub/DxfToCSharp/external/netDxf/netDxf/StringEnum.cs
    startLine: 208
  assemblies:
  - netDxf
  namespace: netDxf
  summary: Parses the supplied enum and string value to find an associated enum value.
  example: []
  syntax:
    content: public static T Parse(string value, StringComparison comparisonType)
    parameters:
    - id: value
      type: System.String
      description: String value.
    - id: comparisonType
      type: System.StringComparison
      description: Specifies how to conduct a case-insensitive match on the supplied string value.
    return:
      type: '{T}'
      description: Enum value associated with the string value, if not found the default enum will be returned.
    content.vb: Public Shared Function Parse(value As String, comparisonType As StringComparison) As T
  overload: netDxf.StringEnum`1.Parse*
  nameWithType.vb: StringEnum(Of T).Parse(String, StringComparison)
  fullName.vb: netDxf.StringEnum(Of T).Parse(String, System.StringComparison)
  name.vb: Parse(String, StringComparison)
references:
- uid: netDxf.StringValueAttribute
  commentId: T:netDxf.StringValueAttribute
  parent: netDxf
  href: netDxf.StringValueAttribute.html
  name: StringValueAttribute
  nameWithType: StringValueAttribute
  fullName: netDxf.StringValueAttribute
- uid: netDxf
  commentId: N:netDxf
  href: netDxf.html
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: netDxf.StringEnum`1
  commentId: T:netDxf.StringEnum`1
  href: netDxf.StringEnum-1.html
  name: StringEnum<T>
  nameWithType: StringEnum<T>
  fullName: netDxf.StringEnum<T>
  nameWithType.vb: StringEnum(Of T)
  fullName.vb: netDxf.StringEnum(Of T)
  name.vb: StringEnum(Of T)
  spec.csharp:
  - uid: netDxf.StringEnum`1
    name: StringEnum
    href: netDxf.StringEnum-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: netDxf.StringEnum`1
    name: StringEnum
    href: netDxf.StringEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: netDxf.StringEnum`1.#ctor*
  commentId: Overload:netDxf.StringEnum`1.#ctor
  href: netDxf.StringEnum-1.html#netDxf_StringEnum_1__ctor
  name: StringEnum
  nameWithType: StringEnum<T>.StringEnum
  fullName: netDxf.StringEnum<T>.StringEnum
  nameWithType.vb: StringEnum(Of T).New
  fullName.vb: netDxf.StringEnum(Of T).New
  name.vb: New
- uid: netDxf.StringEnum`1.EnumType*
  commentId: Overload:netDxf.StringEnum`1.EnumType
  href: netDxf.StringEnum-1.html#netDxf_StringEnum_1_EnumType
  name: EnumType
  nameWithType: StringEnum<T>.EnumType
  fullName: netDxf.StringEnum<T>.EnumType
  nameWithType.vb: StringEnum(Of T).EnumType
  fullName.vb: netDxf.StringEnum(Of T).EnumType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: netDxf.StringEnum`1.GetStringValues*
  commentId: Overload:netDxf.StringEnum`1.GetStringValues
  href: netDxf.StringEnum-1.html#netDxf_StringEnum_1_GetStringValues
  name: GetStringValues
  nameWithType: StringEnum<T>.GetStringValues
  fullName: netDxf.StringEnum<T>.GetStringValues
  nameWithType.vb: StringEnum(Of T).GetStringValues
  fullName.vb: netDxf.StringEnum(Of T).GetStringValues
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: netDxf.StringEnum`1.GetValues*
  commentId: Overload:netDxf.StringEnum`1.GetValues
  href: netDxf.StringEnum-1.html#netDxf_StringEnum_1_GetValues
  name: GetValues
  nameWithType: StringEnum<T>.GetValues
  fullName: netDxf.StringEnum<T>.GetValues
  nameWithType.vb: StringEnum(Of T).GetValues
  fullName.vb: netDxf.StringEnum(Of T).GetValues
- uid: System.Collections.Generic.Dictionary{{T},System.String}
  commentId: T:System.Collections.Generic.Dictionary{`0,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<T, string>
  nameWithType: Dictionary<T, string>
  fullName: System.Collections.Generic.Dictionary<T, string>
  nameWithType.vb: Dictionary(Of T, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of T, String)
  name.vb: Dictionary(Of T, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: netDxf.StringEnum`1.IsStringDefined*
  commentId: Overload:netDxf.StringEnum`1.IsStringDefined
  href: netDxf.StringEnum-1.html#netDxf_StringEnum_1_IsStringDefined_System_String_
  name: IsStringDefined
  nameWithType: StringEnum<T>.IsStringDefined
  fullName: netDxf.StringEnum<T>.IsStringDefined
  nameWithType.vb: StringEnum(Of T).IsStringDefined
  fullName.vb: netDxf.StringEnum(Of T).IsStringDefined
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.stringcomparison
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: netDxf.StringEnum`1.GetStringValue*
  commentId: Overload:netDxf.StringEnum`1.GetStringValue
  href: netDxf.StringEnum-1.html#netDxf_StringEnum_1_GetStringValue__0_
  name: GetStringValue
  nameWithType: StringEnum<T>.GetStringValue
  fullName: netDxf.StringEnum<T>.GetStringValue
  nameWithType.vb: StringEnum(Of T).GetStringValue
  fullName.vb: netDxf.StringEnum(Of T).GetStringValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: netDxf.StringEnum`1.Parse*
  commentId: Overload:netDxf.StringEnum`1.Parse
  href: netDxf.StringEnum-1.html#netDxf_StringEnum_1_Parse_System_String_
  name: Parse
  nameWithType: StringEnum<T>.Parse
  fullName: netDxf.StringEnum<T>.Parse
  nameWithType.vb: StringEnum(Of T).Parse
  fullName.vb: netDxf.StringEnum(Of T).Parse
